{"version":3,"sources":["lib/components/Swap/Summary/index.tsx","lib/components/Row.tsx","lib/components/Button.tsx","lib/components/Column.tsx","lib/state/swap.ts","lib/components/Rule.tsx","lib/state/atoms.ts","lib/state/settings.ts","lib/components/Dialog.tsx","lib/components/TokenImg.tsx","lib/hooks/useScrollbar.ts","lib/hooks/useNativeEvent.ts","lib/hooks/useUnmount.ts","lib/components/Header.tsx","lib/components/ActionButton.tsx","lib/components/Swap/Summary/Details.tsx","lib/components/Swap/Summary/Summary.tsx"],"names":["Summary","SummaryColumn","styled","Column","ExpandoColumn","DetailsColumn","Estimate","ThemedText","Caption","Body","open","theme","dialog","priceUpdate","message","action","SummaryDialog","trade","allowedSlippage","onConfirm","inputAmount","outputAmount","executionPrice","inputCurrency","currency","outputCurrency","priceImpact","useMemo","computeRealizedPriceImpact","independentField","useAtomValue","independentFieldAtom","warning","lessThan","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","MIN_HIGH_SLIPPAGE","useState","confirmedTrade","setConfirmedTrade","doesTradeDiffer","Boolean","tradeMeaningfullyDiffers","setOpen","details","setDetails","scrollbar","useScrollbar","i18n","useLingui","title","ruled","flex","align","gap","padded","justify","input","output","usdc","formatLocaleNumber","number","sigFigs","locale","symbol","formatPrice","color","Subhead2","onClick","icon","Expando","iconProps","ref","css","Field","INPUT","formatCurrencyAmount","minimumAmountOut","OUTPUT","maximumAmountIn","onUpdate","update","undefined","Row","div","grow","children","Children","count","pad","BaseButton","button","onInteractive","onHover","outline","secondary","transparentButton","defaultColor","TextButton","SecondaryButton","IconButton","Icon","props","swapAtom","atomWithImmer","amount","nativeOnChain","SupportedChainId","AVALANCHE","pickAtom","displayTxHashAtom","atom","feeOptionsAtom","Rule","hr","scrollingEdge","anAtom","key","setter","draft","get","set","withImmer","value","derived","setTogglable","MAX_VALID_SLIPPAGE","Percent","initialSettings","maxSlippage","transactionTtl","mockTogglable","clientSideRouter","settingsAtom","atomWithReset","maxSlippageAtom","transactionTtlAtom","mockTogglableAtom","clientSideRouterAtom","Context","createContext","element","active","setActive","Provider","useRef","context","useEffect","current","inert","OnCloseContext","Header","useContext","X","Modal","borderRadius","Layer","DIALOG","Dialog","onClose","useUnmount","close","e","document","addEventListener","removeEventListener","createPortal","className","badSrcs","Set","token","srcs","useCurrencyLogoURIs","src","setSrc","find","has","onError","useCallback","add","alt","name","module","Math","sqrt","size","overflowCss","scrollbarCss","interactive","overflow","setOverflow","hasOverflow","useNativeEvent","scrollHeight","clientHeight","eventListener","UNMOUNTING","node","parent","parentElement","removeChild","child","classList","onanimationend","call","HeaderRow","largeIconCss","iconSize","Subhead1","StyledButton","Button","UpdateRow","keyframes","updateCss","Overlay","ActionButton","disabled","textColor","TransitionButton","buttonSize","AlertTriangle","Value","span","Detail","label","Details","lpFeeAmount","computeRealizedLPFeeAmount","integrator","window","location","hostname","feeOptions","rows","parsedConvenienceFee","multiply","fee","push","currencyId","priceImpactRow","toFixed","localizedFeeAmount","tradeType","TradeType","EXACT_OUTPUT","localizedMaxSent","EXACT_INPUT","slippageToleranceRow","map","detail","gain","success","error","TokenValue","change","percent","toPrecision","usdcAmount","useUSDCValue","Body2","inputUSDCValue","outputUSDCValue","computedChange","computeFiatValuePriceImpact","parseFloat","toSignificant"],"mappings":"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","file":"static/js/10.409f64a8.chunk.js","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { useLingui } from '@lingui/react'\nimport { Trade } from '@uniswap/router-sdk'\nimport { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { ALLOWED_PRICE_IMPACT_HIGH, ALLOWED_PRICE_IMPACT_MEDIUM } from 'constants/misc'\nimport { useAtomValue } from 'jotai/utils'\nimport { IconButton } from 'lib/components/Button'\nimport useScrollbar from 'lib/hooks/useScrollbar'\nimport { AlertTriangle, Expando, Info } from 'lib/icons'\nimport { MIN_HIGH_SLIPPAGE } from 'lib/state/settings'\nimport { Field, independentFieldAtom } from 'lib/state/swap'\nimport styled, { ThemedText } from 'lib/theme'\nimport formatLocaleNumber from 'lib/utils/formatLocaleNumber'\nimport { useMemo, useState } from 'react'\nimport { formatCurrencyAmount, formatPrice } from 'utils/formatCurrencyAmount'\nimport { computeRealizedPriceImpact } from 'utils/prices'\nimport { tradeMeaningfullyDiffers } from 'utils/tradeMeaningFullyDiffer'\n\nimport ActionButton from '../../ActionButton'\nimport Column from '../../Column'\nimport { Header } from '../../Dialog'\nimport Row from '../../Row'\nimport Rule from '../../Rule'\nimport Details from './Details'\nimport Summary from './Summary'\n\nexport default Summary\n\nconst SummaryColumn = styled(Column)``\nconst ExpandoColumn = styled(Column)``\nconst DetailsColumn = styled(Column)``\nconst Estimate = styled(ThemedText.Caption)``\nconst Body = styled(Column)<{ open: boolean }>`\n  height: calc(100% - 2.5em);\n\n  ${SummaryColumn} {\n    flex-grow: ${({ open }) => (open ? 0 : 1)};\n    transition: flex-grow 0.25s;\n  }\n\n  ${ExpandoColumn} {\n    flex-grow: ${({ open }) => (open ? 1 : 0)};\n    transition: flex-grow 0.25s;\n\n    ${DetailsColumn} {\n      flex-basis: ${({ open }) => (open ? 7 : 0)}em;\n      overflow-y: hidden;\n      position: relative;\n      transition: flex-basis 0.25s;\n\n      ${Column} {\n        height: 100%;\n        grid-template-rows: repeat(auto-fill, 1em);\n        padding: ${({ open }) => (open ? '0.5em 0' : 0)};\n        transition: padding 0.25s;\n\n        :after {\n          background: linear-gradient(#ffffff00, ${({ theme }) => theme.dialog});\n          bottom: 0;\n          content: '';\n          height: 0.75em;\n          pointer-events: none;\n          position: absolute;\n          width: calc(100% - 1em);\n        }\n      }\n    }\n\n    ${Estimate} {\n      max-height: ${({ open }) => (open ? 0 : 56 / 12)}em; // 2 * line-height + padding\n      min-height: 0;\n      overflow-y: hidden;\n      padding: ${({ open }) => (open ? 0 : '1em 0')};\n      transition: ${({ open }) =>\n        open\n          ? 'max-height 0.1s ease-out, padding 0.25s ease-out'\n          : 'flex-grow 0.25s ease-out, max-height 0.1s ease-in, padding 0.25s ease-out'};\n    }\n  }\n`\n\nconst priceUpdate = { message: <Trans>Price updated</Trans>, action: <Trans>Accept</Trans> }\n\ninterface SummaryDialogProps {\n  trade: Trade<Currency, Currency, TradeType>\n  allowedSlippage: Percent\n  onConfirm: () => void\n}\n\nexport function SummaryDialog({ trade, allowedSlippage, onConfirm }: SummaryDialogProps) {\n  const { inputAmount, outputAmount, executionPrice } = trade\n  const inputCurrency = inputAmount.currency\n  const outputCurrency = outputAmount.currency\n  const priceImpact = useMemo(() => computeRealizedPriceImpact(trade), [trade])\n\n  const independentField = useAtomValue(independentFieldAtom)\n\n  const warning = useMemo(() => {\n    if (!priceImpact.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 'error'\n    if (!priceImpact.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 'warning'\n    if (!allowedSlippage.lessThan(MIN_HIGH_SLIPPAGE)) return 'warning'\n    return\n  }, [allowedSlippage, priceImpact])\n\n  const [confirmedTrade, setConfirmedTrade] = useState(trade)\n  const doesTradeDiffer = useMemo(\n    () => Boolean(trade && confirmedTrade && tradeMeaningfullyDiffers(trade, confirmedTrade)),\n    [confirmedTrade, trade]\n  )\n  const [open, setOpen] = useState(false)\n\n  const [details, setDetails] = useState<HTMLDivElement | null>(null)\n\n  const scrollbar = useScrollbar(details)\n\n  const { i18n } = useLingui()\n\n  if (!(inputAmount && outputAmount && inputCurrency && outputCurrency)) {\n    return null\n  }\n\n  return (\n    <>\n      <Header title={<Trans>Swap summary</Trans>} ruled />\n      <Body flex align=\"stretch\" gap={0.75} padded open={open}>\n        <SummaryColumn gap={0.75} flex justify=\"center\">\n          <Summary input={inputAmount} output={outputAmount} usdc={true} />\n          <ThemedText.Caption>\n            {formatLocaleNumber({ number: 1, sigFigs: 1, locale: i18n.locale })} {inputCurrency.symbol} ={' '}\n            {formatPrice(executionPrice, 6, i18n.locale)} {outputCurrency.symbol}\n          </ThemedText.Caption>\n        </SummaryColumn>\n        <Rule />\n        <Row>\n          <Row gap={0.5}>\n            {warning ? <AlertTriangle color={warning} /> : <Info color=\"secondary\" />}\n            <ThemedText.Subhead2 color=\"secondary\">\n              <Trans>Swap details</Trans>\n            </ThemedText.Subhead2>\n          </Row>\n          <IconButton color=\"secondary\" onClick={() => setOpen(!open)} icon={Expando} iconProps={{ open }} />\n        </Row>\n        <ExpandoColumn flex align=\"stretch\">\n          <Rule />\n          <DetailsColumn>\n            <Column gap={0.5} ref={setDetails} css={scrollbar}>\n              <Details trade={trade} allowedSlippage={allowedSlippage} />\n            </Column>\n          </DetailsColumn>\n          <Estimate color=\"secondary\">\n            <Trans>Output is estimated.</Trans>\n            {independentField === Field.INPUT && (\n              <Trans>\n                You will receive at least{' '}\n                {formatCurrencyAmount(trade.minimumAmountOut(allowedSlippage), 6, i18n.locale)} {outputCurrency.symbol}{' '}\n                or the transaction will revert.\n              </Trans>\n            )}\n            {independentField === Field.OUTPUT && (\n              <Trans>\n                You will send at most {formatCurrencyAmount(trade.maximumAmountIn(allowedSlippage), 6, i18n.locale)}{' '}\n                {inputCurrency.symbol} or the transaction will revert.\n              </Trans>\n            )}\n          </Estimate>\n          <ActionButton\n            onClick={onConfirm}\n            onUpdate={() => setConfirmedTrade(trade)}\n            update={doesTradeDiffer ? priceUpdate : undefined}\n          >\n            <Trans>Confirm swap</Trans>\n          </ActionButton>\n        </ExpandoColumn>\n      </Body>\n    </>\n  )\n}\n","import styled, { Color, Theme } from 'lib/theme'\nimport { Children, ReactNode } from 'react'\n\nconst Row = styled.div<{\n  color?: Color\n  align?: string\n  justify?: string\n  pad?: number\n  gap?: number\n  flex?: true\n  grow?: true | 'first' | 'last'\n  children?: ReactNode\n  theme: Theme\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-flow: wrap;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: column;\n  grid-template-columns: ${({ grow, children }) => {\n    if (grow === 'first') return '1fr'\n    if (grow === 'last') return `repeat(${Children.count(children) - 1}, auto) 1fr`\n    if (grow) return `repeat(${Children.count(children)}, 1fr)`\n    return undefined\n  }};\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ pad }) => pad && `0 ${pad}em`};\n`\n\nexport default Row\n","import { Icon } from 'lib/icons'\nimport styled, { Color } from 'lib/theme'\nimport { ComponentProps } from 'react'\n\nexport const BaseButton = styled.button`\n  background-color: transparent;\n  border: none;\n  border-radius: 0.5em;\n  color: currentColor;\n  cursor: pointer;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n\n  :disabled {\n    cursor: initial;\n    filter: saturate(0) opacity(0.4);\n  }\n`\n\nexport default styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = 'interactive', theme }) => color === 'interactive' && theme.onInteractive};\n\n  :enabled {\n    background-color: ${({ color = 'interactive', theme }) => theme[color]};\n  }\n\n  :enabled:hover {\n    background-color: ${({ color = 'interactive', theme }) => theme.onHover(theme[color])};\n  }\n\n  :disabled {\n    border: 1px solid ${({ theme }) => theme.outline};\n    color: ${({ theme }) => theme.secondary};\n    cursor: initial;\n  }\n`\n\nconst transparentButton = (defaultColor: Color) => styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = defaultColor, theme }) => theme[color]};\n\n  :enabled:hover {\n    color: ${({ color = defaultColor, theme }) => theme.onHover(theme[color])};\n  }\n`\n\nexport const TextButton = transparentButton('accent')\n\nconst SecondaryButton = transparentButton('secondary')\n\ninterface IconButtonProps {\n  icon: Icon\n  iconProps?: ComponentProps<Icon>\n}\n\nexport function IconButton({ icon: Icon, iconProps, ...props }: IconButtonProps & ComponentProps<typeof BaseButton>) {\n  return (\n    <SecondaryButton {...props}>\n      <Icon {...iconProps} />\n    </SecondaryButton>\n  )\n}\n","import styled, { Color, css, Theme } from 'lib/theme'\n\nconst Column = styled.div<{\n  align?: string\n  color?: Color\n  justify?: string\n  gap?: number\n  padded?: true\n  flex?: true\n  grow?: true\n  theme: Theme\n  css?: ReturnType<typeof css>\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-direction: column;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: row;\n  grid-template-columns: 1fr;\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ padded }) => padded && '0.75em'};\n\n  ${({ css }) => css}\n`\n\nexport default Column\n","import { Currency } from '@uniswap/sdk-core'\nimport { FeeOptions } from '@uniswap/v3-sdk'\nimport { SupportedChainId } from 'constants/chains'\nimport { nativeOnChain } from 'constants/tokens'\nimport { atom } from 'jotai'\nimport { atomWithImmer } from 'jotai/immer'\nimport { pickAtom } from 'lib/state/atoms'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport interface Swap {\n  independentField: Field\n  amount: string\n  [Field.INPUT]?: Currency\n  [Field.OUTPUT]?: Currency\n}\n\nexport const swapAtom = atomWithImmer<Swap>({\n  independentField: Field.INPUT,\n  amount: '',\n  [Field.INPUT]: nativeOnChain(SupportedChainId.AVALANCHE),\n})\n\nexport const independentFieldAtom = pickAtom(swapAtom, 'independentField')\n\n// If set to a transaction hash, that transaction will display in a status dialog.\nexport const displayTxHashAtom = atom<string | undefined>(undefined)\n\nexport const feeOptionsAtom = atom<FeeOptions | undefined>(undefined)\n","import styled from 'lib/theme'\n\nconst Rule = styled.hr<{ padded?: true; scrollingEdge?: 'top' | 'bottom' }>`\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.outline};\n  margin: 0 ${({ padded }) => (padded ? '0.75em' : 0)};\n  margin-bottom: ${({ scrollingEdge }) => (scrollingEdge === 'bottom' ? -1 : 0)}px;\n  margin-top: ${({ scrollingEdge }) => (scrollingEdge !== 'bottom' ? -1 : 0)}px;\n`\n\nexport default Rule\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { Draft } from 'immer'\nimport { atom, WritableAtom } from 'jotai'\nimport { withImmer } from 'jotai/immer'\n\n/**\n * Creates a derived atom whose value is the picked object property.\n * By default, the setter acts as a primitive atom's, changing the original atom.\n * A custom setter may also be passed, which uses an Immer Draft so that it may be mutated directly.\n */\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key]\n): WritableAtom<Value[Key], Update>\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update extends Value[Key]>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter?: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key]\n): WritableAtom<Value[Key], Update>\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update extends Value[Key]>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key] = (draft, update) =>\n    update as Draft<Value>[Key]\n): WritableAtom<Value[Key], Update> {\n  return atom(\n    (get) => get(anAtom)[key],\n    (get, set, update: Update) =>\n      set(withImmer(anAtom), (value) => {\n        const derived = setter(value[key], update)\n        value[key] = derived\n      })\n  )\n}\n\n/** Sets a togglable atom to invert its state at the next render. */\nexport function setTogglable(draft: boolean) {\n  return !draft\n}\n","import { Percent } from '@uniswap/sdk-core'\nimport { atomWithReset } from 'jotai/utils'\n\nimport { pickAtom, setTogglable } from './atoms'\n\nexport const MAX_VALID_SLIPPAGE = new Percent(1, 2)\nexport const MIN_HIGH_SLIPPAGE = new Percent(1, 100)\n\ninterface Settings {\n  maxSlippage: Percent | 'auto' // auto will cause slippage to resort to default calculation\n  transactionTtl: number | undefined\n  mockTogglable: boolean\n  clientSideRouter: boolean // whether to use the client-side router or query the remote API\n}\n\nconst initialSettings: Settings = {\n  maxSlippage: 'auto',\n  transactionTtl: undefined,\n  mockTogglable: true,\n  clientSideRouter: true,\n}\n\nexport const settingsAtom = atomWithReset(initialSettings)\nexport const maxSlippageAtom = pickAtom(settingsAtom, 'maxSlippage')\nexport const transactionTtlAtom = pickAtom(settingsAtom, 'transactionTtl')\nexport const mockTogglableAtom = pickAtom(settingsAtom, 'mockTogglable', setTogglable)\nexport const clientSideRouterAtom = pickAtom(settingsAtom, 'clientSideRouter')\n","import 'wicg-inert'\n\nimport useUnmount from 'lib/hooks/useUnmount'\nimport { X } from 'lib/icons'\nimport styled, { Color, Layer, ThemeProvider } from 'lib/theme'\nimport { createContext, ReactElement, ReactNode, useContext, useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { IconButton } from './Button'\nimport Column from './Column'\nimport { default as BaseHeader } from './Header'\nimport Rule from './Rule'\n\n// Include inert from wicg-inert\ndeclare global {\n  interface HTMLElement {\n    inert?: boolean\n  }\n}\n\nconst Context = createContext({\n  element: null as HTMLElement | null,\n  active: false,\n  setActive: (active: boolean) => undefined as void,\n})\n\ninterface ProviderProps {\n  value: HTMLElement | null\n  children: ReactNode\n}\n\nexport function Provider({ value, children }: ProviderProps) {\n  // If a Dialog is active, mark the main content inert\n  const ref = useRef<HTMLDivElement>(null)\n  const [active, setActive] = useState(false)\n  const context = { element: value, active, setActive }\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.inert = active\n    }\n  }, [active])\n  return (\n    <div ref={ref}>\n      <Context.Provider value={context}>{children}</Context.Provider>\n    </div>\n  )\n}\n\nconst OnCloseContext = createContext<() => void>(() => void 0)\n\ninterface HeaderProps {\n  title?: ReactElement\n  ruled?: boolean\n  children?: ReactNode\n}\n\nexport function Header({ title, children, ruled }: HeaderProps) {\n  return (\n    <>\n      <Column>\n        <BaseHeader title={title}>\n          {children}\n          <IconButton color=\"primary\" onClick={useContext(OnCloseContext)} icon={X} />\n        </BaseHeader>\n        {ruled && <Rule padded />}\n      </Column>\n    </>\n  )\n}\n\nexport const Modal = styled.div<{ color: Color }>`\n  background-color: ${({ color, theme }) => theme[color]};\n  border-radius: ${({ theme }) => theme.borderRadius * 0.75}em;\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 0.5em);\n  left: 0;\n  margin: 0.25em;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  width: calc(100% - 0.5em);\n  z-index: ${Layer.DIALOG};\n`\n\ninterface DialogProps {\n  color: Color\n  children: ReactNode\n  onClose?: () => void\n}\n\nexport default function Dialog({ color, children, onClose = () => void 0 }: DialogProps) {\n  const context = useContext(Context)\n  useEffect(() => {\n    context.setActive(true)\n    return () => context.setActive(false)\n  }, [context])\n  const dialog = useRef<HTMLDivElement>(null)\n  useUnmount(dialog)\n  useEffect(() => {\n    const close = (e: KeyboardEvent) => e.key === 'Escape' && onClose?.()\n    document.addEventListener('keydown', close, true)\n    return () => document.removeEventListener('keydown', close, true)\n  }, [onClose])\n  return (\n    context.element &&\n    createPortal(\n      <ThemeProvider>\n        <Modal className=\"dialog\" color={color} ref={dialog}>\n          <OnCloseContext.Provider value={onClose}>{children}</OnCloseContext.Provider>\n        </Modal>\n      </ThemeProvider>,\n      context.element\n    )\n  )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport useCurrencyLogoURIs from 'lib/hooks/useCurrencyLogoURIs'\nimport { Slash } from 'lib/icons'\nimport styled from 'lib/theme'\nimport { useCallback, useEffect, useState } from 'react'\n\nconst badSrcs = new Set<string>()\n\ninterface TokenImgProps {\n  className?: string\n  token: Currency\n}\n\nfunction TokenImg({ className, token }: TokenImgProps) {\n  const srcs = useCurrencyLogoURIs(token)\n  const [src, setSrc] = useState<string | undefined>()\n  useEffect(() => {\n    setSrc(srcs.find((src) => !badSrcs.has(src)))\n  }, [srcs])\n  const onError = useCallback(() => {\n    if (src) badSrcs.add(src)\n    setSrc(srcs.find((src) => !badSrcs.has(src)))\n  }, [src, srcs])\n\n  if (src) {\n    return <img className={className} src={src} alt={token.name || token.symbol} onError={onError} />\n  }\n  return <Slash className={className} color=\"secondary\" />\n}\n\nexport default styled(TokenImg)<{ size?: number }>`\n  // radial-gradient calculates distance from the corner, not the edge: divide by sqrt(2)\n  background: radial-gradient(\n    ${({ theme }) => theme.module} calc(100% / ${Math.sqrt(2)} - 1.5px),\n    ${({ theme }) => theme.outline} calc(100% / ${Math.sqrt(2)} - 1.5px)\n  );\n  border-radius: 100%;\n  height: ${({ size }) => size || 1}em;\n  width: ${({ size }) => size || 1}em;\n`\n","import { css } from 'lib/theme'\nimport { useEffect, useMemo, useState } from 'react'\n\nimport useNativeEvent from './useNativeEvent'\n\nconst overflowCss = css`\n  overflow-y: scroll;\n`\n\n/** Customizes the scrollbar for vertical overflow. */\nconst scrollbarCss = (padded: boolean) => css`\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 1.25em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: radial-gradient(\n        closest-corner at 0.25em 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        transparent 0.25em\n      ),\n      linear-gradient(\n        to bottom,\n        #ffffff00 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        ${({ theme }) => theme.interactive} calc(100% - 0.25em),\n        #ffffff00 calc(100% - 0.25em)\n      ),\n      radial-gradient(\n        closest-corner at 0.25em calc(100% - 0.25em),\n        ${({ theme }) => theme.interactive} 0.25em,\n        #ffffff00 0.25em\n      );\n    background-clip: padding-box;\n    border: none;\n    ${padded ? 'border-right' : 'border-left'}: 0.75em solid transparent;\n  }\n\n  @supports not selector(::-webkit-scrollbar-thumb) {\n    scrollbar-color: ${({ theme }) => theme.interactive} transparent;\n  }\n`\n\ninterface ScrollbarOptions {\n  padded?: boolean\n}\n\nexport default function useScrollbar(element: HTMLElement | null, { padded = false }: ScrollbarOptions = {}) {\n  const [overflow, setOverflow] = useState(true)\n  useEffect(() => {\n    setOverflow(hasOverflow(element))\n  }, [element])\n  useNativeEvent(element, 'transitionend', () => setOverflow(hasOverflow(element)))\n  return useMemo(() => (overflow ? scrollbarCss(padded) : overflowCss), [overflow, padded])\n\n  function hasOverflow(element: HTMLElement | null) {\n    if (!element) {\n      return true\n    }\n    return element.scrollHeight > element.clientHeight\n  }\n}\n","import { useEffect } from 'react'\n\nexport default function useNativeEvent(\n  element: HTMLElement | null,\n  ...eventListener: Parameters<HTMLElement['addEventListener']>\n) {\n  useEffect(() => {\n    element?.addEventListener(...eventListener)\n    return () => element?.removeEventListener(...eventListener)\n  }, [element, eventListener])\n}\n","import { RefObject, useEffect } from 'react'\n\nexport const UNMOUNTING = 'unmounting'\n\n/**\n * Delays a node's unmounting so that an animation may be applied.\n * An animation *must* be applied, or the node will not unmount.\n */\nexport default function useUnmount(node: RefObject<HTMLElement>) {\n  useEffect(() => {\n    const current = node.current\n    const parent = current?.parentElement\n    const removeChild = parent?.removeChild\n    if (parent && removeChild) {\n      parent.removeChild = function <T extends Node>(child: T) {\n        if ((child as Node) === current) {\n          current.classList.add(UNMOUNTING)\n          current.onanimationend = () => {\n            removeChild.call(parent, child)\n          }\n          return child\n        } else {\n          return removeChild.call(parent, child) as T\n        }\n      }\n    }\n    return () => {\n      if (parent && removeChild) {\n        parent.removeChild = removeChild\n      }\n    }\n  }, [node])\n}\n","import { largeIconCss } from 'lib/icons'\nimport styled, { ThemedText } from 'lib/theme'\nimport { ReactElement, ReactNode } from 'react'\n\nimport Row from './Row'\n\nconst HeaderRow = styled(Row)`\n  height: 1.75em;\n  margin: 0 0.75em 0.75em;\n  padding-top: 0.5em;\n  ${largeIconCss}\n`\n\nexport interface HeaderProps {\n  title?: ReactElement\n  children: ReactNode\n}\n\nexport default function Header({ title, children }: HeaderProps) {\n  return (\n    <HeaderRow iconSize={1.2}>\n      <Row gap={0.5}>{title && <ThemedText.Subhead1>{title}</ThemedText.Subhead1>}</Row>\n      <Row gap={1}>{children}</Row>\n    </HeaderRow>\n  )\n}\n","import { AlertTriangle, Icon, LargeIcon } from 'lib/icons'\nimport styled, { Color, css, keyframes, ThemedText } from 'lib/theme'\nimport { ReactNode, useMemo } from 'react'\n\nimport Button from './Button'\nimport Row from './Row'\n\nconst StyledButton = styled(Button)`\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  flex-grow: 1;\n  transition: background-color 0.25s ease-out, flex-grow 0.25s ease-out, padding 0.25s ease-out;\n\n  :disabled {\n    margin: -1px;\n  }\n`\n\nconst UpdateRow = styled(Row)``\n\nconst grow = keyframes`\n  from {\n    opacity: 0;\n    width: 0;\n  }\n  to {\n    opacity: 1;\n    width: max-content;\n  }\n`\n\nconst updateCss = css`\n  border: 1px solid ${({ theme }) => theme.outline};\n  padding: calc(0.25em - 1px);\n  padding-left: calc(0.75em - 1px);\n\n  ${UpdateRow} {\n    animation: ${grow} 0.25s ease-in;\n    white-space: nowrap;\n  }\n\n  ${StyledButton} {\n    border-radius: ${({ theme }) => theme.borderRadius * 0.75}em;\n    flex-grow: 0;\n    padding: 1em;\n  }\n`\n\nexport const Overlay = styled(Row)<{ update?: boolean }>`\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  flex-direction: row-reverse;\n  min-height: 3.5em;\n  transition: padding 0.25s ease-out;\n\n  ${({ update }) => update && updateCss}\n`\n\nexport interface ActionButtonProps {\n  color?: Color\n  disabled?: boolean\n  update?: { message: ReactNode; action: ReactNode; icon?: Icon }\n  onClick: () => void\n  onUpdate?: () => void\n  children: ReactNode\n}\n\nexport default function ActionButton({\n  color = 'accent',\n  disabled,\n  update,\n  onClick,\n  onUpdate,\n  children,\n}: ActionButtonProps) {\n  const textColor = useMemo(() => (color === 'accent' && !disabled ? 'onAccent' : 'currentColor'), [color, disabled])\n  return (\n    <Overlay update={Boolean(update)} flex align=\"stretch\">\n      <StyledButton color={color} disabled={disabled} onClick={update ? onUpdate : onClick}>\n        <ThemedText.TransitionButton buttonSize={update ? 'medium' : 'large'} color={textColor}>\n          {update ? update.action : children}\n        </ThemedText.TransitionButton>\n      </StyledButton>\n      {update && (\n        <UpdateRow gap={0.5}>\n          <LargeIcon color=\"currentColor\" icon={update.icon || AlertTriangle} />\n          <ThemedText.Subhead2>{update?.message}</ThemedText.Subhead2>\n        </UpdateRow>\n      )}\n    </Overlay>\n  )\n}\n","import { t } from '@lingui/macro'\nimport { useLingui } from '@lingui/react'\nimport { Trade } from '@uniswap/router-sdk'\nimport { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { ALLOWED_PRICE_IMPACT_HIGH, ALLOWED_PRICE_IMPACT_MEDIUM } from 'constants/misc'\nimport { useAtomValue } from 'jotai/utils'\nimport { MIN_HIGH_SLIPPAGE } from 'lib/state/settings'\nimport { feeOptionsAtom } from 'lib/state/swap'\nimport styled, { Color, ThemedText } from 'lib/theme'\nimport { useMemo } from 'react'\nimport { currencyId } from 'utils/currencyId'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\nimport { computeRealizedLPFeeAmount, computeRealizedPriceImpact } from 'utils/prices'\n\nimport Row from '../../Row'\n\nconst Value = styled.span<{ color?: Color }>`\n  color: ${({ color, theme }) => color && theme[color]};\n  white-space: nowrap;\n`\n\ninterface DetailProps {\n  label: string\n  value: string\n  color?: Color\n}\n\nfunction Detail({ label, value, color }: DetailProps) {\n  return (\n    <ThemedText.Caption>\n      <Row gap={2}>\n        <span>{label}</span>\n        <Value color={color}>{value}</Value>\n      </Row>\n    </ThemedText.Caption>\n  )\n}\n\ninterface DetailsProps {\n  trade: Trade<Currency, Currency, TradeType>\n  allowedSlippage: Percent\n}\n\nexport default function Details({ trade, allowedSlippage }: DetailsProps) {\n  const { inputAmount, outputAmount } = trade\n  const inputCurrency = inputAmount.currency\n  const outputCurrency = outputAmount.currency\n  const priceImpact = useMemo(() => computeRealizedPriceImpact(trade), [trade])\n\n  const lpFeeAmount = useMemo(() => computeRealizedLPFeeAmount(trade), [trade])\n\n  const integrator = window.location.hostname\n  const feeOptions = useAtomValue(feeOptionsAtom)\n\n  const { i18n } = useLingui()\n  const details = useMemo(() => {\n    const rows = []\n    // @TODO(ianlapham): Check that provider fee is even a valid list item\n\n    if (feeOptions) {\n      const parsedConvenienceFee = formatCurrencyAmount(outputAmount.multiply(feeOptions.fee), 6, i18n.locale)\n      rows.push([\n        t`${integrator} fee`,\n        `${parsedConvenienceFee} ${outputCurrency.symbol || currencyId(outputCurrency)}`,\n      ])\n    }\n\n    const priceImpactRow = [t`Price impact`, `${priceImpact.toFixed(2)}%`]\n    if (!priceImpact.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n      priceImpactRow.push('error')\n    } else if (!priceImpact.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) {\n      priceImpactRow.push('warning')\n    }\n    rows.push(priceImpactRow)\n\n    if (lpFeeAmount) {\n      const localizedFeeAmount = formatCurrencyAmount(lpFeeAmount, 6, i18n.locale)\n      rows.push([\n        t`Liquidity provider fee`,\n        `${localizedFeeAmount} ${inputCurrency.symbol || currencyId(inputCurrency)}`,\n      ])\n    }\n\n    if (trade.tradeType === TradeType.EXACT_OUTPUT) {\n      const localizedMaxSent = formatCurrencyAmount(trade.maximumAmountIn(allowedSlippage), 6, i18n.locale)\n      rows.push([t`Maximum sent`, `${localizedMaxSent} ${inputCurrency.symbol}`])\n    }\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      const localizedMaxSent = formatCurrencyAmount(trade.minimumAmountOut(allowedSlippage), 6, i18n.locale)\n      rows.push([t`Minimum received`, `${localizedMaxSent} ${outputCurrency.symbol}`])\n    }\n\n    const slippageToleranceRow = [t`Slippage tolerance`, `${allowedSlippage.toFixed(2)}%`]\n    if (!allowedSlippage.lessThan(MIN_HIGH_SLIPPAGE)) {\n      slippageToleranceRow.push('warning')\n    }\n    rows.push(slippageToleranceRow)\n\n    return rows\n  }, [\n    feeOptions,\n    priceImpact,\n    lpFeeAmount,\n    trade,\n    allowedSlippage,\n    outputAmount,\n    i18n.locale,\n    integrator,\n    outputCurrency,\n    inputCurrency,\n  ])\n  return (\n    <>\n      {details.map(([label, detail, color]) => (\n        <Detail key={label} label={label} value={detail} color={color as Color} />\n      ))}\n    </>\n  )\n}\n","import { useLingui } from '@lingui/react'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { useUSDCValue } from 'hooks/useUSDCPrice'\nimport { ArrowRight } from 'lib/icons'\nimport styled from 'lib/theme'\nimport { ThemedText } from 'lib/theme'\nimport { useMemo } from 'react'\nimport { computeFiatValuePriceImpact } from 'utils/computeFiatValuePriceImpact'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\n\nimport Column from '../../Column'\nimport Row from '../../Row'\nimport TokenImg from '../../TokenImg'\n\nconst Percent = styled.span<{ gain: boolean }>`\n  color: ${({ gain, theme }) => (gain ? theme.success : theme.error)};\n`\n\ninterface TokenValueProps {\n  input: CurrencyAmount<Currency>\n  usdc?: boolean\n  change?: number\n}\n\nfunction TokenValue({ input, usdc, change }: TokenValueProps) {\n  const { i18n } = useLingui()\n  const percent = useMemo(() => {\n    if (change) {\n      const percent = change.toPrecision(3)\n      return change > 0 ? `(+${percent}%)` : `(${percent}%)`\n    }\n    return undefined\n  }, [change])\n\n  const usdcAmount = useUSDCValue(input)\n\n  return (\n    <Column justify=\"flex-start\">\n      <Row gap={0.375} justify=\"flex-start\">\n        <TokenImg token={input.currency} />\n        <ThemedText.Body2>\n          {formatCurrencyAmount(input, 6, i18n.locale)} {input.currency.symbol}\n        </ThemedText.Body2>\n      </Row>\n      {usdc && usdcAmount && (\n        <Row justify=\"flex-start\">\n          <ThemedText.Caption color=\"secondary\">\n            ${formatCurrencyAmount(usdcAmount, 2, i18n.locale)}\n            {change && <Percent gain={change > 0}> {percent}</Percent>}\n          </ThemedText.Caption>\n        </Row>\n      )}\n    </Column>\n  )\n}\n\ninterface SummaryProps {\n  input: CurrencyAmount<Currency>\n  output: CurrencyAmount<Currency>\n  usdc?: boolean\n}\n\nexport default function Summary({ input, output, usdc }: SummaryProps) {\n  const inputUSDCValue = useUSDCValue(input)\n  const outputUSDCValue = useUSDCValue(output)\n\n  const priceImpact = useMemo(() => {\n    const computedChange = computeFiatValuePriceImpact(inputUSDCValue, outputUSDCValue)\n    return computedChange ? parseFloat(computedChange.multiply(-1)?.toSignificant(3)) : undefined\n  }, [inputUSDCValue, outputUSDCValue])\n\n  return (\n    <Row gap={usdc ? 1 : 0.25}>\n      <TokenValue input={input} usdc={usdc} />\n      <ArrowRight />\n      <TokenValue input={output} usdc={usdc} change={priceImpact} />\n    </Row>\n  )\n}\n"],"sourceRoot":""}