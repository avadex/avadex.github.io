{"version":3,"sources":["lib/components/Row.tsx","lib/components/Button.tsx","lib/components/Column.tsx","lib/components/Rule.tsx","lib/components/Dialog.tsx","lib/hooks/useUnmount.ts","lib/components/Header.tsx","lib/components/Swap/Status.fixture.tsx"],"names":["Row","styled","div","align","color","theme","flex","grow","gap","children","Children","count","justify","pad","BaseButton","button","onInteractive","onHover","outline","secondary","transparentButton","defaultColor","TextButton","SecondaryButton","IconButton","Icon","icon","iconProps","props","Column","padded","css","Rule","hr","scrollingEdge","Context","createContext","element","active","setActive","Provider","value","ref","useRef","useState","context","useEffect","current","inert","OnCloseContext","Header","title","ruled","onClick","useContext","X","Modal","borderRadius","Layer","DIALOG","Dialog","onClose","dialog","useUnmount","close","e","key","document","addEventListener","removeEventListener","createPortal","className","UNMOUNTING","node","parent","parentElement","removeChild","child","classList","add","onanimationend","call","HeaderRow","largeIconCss","iconSize","Subhead1","Fixture"],"mappings":"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","file":"static/js/56.f36426de.chunk.js","sourcesContent":["import styled, { Color, Theme } from 'lib/theme'\nimport { Children, ReactNode } from 'react'\n\nconst Row = styled.div<{\n  color?: Color\n  align?: string\n  justify?: string\n  pad?: number\n  gap?: number\n  flex?: true\n  grow?: true | 'first' | 'last'\n  children?: ReactNode\n  theme: Theme\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-flow: wrap;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: column;\n  grid-template-columns: ${({ grow, children }) => {\n    if (grow === 'first') return '1fr'\n    if (grow === 'last') return `repeat(${Children.count(children) - 1}, auto) 1fr`\n    if (grow) return `repeat(${Children.count(children)}, 1fr)`\n    return undefined\n  }};\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ pad }) => pad && `0 ${pad}em`};\n`\n\nexport default Row\n","import { Icon } from 'lib/icons'\nimport styled, { Color } from 'lib/theme'\nimport { ComponentProps } from 'react'\n\nexport const BaseButton = styled.button`\n  background-color: transparent;\n  border: none;\n  border-radius: 0.5em;\n  color: currentColor;\n  cursor: pointer;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n\n  :disabled {\n    cursor: initial;\n    filter: saturate(0) opacity(0.4);\n  }\n`\n\nexport default styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = 'interactive', theme }) => color === 'interactive' && theme.onInteractive};\n\n  :enabled {\n    background-color: ${({ color = 'interactive', theme }) => theme[color]};\n  }\n\n  :enabled:hover {\n    background-color: ${({ color = 'interactive', theme }) => theme.onHover(theme[color])};\n  }\n\n  :disabled {\n    border: 1px solid ${({ theme }) => theme.outline};\n    color: ${({ theme }) => theme.secondary};\n    cursor: initial;\n  }\n`\n\nconst transparentButton = (defaultColor: Color) => styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = defaultColor, theme }) => theme[color]};\n\n  :enabled:hover {\n    color: ${({ color = defaultColor, theme }) => theme.onHover(theme[color])};\n  }\n`\n\nexport const TextButton = transparentButton('accent')\n\nconst SecondaryButton = transparentButton('secondary')\n\ninterface IconButtonProps {\n  icon: Icon\n  iconProps?: ComponentProps<Icon>\n}\n\nexport function IconButton({ icon: Icon, iconProps, ...props }: IconButtonProps & ComponentProps<typeof BaseButton>) {\n  return (\n    <SecondaryButton {...props}>\n      <Icon {...iconProps} />\n    </SecondaryButton>\n  )\n}\n","import styled, { Color, css, Theme } from 'lib/theme'\n\nconst Column = styled.div<{\n  align?: string\n  color?: Color\n  justify?: string\n  gap?: number\n  padded?: true\n  flex?: true\n  grow?: true\n  theme: Theme\n  css?: ReturnType<typeof css>\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-direction: column;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: row;\n  grid-template-columns: 1fr;\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ padded }) => padded && '0.75em'};\n\n  ${({ css }) => css}\n`\n\nexport default Column\n","import styled from 'lib/theme'\n\nconst Rule = styled.hr<{ padded?: true; scrollingEdge?: 'top' | 'bottom' }>`\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.outline};\n  margin: 0 ${({ padded }) => (padded ? '0.75em' : 0)};\n  margin-bottom: ${({ scrollingEdge }) => (scrollingEdge === 'bottom' ? -1 : 0)}px;\n  margin-top: ${({ scrollingEdge }) => (scrollingEdge !== 'bottom' ? -1 : 0)}px;\n`\n\nexport default Rule\n","import 'wicg-inert'\n\nimport useUnmount from 'lib/hooks/useUnmount'\nimport { X } from 'lib/icons'\nimport styled, { Color, Layer, ThemeProvider } from 'lib/theme'\nimport { createContext, ReactElement, ReactNode, useContext, useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { IconButton } from './Button'\nimport Column from './Column'\nimport { default as BaseHeader } from './Header'\nimport Rule from './Rule'\n\n// Include inert from wicg-inert\ndeclare global {\n  interface HTMLElement {\n    inert?: boolean\n  }\n}\n\nconst Context = createContext({\n  element: null as HTMLElement | null,\n  active: false,\n  setActive: (active: boolean) => undefined as void,\n})\n\ninterface ProviderProps {\n  value: HTMLElement | null\n  children: ReactNode\n}\n\nexport function Provider({ value, children }: ProviderProps) {\n  // If a Dialog is active, mark the main content inert\n  const ref = useRef<HTMLDivElement>(null)\n  const [active, setActive] = useState(false)\n  const context = { element: value, active, setActive }\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.inert = active\n    }\n  }, [active])\n  return (\n    <div ref={ref}>\n      <Context.Provider value={context}>{children}</Context.Provider>\n    </div>\n  )\n}\n\nconst OnCloseContext = createContext<() => void>(() => void 0)\n\ninterface HeaderProps {\n  title?: ReactElement\n  ruled?: boolean\n  children?: ReactNode\n}\n\nexport function Header({ title, children, ruled }: HeaderProps) {\n  return (\n    <>\n      <Column>\n        <BaseHeader title={title}>\n          {children}\n          <IconButton color=\"primary\" onClick={useContext(OnCloseContext)} icon={X} />\n        </BaseHeader>\n        {ruled && <Rule padded />}\n      </Column>\n    </>\n  )\n}\n\nexport const Modal = styled.div<{ color: Color }>`\n  background-color: ${({ color, theme }) => theme[color]};\n  border-radius: ${({ theme }) => theme.borderRadius * 0.75}em;\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 0.5em);\n  left: 0;\n  margin: 0.25em;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  width: calc(100% - 0.5em);\n  z-index: ${Layer.DIALOG};\n`\n\ninterface DialogProps {\n  color: Color\n  children: ReactNode\n  onClose?: () => void\n}\n\nexport default function Dialog({ color, children, onClose = () => void 0 }: DialogProps) {\n  const context = useContext(Context)\n  useEffect(() => {\n    context.setActive(true)\n    return () => context.setActive(false)\n  }, [context])\n  const dialog = useRef<HTMLDivElement>(null)\n  useUnmount(dialog)\n  useEffect(() => {\n    const close = (e: KeyboardEvent) => e.key === 'Escape' && onClose?.()\n    document.addEventListener('keydown', close, true)\n    return () => document.removeEventListener('keydown', close, true)\n  }, [onClose])\n  return (\n    context.element &&\n    createPortal(\n      <ThemeProvider>\n        <Modal className=\"dialog\" color={color} ref={dialog}>\n          <OnCloseContext.Provider value={onClose}>{children}</OnCloseContext.Provider>\n        </Modal>\n      </ThemeProvider>,\n      context.element\n    )\n  )\n}\n","import { RefObject, useEffect } from 'react'\n\nexport const UNMOUNTING = 'unmounting'\n\n/**\n * Delays a node's unmounting so that an animation may be applied.\n * An animation *must* be applied, or the node will not unmount.\n */\nexport default function useUnmount(node: RefObject<HTMLElement>) {\n  useEffect(() => {\n    const current = node.current\n    const parent = current?.parentElement\n    const removeChild = parent?.removeChild\n    if (parent && removeChild) {\n      parent.removeChild = function <T extends Node>(child: T) {\n        if ((child as Node) === current) {\n          current.classList.add(UNMOUNTING)\n          current.onanimationend = () => {\n            removeChild.call(parent, child)\n          }\n          return child\n        } else {\n          return removeChild.call(parent, child) as T\n        }\n      }\n    }\n    return () => {\n      if (parent && removeChild) {\n        parent.removeChild = removeChild\n      }\n    }\n  }, [node])\n}\n","import { largeIconCss } from 'lib/icons'\nimport styled, { ThemedText } from 'lib/theme'\nimport { ReactElement, ReactNode } from 'react'\n\nimport Row from './Row'\n\nconst HeaderRow = styled(Row)`\n  height: 1.75em;\n  margin: 0 0.75em 0.75em;\n  padding-top: 0.5em;\n  ${largeIconCss}\n`\n\nexport interface HeaderProps {\n  title?: ReactElement\n  children: ReactNode\n}\n\nexport default function Header({ title, children }: HeaderProps) {\n  return (\n    <HeaderRow iconSize={1.2}>\n      <Row gap={0.5}>{title && <ThemedText.Subhead1>{title}</ThemedText.Subhead1>}</Row>\n      <Row gap={1}>{children}</Row>\n    </HeaderRow>\n  )\n}\n","import { Modal } from '../Dialog'\n\nfunction Fixture() {\n  return null\n  // TODO(zzmp): Mock <StatusDialog tx={} onClose={() => void 0} />\n}\n\nexport default (\n  <Modal color=\"dialog\">\n    <Fixture />\n  </Modal>\n)\n"],"sourceRoot":""}