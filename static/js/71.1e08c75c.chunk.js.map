{"version":3,"sources":["lib/theme/styled.ts","lib/theme/type.tsx"],"names":["styled","css","styledCss","keyframes","styledKeyframes","useTheme","useStyled","ThemedProvider","StyledProvider","TextWrapper","Text","color","theme","lineHeight","TransitionTextWrapper","H1","props","className","fontSize","fontWeight","H2","H3","Subhead1","Subhead2","Body1","Body2","Caption","Badge","ButtonLarge","ButtonMedium","ButtonSmall","TransitionButton","buttonSize","small","medium","large","Code","fontFamilyCode","fontFamily"],"mappings":"wTAaeA,YAAf,QACO,IAAMC,EAAMC,MACNC,EAAYC,YACZC,EAAWC,WACXC,EAAiBC,iB,woBCVxBC,EAAcT,kBAAOU,IAAPV,CAAH,2IACN,oBAAGW,aAAH,MAAW,eAAX,WAA2BC,MAAkBD,MAExC,qBAAGE,cAGbC,EAAwBd,kBAAOS,EAAPT,CAAH,iGAIpB,SAASe,EAAGC,GACjB,OAAO,cAACP,EAAD,aAAaQ,UAAU,sBAAsBC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAGpG,SAASI,EAAGJ,GACjB,OAAO,cAACP,EAAD,aAAaQ,UAAU,sBAAsBC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAGpG,SAASK,EAAGL,GACjB,OAAO,cAACP,EAAD,aAAaQ,UAAU,sBAAsBC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAGpG,SAASM,EAASN,GACvB,OAAO,cAACP,EAAD,aAAaQ,UAAU,oBAAoBC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAGlG,SAASO,EAASP,GACvB,OAAO,cAACP,EAAD,aAAaQ,UAAU,oBAAoBC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAGlG,SAASQ,EAAMR,GACpB,OAAO,cAACP,EAAD,aAAaQ,UAAU,cAAcC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAG5F,SAASS,EAAMT,GACpB,OAAO,cAACP,EAAD,aAAaQ,UAAU,cAAcC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAG5F,SAASU,EAAQV,GACtB,OAAO,cAACP,EAAD,aAAaQ,UAAU,UAAUC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAGxF,SAASW,EAAMX,GACpB,OAAO,cAACP,EAAD,aAAaQ,UAAU,QAAQC,SAAU,EAAGC,WAAY,IAAKN,WAAW,OAAUG,IAGpF,SAASY,EAAYZ,GAC1B,OAAO,cAACP,EAAD,aAAaQ,UAAU,sBAAsBC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAGpG,SAASa,EAAab,GAC3B,OAAO,cAACP,EAAD,aAAaQ,UAAU,uBAAuBC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAGrG,SAASc,EAAYd,GAC1B,OAAO,cAACP,EAAD,aAAaQ,UAAU,sBAAsBC,SAAU,GAAIC,WAAY,IAAKN,WAAW,QAAWG,IAGpG,SAASe,EAAiBf,GAC/B,IAAMC,EAAS,wBAAoBD,EAAMgB,YACnCd,EAAW,CAAEe,MAAO,GAAIC,OAAQ,GAAIC,MAAO,IAAKnB,EAAMgB,YACtDnB,EAAU,UAAMK,EAAN,MAChB,OACE,cAACJ,EAAD,aACEG,UAAWA,EACXC,SAAUA,EACVC,WAAY,IACZN,WAAYA,GACRG,IAKH,SAASoB,EAAKpB,GACnB,IAAQqB,EAAmBhC,qBAAnBgC,eACR,OACE,cAAC5B,EAAD,aACEQ,UAAU,OACVC,SAAU,GACVC,WAAY,IACZN,WAAW,OACXyB,WAAYD,GACRrB","file":"static/js/71.1e08c75c.chunk.js","sourcesContent":["/* eslint-disable no-restricted-imports */\nimport styled, {\n  css as styledCss,\n  keyframes as styledKeyframes,\n  ThemedBaseStyledInterface,\n  ThemedCssFunction,\n  ThemeProvider as StyledProvider,\n  ThemeProviderComponent,\n  useTheme as useStyled,\n} from 'styled-components/macro'\n\nimport { ComputedTheme } from './theme'\n\nexport default styled as unknown as ThemedBaseStyledInterface<ComputedTheme>\nexport const css = styledCss as unknown as ThemedCssFunction<ComputedTheme>\nexport const keyframes = styledKeyframes\nexport const useTheme = useStyled as unknown as () => ComputedTheme\nexport const ThemedProvider = StyledProvider as unknown as ThemeProviderComponent<ComputedTheme>\n","import { Text, TextProps as TextPropsWithCss } from 'rebass'\n\nimport styled, { useTheme } from './styled'\nimport { Color } from './theme'\n\ntype TextProps = Omit<TextPropsWithCss, 'css' | 'color'> & { color?: Color }\n\nconst TextWrapper = styled(Text)<{ color?: Color; lineHeight: string }>`\n  color: ${({ color = 'currentColor', theme }) => theme[color as Color]};\n  // Avoid the need for placeholders by setting min-height to line-height.\n  min-height: ${({ lineHeight }) => lineHeight};\n`\n\nconst TransitionTextWrapper = styled(TextWrapper)`\n  transition: font-size 0.25s ease-out, line-height 0.25s ease-out;\n`\n\nexport function H1(props: TextProps) {\n  return <TextWrapper className=\"headline headline-1\" fontSize={36} fontWeight={400} lineHeight=\"36px\" {...props} />\n}\n\nexport function H2(props: TextProps) {\n  return <TextWrapper className=\"headline headline-2\" fontSize={24} fontWeight={400} lineHeight=\"32px\" {...props} />\n}\n\nexport function H3(props: TextProps) {\n  return <TextWrapper className=\"headline headline-3\" fontSize={20} fontWeight={400} lineHeight=\"20px\" {...props} />\n}\n\nexport function Subhead1(props: TextProps) {\n  return <TextWrapper className=\"subhead subhead-1\" fontSize={16} fontWeight={500} lineHeight=\"16px\" {...props} />\n}\n\nexport function Subhead2(props: TextProps) {\n  return <TextWrapper className=\"subhead subhead-2\" fontSize={14} fontWeight={500} lineHeight=\"14px\" {...props} />\n}\n\nexport function Body1(props: TextProps) {\n  return <TextWrapper className=\"body body-1\" fontSize={16} fontWeight={400} lineHeight=\"24px\" {...props} />\n}\n\nexport function Body2(props: TextProps) {\n  return <TextWrapper className=\"body body-2\" fontSize={14} fontWeight={400} lineHeight=\"20px\" {...props} />\n}\n\nexport function Caption(props: TextProps) {\n  return <TextWrapper className=\"caption\" fontSize={12} fontWeight={400} lineHeight=\"16px\" {...props} />\n}\n\nexport function Badge(props: TextProps) {\n  return <TextWrapper className=\"badge\" fontSize={8} fontWeight={600} lineHeight=\"8px\" {...props} />\n}\n\nexport function ButtonLarge(props: TextProps) {\n  return <TextWrapper className=\"button button-large\" fontSize={20} fontWeight={500} lineHeight=\"20px\" {...props} />\n}\n\nexport function ButtonMedium(props: TextProps) {\n  return <TextWrapper className=\"button button-medium\" fontSize={16} fontWeight={500} lineHeight=\"16px\" {...props} />\n}\n\nexport function ButtonSmall(props: TextProps) {\n  return <TextWrapper className=\"button button-small\" fontSize={14} fontWeight={500} lineHeight=\"14px\" {...props} />\n}\n\nexport function TransitionButton(props: TextProps & { buttonSize: 'small' | 'medium' | 'large' }) {\n  const className = `button button-${props.buttonSize}`\n  const fontSize = { small: 14, medium: 16, large: 20 }[props.buttonSize]\n  const lineHeight = `${fontSize}px`\n  return (\n    <TransitionTextWrapper\n      className={className}\n      fontSize={fontSize}\n      fontWeight={500}\n      lineHeight={lineHeight}\n      {...props}\n    />\n  )\n}\n\nexport function Code(props: TextProps) {\n  const { fontFamilyCode } = useTheme()\n  return (\n    <TextWrapper\n      className=\"code\"\n      fontSize={12}\n      fontWeight={400}\n      lineHeight=\"16px\"\n      fontFamily={fontFamilyCode}\n      {...props}\n    />\n  )\n}\n"],"sourceRoot":""}