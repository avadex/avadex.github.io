{"version":3,"sources":["lib/state/transactions.ts"],"names":["TransactionType","transactionsAtom","atomWithImmer"],"mappings":"6HAEA,4GAEYA,EAFZ,W,SAEYA,O,uBAAAA,I,gBAAAA,M,KA4CL,IAAMC,EAAmBC,wBAE7B","file":"static/js/88.c3320399.chunk.js","sourcesContent":["import { TransactionReceipt, TransactionResponse } from '@ethersproject/abstract-provider'\nimport { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { atomWithImmer } from 'jotai/immer'\n\nexport enum TransactionType {\n  APPROVAL,\n  SWAP,\n}\n\ninterface BaseTransactionInfo {\n  type: TransactionType\n  response: TransactionResponse\n}\n\nexport interface ApprovalTransactionInfo extends BaseTransactionInfo {\n  type: TransactionType.APPROVAL\n  tokenAddress: string\n  spenderAddress: string\n}\n\nexport interface SwapTransactionInfo extends BaseTransactionInfo {\n  type: TransactionType.SWAP\n  tradeType: TradeType\n  inputCurrencyAmount: CurrencyAmount<Currency>\n  outputCurrencyAmount: CurrencyAmount<Currency>\n}\n\nexport interface InputSwapTransactionInfo extends SwapTransactionInfo {\n  tradeType: TradeType.EXACT_INPUT\n  expectedOutputCurrencyAmount: string\n  minimumOutputCurrencyAmount: string\n}\n\nexport interface OutputSwapTransactionInfo extends SwapTransactionInfo {\n  tradeType: TradeType.EXACT_OUTPUT\n  expectedInputCurrencyAmount: string\n  maximumInputCurrencyAmount: string\n}\n\nexport type TransactionInfo = ApprovalTransactionInfo | SwapTransactionInfo\n\nexport interface Transaction<T extends TransactionInfo = TransactionInfo> {\n  addedTime: number\n  lastCheckedBlockNumber?: number\n  receipt?: TransactionReceipt\n  info: T\n}\n\nexport const transactionsAtom = atomWithImmer<{\n  [chainId: string]: { [hash: string]: Transaction }\n}>({})\n"],"sourceRoot":""}