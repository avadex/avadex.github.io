{"version":3,"sources":["lib/components/Row.tsx","lib/components/Button.tsx","lib/components/Column.tsx","lib/components/Rule.tsx","lib/components/Dialog.tsx","lib/hooks/useScrollbar.ts","lib/hooks/useNativeEvent.ts","lib/hooks/useUnmount.ts","lib/components/Header.tsx","lib/components/ActionButton.tsx","lib/components/Error/ErrorDialog.tsx","lib/components/Error/ErrorBoundary.tsx"],"names":["Row","styled","div","align","color","theme","flex","grow","gap","children","Children","count","justify","pad","BaseButton","button","onInteractive","onHover","outline","secondary","transparentButton","defaultColor","TextButton","SecondaryButton","IconButton","Icon","icon","iconProps","props","Column","padded","css","Rule","hr","scrollingEdge","Context","createContext","element","active","setActive","Provider","value","ref","useRef","useState","context","useEffect","current","inert","OnCloseContext","Header","title","ruled","onClick","useContext","X","Modal","borderRadius","Layer","DIALOG","Dialog","onClose","dialog","useUnmount","close","e","key","document","addEventListener","removeEventListener","createPortal","className","overflowCss","scrollbarCss","interactive","useScrollbar","overflow","setOverflow","hasOverflow","useNativeEvent","useMemo","scrollHeight","clientHeight","eventListener","UNMOUNTING","node","parent","parentElement","removeChild","child","classList","add","onanimationend","call","HeaderRow","largeIconCss","iconSize","Subhead1","StyledButton","Button","UpdateRow","keyframes","updateCss","Overlay","update","ActionButton","disabled","onUpdate","textColor","Boolean","TransitionButton","buttonSize","action","AlertTriangle","Subhead2","message","HeaderIcon","LargeIcon","StatusHeader","iconColor","style","flexGrow","size","textAlign","ErrorHeader","open","ErrorColumn","ExpandoColumn","ErrorDialog","header","error","onAction","setOpen","details","setDetails","scrollbar","height","Body2","Expando","Code","name","ErrorBoundary","state","errorInfo","this","onError","window","location","reload","React","Component"],"mappings":"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","file":"static/js/54.3605ddfb.chunk.js","sourcesContent":["import styled, { Color, Theme } from 'lib/theme'\nimport { Children, ReactNode } from 'react'\n\nconst Row = styled.div<{\n  color?: Color\n  align?: string\n  justify?: string\n  pad?: number\n  gap?: number\n  flex?: true\n  grow?: true | 'first' | 'last'\n  children?: ReactNode\n  theme: Theme\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-flow: wrap;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: column;\n  grid-template-columns: ${({ grow, children }) => {\n    if (grow === 'first') return '1fr'\n    if (grow === 'last') return `repeat(${Children.count(children) - 1}, auto) 1fr`\n    if (grow) return `repeat(${Children.count(children)}, 1fr)`\n    return undefined\n  }};\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ pad }) => pad && `0 ${pad}em`};\n`\n\nexport default Row\n","import { Icon } from 'lib/icons'\nimport styled, { Color } from 'lib/theme'\nimport { ComponentProps } from 'react'\n\nexport const BaseButton = styled.button`\n  background-color: transparent;\n  border: none;\n  border-radius: 0.5em;\n  color: currentColor;\n  cursor: pointer;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n\n  :disabled {\n    cursor: initial;\n    filter: saturate(0) opacity(0.4);\n  }\n`\n\nexport default styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = 'interactive', theme }) => color === 'interactive' && theme.onInteractive};\n\n  :enabled {\n    background-color: ${({ color = 'interactive', theme }) => theme[color]};\n  }\n\n  :enabled:hover {\n    background-color: ${({ color = 'interactive', theme }) => theme.onHover(theme[color])};\n  }\n\n  :disabled {\n    border: 1px solid ${({ theme }) => theme.outline};\n    color: ${({ theme }) => theme.secondary};\n    cursor: initial;\n  }\n`\n\nconst transparentButton = (defaultColor: Color) => styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = defaultColor, theme }) => theme[color]};\n\n  :enabled:hover {\n    color: ${({ color = defaultColor, theme }) => theme.onHover(theme[color])};\n  }\n`\n\nexport const TextButton = transparentButton('accent')\n\nconst SecondaryButton = transparentButton('secondary')\n\ninterface IconButtonProps {\n  icon: Icon\n  iconProps?: ComponentProps<Icon>\n}\n\nexport function IconButton({ icon: Icon, iconProps, ...props }: IconButtonProps & ComponentProps<typeof BaseButton>) {\n  return (\n    <SecondaryButton {...props}>\n      <Icon {...iconProps} />\n    </SecondaryButton>\n  )\n}\n","import styled, { Color, css, Theme } from 'lib/theme'\n\nconst Column = styled.div<{\n  align?: string\n  color?: Color\n  justify?: string\n  gap?: number\n  padded?: true\n  flex?: true\n  grow?: true\n  theme: Theme\n  css?: ReturnType<typeof css>\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-direction: column;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: row;\n  grid-template-columns: 1fr;\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ padded }) => padded && '0.75em'};\n\n  ${({ css }) => css}\n`\n\nexport default Column\n","import styled from 'lib/theme'\n\nconst Rule = styled.hr<{ padded?: true; scrollingEdge?: 'top' | 'bottom' }>`\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.outline};\n  margin: 0 ${({ padded }) => (padded ? '0.75em' : 0)};\n  margin-bottom: ${({ scrollingEdge }) => (scrollingEdge === 'bottom' ? -1 : 0)}px;\n  margin-top: ${({ scrollingEdge }) => (scrollingEdge !== 'bottom' ? -1 : 0)}px;\n`\n\nexport default Rule\n","import 'wicg-inert'\n\nimport useUnmount from 'lib/hooks/useUnmount'\nimport { X } from 'lib/icons'\nimport styled, { Color, Layer, ThemeProvider } from 'lib/theme'\nimport { createContext, ReactElement, ReactNode, useContext, useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { IconButton } from './Button'\nimport Column from './Column'\nimport { default as BaseHeader } from './Header'\nimport Rule from './Rule'\n\n// Include inert from wicg-inert\ndeclare global {\n  interface HTMLElement {\n    inert?: boolean\n  }\n}\n\nconst Context = createContext({\n  element: null as HTMLElement | null,\n  active: false,\n  setActive: (active: boolean) => undefined as void,\n})\n\ninterface ProviderProps {\n  value: HTMLElement | null\n  children: ReactNode\n}\n\nexport function Provider({ value, children }: ProviderProps) {\n  // If a Dialog is active, mark the main content inert\n  const ref = useRef<HTMLDivElement>(null)\n  const [active, setActive] = useState(false)\n  const context = { element: value, active, setActive }\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.inert = active\n    }\n  }, [active])\n  return (\n    <div ref={ref}>\n      <Context.Provider value={context}>{children}</Context.Provider>\n    </div>\n  )\n}\n\nconst OnCloseContext = createContext<() => void>(() => void 0)\n\ninterface HeaderProps {\n  title?: ReactElement\n  ruled?: boolean\n  children?: ReactNode\n}\n\nexport function Header({ title, children, ruled }: HeaderProps) {\n  return (\n    <>\n      <Column>\n        <BaseHeader title={title}>\n          {children}\n          <IconButton color=\"primary\" onClick={useContext(OnCloseContext)} icon={X} />\n        </BaseHeader>\n        {ruled && <Rule padded />}\n      </Column>\n    </>\n  )\n}\n\nexport const Modal = styled.div<{ color: Color }>`\n  background-color: ${({ color, theme }) => theme[color]};\n  border-radius: ${({ theme }) => theme.borderRadius * 0.75}em;\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 0.5em);\n  left: 0;\n  margin: 0.25em;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  width: calc(100% - 0.5em);\n  z-index: ${Layer.DIALOG};\n`\n\ninterface DialogProps {\n  color: Color\n  children: ReactNode\n  onClose?: () => void\n}\n\nexport default function Dialog({ color, children, onClose = () => void 0 }: DialogProps) {\n  const context = useContext(Context)\n  useEffect(() => {\n    context.setActive(true)\n    return () => context.setActive(false)\n  }, [context])\n  const dialog = useRef<HTMLDivElement>(null)\n  useUnmount(dialog)\n  useEffect(() => {\n    const close = (e: KeyboardEvent) => e.key === 'Escape' && onClose?.()\n    document.addEventListener('keydown', close, true)\n    return () => document.removeEventListener('keydown', close, true)\n  }, [onClose])\n  return (\n    context.element &&\n    createPortal(\n      <ThemeProvider>\n        <Modal className=\"dialog\" color={color} ref={dialog}>\n          <OnCloseContext.Provider value={onClose}>{children}</OnCloseContext.Provider>\n        </Modal>\n      </ThemeProvider>,\n      context.element\n    )\n  )\n}\n","import { css } from 'lib/theme'\nimport { useEffect, useMemo, useState } from 'react'\n\nimport useNativeEvent from './useNativeEvent'\n\nconst overflowCss = css`\n  overflow-y: scroll;\n`\n\n/** Customizes the scrollbar for vertical overflow. */\nconst scrollbarCss = (padded: boolean) => css`\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 1.25em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: radial-gradient(\n        closest-corner at 0.25em 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        transparent 0.25em\n      ),\n      linear-gradient(\n        to bottom,\n        #ffffff00 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        ${({ theme }) => theme.interactive} calc(100% - 0.25em),\n        #ffffff00 calc(100% - 0.25em)\n      ),\n      radial-gradient(\n        closest-corner at 0.25em calc(100% - 0.25em),\n        ${({ theme }) => theme.interactive} 0.25em,\n        #ffffff00 0.25em\n      );\n    background-clip: padding-box;\n    border: none;\n    ${padded ? 'border-right' : 'border-left'}: 0.75em solid transparent;\n  }\n\n  @supports not selector(::-webkit-scrollbar-thumb) {\n    scrollbar-color: ${({ theme }) => theme.interactive} transparent;\n  }\n`\n\ninterface ScrollbarOptions {\n  padded?: boolean\n}\n\nexport default function useScrollbar(element: HTMLElement | null, { padded = false }: ScrollbarOptions = {}) {\n  const [overflow, setOverflow] = useState(true)\n  useEffect(() => {\n    setOverflow(hasOverflow(element))\n  }, [element])\n  useNativeEvent(element, 'transitionend', () => setOverflow(hasOverflow(element)))\n  return useMemo(() => (overflow ? scrollbarCss(padded) : overflowCss), [overflow, padded])\n\n  function hasOverflow(element: HTMLElement | null) {\n    if (!element) {\n      return true\n    }\n    return element.scrollHeight > element.clientHeight\n  }\n}\n","import { useEffect } from 'react'\n\nexport default function useNativeEvent(\n  element: HTMLElement | null,\n  ...eventListener: Parameters<HTMLElement['addEventListener']>\n) {\n  useEffect(() => {\n    element?.addEventListener(...eventListener)\n    return () => element?.removeEventListener(...eventListener)\n  }, [element, eventListener])\n}\n","import { RefObject, useEffect } from 'react'\n\nexport const UNMOUNTING = 'unmounting'\n\n/**\n * Delays a node's unmounting so that an animation may be applied.\n * An animation *must* be applied, or the node will not unmount.\n */\nexport default function useUnmount(node: RefObject<HTMLElement>) {\n  useEffect(() => {\n    const current = node.current\n    const parent = current?.parentElement\n    const removeChild = parent?.removeChild\n    if (parent && removeChild) {\n      parent.removeChild = function <T extends Node>(child: T) {\n        if ((child as Node) === current) {\n          current.classList.add(UNMOUNTING)\n          current.onanimationend = () => {\n            removeChild.call(parent, child)\n          }\n          return child\n        } else {\n          return removeChild.call(parent, child) as T\n        }\n      }\n    }\n    return () => {\n      if (parent && removeChild) {\n        parent.removeChild = removeChild\n      }\n    }\n  }, [node])\n}\n","import { largeIconCss } from 'lib/icons'\nimport styled, { ThemedText } from 'lib/theme'\nimport { ReactElement, ReactNode } from 'react'\n\nimport Row from './Row'\n\nconst HeaderRow = styled(Row)`\n  height: 1.75em;\n  margin: 0 0.75em 0.75em;\n  padding-top: 0.5em;\n  ${largeIconCss}\n`\n\nexport interface HeaderProps {\n  title?: ReactElement\n  children: ReactNode\n}\n\nexport default function Header({ title, children }: HeaderProps) {\n  return (\n    <HeaderRow iconSize={1.2}>\n      <Row gap={0.5}>{title && <ThemedText.Subhead1>{title}</ThemedText.Subhead1>}</Row>\n      <Row gap={1}>{children}</Row>\n    </HeaderRow>\n  )\n}\n","import { AlertTriangle, Icon, LargeIcon } from 'lib/icons'\nimport styled, { Color, css, keyframes, ThemedText } from 'lib/theme'\nimport { ReactNode, useMemo } from 'react'\n\nimport Button from './Button'\nimport Row from './Row'\n\nconst StyledButton = styled(Button)`\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  flex-grow: 1;\n  transition: background-color 0.25s ease-out, flex-grow 0.25s ease-out, padding 0.25s ease-out;\n\n  :disabled {\n    margin: -1px;\n  }\n`\n\nconst UpdateRow = styled(Row)``\n\nconst grow = keyframes`\n  from {\n    opacity: 0;\n    width: 0;\n  }\n  to {\n    opacity: 1;\n    width: max-content;\n  }\n`\n\nconst updateCss = css`\n  border: 1px solid ${({ theme }) => theme.outline};\n  padding: calc(0.25em - 1px);\n  padding-left: calc(0.75em - 1px);\n\n  ${UpdateRow} {\n    animation: ${grow} 0.25s ease-in;\n    white-space: nowrap;\n  }\n\n  ${StyledButton} {\n    border-radius: ${({ theme }) => theme.borderRadius * 0.75}em;\n    flex-grow: 0;\n    padding: 1em;\n  }\n`\n\nexport const Overlay = styled(Row)<{ update?: boolean }>`\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  flex-direction: row-reverse;\n  min-height: 3.5em;\n  transition: padding 0.25s ease-out;\n\n  ${({ update }) => update && updateCss}\n`\n\nexport interface ActionButtonProps {\n  color?: Color\n  disabled?: boolean\n  update?: { message: ReactNode; action: ReactNode; icon?: Icon }\n  onClick: () => void\n  onUpdate?: () => void\n  children: ReactNode\n}\n\nexport default function ActionButton({\n  color = 'accent',\n  disabled,\n  update,\n  onClick,\n  onUpdate,\n  children,\n}: ActionButtonProps) {\n  const textColor = useMemo(() => (color === 'accent' && !disabled ? 'onAccent' : 'currentColor'), [color, disabled])\n  return (\n    <Overlay update={Boolean(update)} flex align=\"stretch\">\n      <StyledButton color={color} disabled={disabled} onClick={update ? onUpdate : onClick}>\n        <ThemedText.TransitionButton buttonSize={update ? 'medium' : 'large'} color={textColor}>\n          {update ? update.action : children}\n        </ThemedText.TransitionButton>\n      </StyledButton>\n      {update && (\n        <UpdateRow gap={0.5}>\n          <LargeIcon color=\"currentColor\" icon={update.icon || AlertTriangle} />\n          <ThemedText.Subhead2>{update?.message}</ThemedText.Subhead2>\n        </UpdateRow>\n      )}\n    </Overlay>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport useScrollbar from 'lib/hooks/useScrollbar'\nimport { AlertTriangle, Expando, Icon, Info, LargeIcon } from 'lib/icons'\nimport styled, { Color, ThemedText } from 'lib/theme'\nimport { ReactNode, useState } from 'react'\n\nimport ActionButton from '../ActionButton'\nimport { IconButton } from '../Button'\nimport Column from '../Column'\nimport Row from '../Row'\nimport Rule from '../Rule'\n\nconst HeaderIcon = styled(LargeIcon)`\n  flex-grow: 1;\n\n  svg {\n    transition: height 0.25s, width 0.25s;\n  }\n`\n\ninterface StatusHeaderProps {\n  icon: Icon\n  iconColor?: Color\n  iconSize?: number\n  children: ReactNode\n}\n\nexport function StatusHeader({ icon: Icon, iconColor, iconSize = 4, children }: StatusHeaderProps) {\n  return (\n    <>\n      <Column flex style={{ flexGrow: 1 }}>\n        <HeaderIcon icon={Icon} color={iconColor} size={iconSize} />\n        <Column gap={0.75} flex style={{ textAlign: 'center' }}>\n          {children}\n        </Column>\n      </Column>\n      <Rule />\n    </>\n  )\n}\n\nconst ErrorHeader = styled(Column)<{ open: boolean }>`\n  transition: gap 0.25s;\n\n  div:last-child {\n    max-height: ${({ open }) => (open ? 0 : 60 / 14)}em; // 3 * line-height\n    overflow-y: hidden;\n    transition: max-height 0.25s;\n  }\n`\nconst ErrorColumn = styled(Column)``\nconst ExpandoColumn = styled(Column)<{ open: boolean }>`\n  flex-grow: ${({ open }) => (open ? 2 : 0)};\n  transition: flex-grow 0.25s, gap 0.25s;\n\n  ${Rule} {\n    margin-bottom: ${({ open }) => (open ? 0 : 0.75)}em;\n    transition: margin-bottom 0.25s;\n  }\n\n  ${ErrorColumn} {\n    flex-basis: 0;\n    flex-grow: ${({ open }) => (open ? 1 : 0)};\n    overflow-y: hidden;\n    position: relative;\n    transition: flex-grow 0.25s;\n\n    ${Column} {\n      height: 100%;\n      padding: ${({ open }) => (open ? '0.5em 0' : 0)};\n      transition: padding 0.25s;\n\n      :after {\n        background: linear-gradient(#ffffff00, ${({ theme }) => theme.dialog});\n        bottom: 0;\n        content: '';\n        height: 0.75em;\n        pointer-events: none;\n        position: absolute;\n        width: calc(100% - 1em);\n      }\n    }\n  }\n`\n\ninterface ErrorDialogProps {\n  header?: ReactNode\n  error: Error\n  action: ReactNode\n  onAction: () => void\n}\n\nexport default function ErrorDialog({ header, error, action, onAction }: ErrorDialogProps) {\n  const [open, setOpen] = useState(false)\n  const [details, setDetails] = useState<HTMLDivElement | null>(null)\n  const scrollbar = useScrollbar(details)\n  return (\n    <Column flex padded gap={0.75} align=\"stretch\" style={{ height: '100%' }}>\n      <StatusHeader icon={AlertTriangle} iconColor=\"error\" iconSize={open ? 3 : 4}>\n        <ErrorHeader gap={open ? 0 : 0.75} open={open}>\n          <ThemedText.Subhead1>\n            <Trans>Something went wrong.</Trans>\n          </ThemedText.Subhead1>\n          <ThemedText.Body2>{header}</ThemedText.Body2>\n        </ErrorHeader>\n      </StatusHeader>\n      <Row>\n        <Row gap={0.5}>\n          <Info color=\"secondary\" />\n          <ThemedText.Subhead2 color=\"secondary\">\n            <Trans>Error details</Trans>\n          </ThemedText.Subhead2>\n        </Row>\n        <IconButton color=\"secondary\" onClick={() => setOpen(!open)} icon={Expando} iconProps={{ open }} />\n      </Row>\n      <ExpandoColumn flex align=\"stretch\" open={open}>\n        <Rule />\n        <ErrorColumn>\n          <Column gap={0.5} ref={setDetails} css={scrollbar}>\n            <ThemedText.Code>\n              {error.name}\n              {error.message ? `: ${error.message}` : ''}\n            </ThemedText.Code>\n          </Column>\n        </ErrorColumn>\n        <ActionButton onClick={onAction}>{action}</ActionButton>\n      </ExpandoColumn>\n    </Column>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React, { ErrorInfo } from 'react'\n\nimport Dialog from '../Dialog'\nimport ErrorDialog from './ErrorDialog'\n\nexport type ErrorHandler = (error: Error, info: ErrorInfo) => void\n\ninterface ErrorBoundaryProps {\n  onError?: ErrorHandler\n}\n\ntype ErrorBoundaryState = {\n  error: Error | null\n}\n\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { error }\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.props.onError?.(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Dialog color=\"dialog\">\n          <ErrorDialog\n            error={this.state.error}\n            header={<Trans>Something went wrong.</Trans>}\n            action={<Trans>Reload the page</Trans>}\n            onAction={() => window.location.reload()}\n          />\n        </Dialog>\n      )\n    }\n    return this.props.children\n  }\n}\n"],"sourceRoot":""}