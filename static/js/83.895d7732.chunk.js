(this["webpackJsonp@uniswap/widgets"]=this["webpackJsonp@uniswap/widgets"]||[]).push([[83],{713:function(e,t,a){"use strict";a.r(t);var n=a(3),r=a.n(n),s=a(25),c=a(223);describe("fetchTokenList",(function(){var e=jest.fn();it("throws on an invalid list url",Object(s.a)(r.a.mark((function t(){var a;return r.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a="https://example.com",t.next=3,expect(Object(c.default)(a,e)).rejects.toThrowError("failed to fetch list: ".concat(a));case 3:expect(e).not.toHaveBeenCalled();case 4:case"end":return t.stop()}}),t)})))),it("tries to fetch an ENS address using the passed resolver",Object(s.a)(r.a.mark((function t(){var a;return r.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a="example.eth","0xD3ADB33F",e.mockResolvedValue("0xD3ADB33F"),t.next=5,expect(Object(c.default)(a,e)).rejects.toThrow();case 5:expect(e).toHaveBeenCalledWith(a);case 6:case"end":return t.stop()}}),t)})))),it("fetches and validates the default token list",Object(s.a)(r.a.mark((function t(){var a;return r.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(c.DEFAULT_TOKEN_LIST);case 2:return t.next=4,t.sent.json();case 4:return a=t.sent,t.next=7,expect(Object(c.default)(c.DEFAULT_TOKEN_LIST,e)).resolves.toStrictEqual(a);case 7:expect(e).not.toHaveBeenCalled();case 8:case"end":return t.stop()}}),t)}))))}))}}]);
//# sourceMappingURL=83.895d7732.chunk.js.map