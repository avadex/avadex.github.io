{"version":3,"sources":["../node_modules/react-feather/dist/icons/arrow-up.js","../node_modules/react-feather/dist/icons/clock.js","../node_modules/react-feather/dist/icons/trash-2.js","../node_modules/react-feather/dist/icons/x-octagon.js","lib/hooks/swap/index.ts","lib/components/Swap/Toolbar/index.tsx","lib/components/Row.tsx","lib/components/Button.tsx","lib/state/swap.ts","lib/state/atoms.ts","lib/components/Rule.tsx","lib/state/settings.ts","lib/hooks/swap/useSwapInfo.tsx","lib/hooks/routing/useClientSideSmartOrderRouterTrade.ts","lib/hooks/useAllowedSlippage.ts","lib/hooks/swap/useBestTrade.ts","lib/components/Swap/Toolbar/RoutingTooltip.tsx","lib/components/Swap/Toolbar/Caption.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowUp","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","propTypes","PropTypes","string","oneOfType","number","displayName","Clock","cx","cy","r","Trash2","d","XOctagon","amountAtom","pickAtom","swapAtom","useSwitchSwapCurrencies","update","useUpdateAtom","useCallback","swap","oldOutput","Field","OUTPUT","INPUT","independentField","useSwapCurrency","field","atom","useMemo","otherAtom","otherField","useAtom","currency","setCurrency","otherCurrency","useAtomValue","switchSwapCurrencies","setOrSwitchCurrency","useSwapAmount","amount","independentFieldAtom","value","undefined","updateSwap","updateAmount","useIsAmountPopulated","Boolean","ToolbarRow","styled","Row","largeIconCss","Toolbar","disabled","chainId","useActiveWeb3React","useSwapInfo","trade","state","currencies","inputCurrency","outputCurrency","balance","currencyBalances","swaps","TradeState","LOADING","SYNCING","routeFound","routeIsLoading","isAmountPopulated","caption","ALL_SUPPORTED_CHAIN_IDS","includes","inputAmount","greaterThan","outputAmount","Caption","justify","gap","iconSize","div","align","theme","flex","grow","children","Children","count","pad","BaseButton","button","onInteractive","onHover","outline","secondary","transparentButton","defaultColor","TextButton","SecondaryButton","IconButton","Icon","icon","iconProps","props","atomWithImmer","nativeOnChain","SupportedChainId","AVALANCHE","displayTxHashAtom","feeOptionsAtom","anAtom","setter","draft","get","set","withImmer","derived","setTogglable","Rule","hr","padded","scrollingEdge","MAX_VALID_SLIPPAGE","Percent","MIN_HIGH_SLIPPAGE","initialSettings","autoSlippage","maxSlippage","transactionTtl","mockTogglable","clientSideRouter","settingsAtom","atomWithReset","autoSlippageAtom","maxSlippageAtom","transactionTtlAtom","mockTogglableAtom","clientSideRouterAtom","BAD_RECIPIENT_ADDRESSES","swapInfoAtom","currencyAmounts","INVALID","allowedSlippage","feeOptions","SwapInfoUpdater","setSwapInfo","swapInfo","account","to","relevantTokenBalances","useCurrencyBalances","isExactIn","parsedAmount","tryParseCurrencyAmount","useBestTrade","TradeType","EXACT_INPUT","EXACT_OUTPUT","useAllowedSlippage","inputError","formattedTo","isAddress","maximumAmountIn","balanceIn","amountIn","lessThan","symbol","useComputeSwapInfo","useEffect","config","protocols","Protocol","V2","V3","useClientSideSmartOrderRouterTrade","tradeType","amountSpecified","library","currencyIn","currencyOut","queryArgs","useRoutingAPIArguments","tokenIn","tokenOut","useClientSideRouter","params","provider","useState","loading","setLoading","quoteResult","error","setFetchedResult","a","getClientSideQuote","result","data","fetchQuote","route","computeRoutes","gasUseEstimateUSD","useStablecoinAmountFromFiatValue","otherAmount","CurrencyAmount","fromRawAmount","quote","NO_ROUTE_FOUND","transformRoutesToTrade","VALID","e","console","debug","toPercent","numerator","Math","floor","useMaxSlippage","useAutoSlippageTolerance","useDebounce","debouncedAmount","debouncedOtherCurrency","clientSORTrade","getTradeInputs","amountFromLatestTrade","currencyFromTrade","otherCurrencyFromTrade","debouncing","syncing","amounts","indepdenentCurrencies","dependentCurrencies","amountsMatch","equalTo","currenciesMatch","equals","isTradeDebouncing","useFallback","fallbackTrade","useClientSideV3Trade","RoutingTooltip","AlertTriangle","ConnectWallet","UnsupportedNetwork","InsufficientBalance","InsufficientLiquidity","Empty","Info","LoadingTrade","Spinner","Trade","flip","setFlip","executionPrice","fiatValueInput","useUSDCPrice","fiatValueOutput","ratio","b","priceString","invert","toSignificant","usdc","style","userSelect","onClick"],"mappings":"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","file":"static/js/7.dae12233.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowUp = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"19\",\n    x2: \"12\",\n    y2: \"5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"5 12 12 5 19 12\"\n  }));\n});\nArrowUp.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowUp.displayName = 'ArrowUp';\nexport default ArrowUp;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Clock = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 6 12 12 16 14\"\n  }));\n});\nClock.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nClock.displayName = 'Clock';\nexport default Clock;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar XOctagon = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"15\",\n    y2: \"15\"\n  }));\n});\nXOctagon.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nXOctagon.displayName = 'XOctagon';\nexport default XOctagon;","import { Currency } from '@uniswap/sdk-core'\nimport { useAtom } from 'jotai'\nimport { useAtomValue, useUpdateAtom } from 'jotai/utils'\nimport { pickAtom } from 'lib/state/atoms'\nimport { Field, independentFieldAtom, swapAtom } from 'lib/state/swap'\nimport { useCallback, useMemo } from 'react'\nexport { default as useSwapInfo } from './useSwapInfo'\n\nexport const amountAtom = pickAtom(swapAtom, 'amount')\n\nfunction otherField(field: Field) {\n  switch (field) {\n    case Field.INPUT:\n      return Field.OUTPUT\n      break\n    case Field.OUTPUT:\n      return Field.INPUT\n      break\n  }\n}\n\nexport function useSwitchSwapCurrencies() {\n  const update = useUpdateAtom(swapAtom)\n  return useCallback(() => {\n    update((swap) => {\n      const oldOutput = swap[Field.OUTPUT]\n      swap[Field.OUTPUT] = swap[Field.INPUT]\n      swap[Field.INPUT] = oldOutput\n      switch (swap.independentField) {\n        case Field.INPUT:\n          swap.independentField = Field.OUTPUT\n          break\n        case Field.OUTPUT:\n          swap.independentField = Field.INPUT\n          break\n      }\n    })\n  }, [update])\n}\n\nexport function useSwapCurrency(field: Field): [Currency | undefined, (currency?: Currency) => void] {\n  const atom = useMemo(() => pickAtom(swapAtom, field), [field])\n  const otherAtom = useMemo(() => pickAtom(swapAtom, otherField(field)), [field])\n  const [currency, setCurrency] = useAtom(atom)\n  const otherCurrency = useAtomValue(otherAtom)\n  const switchSwapCurrencies = useSwitchSwapCurrencies()\n  const setOrSwitchCurrency = useCallback(\n    (currency?: Currency) => {\n      if (currency === otherCurrency) {\n        switchSwapCurrencies()\n      } else {\n        setCurrency(currency)\n      }\n    },\n    [otherCurrency, setCurrency, switchSwapCurrencies]\n  )\n  return [currency, setOrSwitchCurrency]\n}\n\nexport function useSwapAmount(field: Field): [string | undefined, (amount: string) => void] {\n  const amount = useAtomValue(amountAtom)\n  const independentField = useAtomValue(independentFieldAtom)\n  const value = useMemo(() => (independentField === field ? amount : undefined), [amount, independentField, field])\n  const updateSwap = useUpdateAtom(swapAtom)\n  const updateAmount = useCallback(\n    (amount: string) =>\n      updateSwap((swap) => {\n        swap.independentField = field\n        swap.amount = amount\n      }),\n    [field, updateSwap]\n  )\n  return [value, updateAmount]\n}\n\n// check if any amount has been entered by user\nexport function useIsAmountPopulated() {\n  return Boolean(useAtomValue(amountAtom))\n}\n","import { ALL_SUPPORTED_CHAIN_IDS } from 'constants/chains'\nimport { useIsAmountPopulated, useSwapInfo } from 'lib/hooks/swap'\nimport useActiveWeb3React from 'lib/hooks/useActiveWeb3React'\nimport { largeIconCss } from 'lib/icons'\nimport { Field } from 'lib/state/swap'\nimport styled, { ThemedText } from 'lib/theme'\nimport { useMemo } from 'react'\nimport { TradeState } from 'state/routing/types'\n\nimport Row from '../../Row'\nimport Rule from '../../Rule'\nimport * as Caption from './Caption'\n\nconst ToolbarRow = styled(Row)`\n  padding: 0.5em 0;\n  ${largeIconCss}\n`\n\nexport default function Toolbar({ disabled }: { disabled?: boolean }) {\n  const { chainId } = useActiveWeb3React()\n  const {\n    trade: { trade, state },\n    currencies: { [Field.INPUT]: inputCurrency, [Field.OUTPUT]: outputCurrency },\n    currencyBalances: { [Field.INPUT]: balance },\n  } = useSwapInfo()\n\n  const [routeFound, routeIsLoading] = useMemo(\n    () => [Boolean(trade?.swaps), TradeState.LOADING === state || TradeState.SYNCING === state],\n    [state, trade?.swaps]\n  )\n\n  const isAmountPopulated = useIsAmountPopulated()\n\n  const caption = useMemo(() => {\n    if (disabled) {\n      return <Caption.ConnectWallet />\n    }\n\n    if (chainId && !ALL_SUPPORTED_CHAIN_IDS.includes(chainId)) {\n      return <Caption.UnsupportedNetwork />\n    }\n\n    if (balance && trade?.inputAmount.greaterThan(balance)) {\n      return <Caption.InsufficientBalance currency={trade.inputAmount.currency} />\n    }\n\n    if (inputCurrency && outputCurrency && isAmountPopulated) {\n      if (!trade || routeIsLoading) {\n        return <Caption.LoadingTrade />\n      }\n      if (!routeFound) {\n        return <Caption.InsufficientLiquidity />\n      }\n      if (trade.inputAmount && trade.outputAmount) {\n        return <Caption.Trade trade={trade} />\n      }\n    }\n\n    return <Caption.Empty />\n  }, [balance, chainId, disabled, inputCurrency, isAmountPopulated, outputCurrency, routeFound, routeIsLoading, trade])\n\n  return (\n    <>\n      <Rule />\n      <ThemedText.Caption>\n        <ToolbarRow justify=\"flex-start\" gap={0.5} iconSize={4 / 3}>\n          {caption}\n        </ToolbarRow>\n      </ThemedText.Caption>\n    </>\n  )\n}\n","import styled, { Color, Theme } from 'lib/theme'\nimport { Children, ReactNode } from 'react'\n\nconst Row = styled.div<{\n  color?: Color\n  align?: string\n  justify?: string\n  pad?: number\n  gap?: number\n  flex?: true\n  grow?: true | 'first' | 'last'\n  children?: ReactNode\n  theme: Theme\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-flow: wrap;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: column;\n  grid-template-columns: ${({ grow, children }) => {\n    if (grow === 'first') return '1fr'\n    if (grow === 'last') return `repeat(${Children.count(children) - 1}, auto) 1fr`\n    if (grow) return `repeat(${Children.count(children)}, 1fr)`\n    return undefined\n  }};\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ pad }) => pad && `0 ${pad}em`};\n`\n\nexport default Row\n","import { Icon } from 'lib/icons'\nimport styled, { Color } from 'lib/theme'\nimport { ComponentProps } from 'react'\n\nexport const BaseButton = styled.button`\n  background-color: transparent;\n  border: none;\n  border-radius: 0.5em;\n  color: currentColor;\n  cursor: pointer;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n\n  :disabled {\n    cursor: initial;\n    filter: saturate(0) opacity(0.4);\n  }\n`\n\nexport default styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = 'interactive', theme }) => color === 'interactive' && theme.onInteractive};\n\n  :enabled {\n    background-color: ${({ color = 'interactive', theme }) => theme[color]};\n  }\n\n  :enabled:hover {\n    background-color: ${({ color = 'interactive', theme }) => theme.onHover(theme[color])};\n  }\n\n  :disabled {\n    border: 1px solid ${({ theme }) => theme.outline};\n    color: ${({ theme }) => theme.secondary};\n    cursor: initial;\n  }\n`\n\nconst transparentButton = (defaultColor: Color) => styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = defaultColor, theme }) => theme[color]};\n\n  :enabled:hover {\n    color: ${({ color = defaultColor, theme }) => theme.onHover(theme[color])};\n  }\n`\n\nexport const TextButton = transparentButton('accent')\n\nconst SecondaryButton = transparentButton('secondary')\n\ninterface IconButtonProps {\n  icon: Icon\n  iconProps?: ComponentProps<Icon>\n}\n\nexport function IconButton({ icon: Icon, iconProps, ...props }: IconButtonProps & ComponentProps<typeof BaseButton>) {\n  return (\n    <SecondaryButton {...props}>\n      <Icon {...iconProps} />\n    </SecondaryButton>\n  )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { FeeOptions } from '@uniswap/v3-sdk'\nimport { SupportedChainId } from 'constants/chains'\nimport { nativeOnChain } from 'constants/tokens'\nimport { atom } from 'jotai'\nimport { atomWithImmer } from 'jotai/immer'\nimport { pickAtom } from 'lib/state/atoms'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport interface Swap {\n  independentField: Field\n  amount: string\n  [Field.INPUT]?: Currency\n  [Field.OUTPUT]?: Currency\n}\n\nexport const swapAtom = atomWithImmer<Swap>({\n  independentField: Field.INPUT,\n  amount: '',\n  [Field.INPUT]: nativeOnChain(SupportedChainId.AVALANCHE),\n})\n\nexport const independentFieldAtom = pickAtom(swapAtom, 'independentField')\n\n// If set to a transaction hash, that transaction will display in a status dialog.\nexport const displayTxHashAtom = atom<string | undefined>(undefined)\n\nexport const feeOptionsAtom = atom<FeeOptions | undefined>(undefined)\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { Draft } from 'immer'\nimport { atom, WritableAtom } from 'jotai'\nimport { withImmer } from 'jotai/immer'\n\n/**\n * Creates a derived atom whose value is the picked object property.\n * By default, the setter acts as a primitive atom's, changing the original atom.\n * A custom setter may also be passed, which uses an Immer Draft so that it may be mutated directly.\n */\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key]\n): WritableAtom<Value[Key], Update>\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update extends Value[Key]>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter?: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key]\n): WritableAtom<Value[Key], Update>\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update extends Value[Key]>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key] = (draft, update) =>\n    update as Draft<Value>[Key]\n): WritableAtom<Value[Key], Update> {\n  return atom(\n    (get) => get(anAtom)[key],\n    (get, set, update: Update) =>\n      set(withImmer(anAtom), (value) => {\n        const derived = setter(value[key], update)\n        value[key] = derived\n      })\n  )\n}\n\n/** Sets a togglable atom to invert its state at the next render. */\nexport function setTogglable(draft: boolean) {\n  return !draft\n}\n","import styled from 'lib/theme'\n\nconst Rule = styled.hr<{ padded?: true; scrollingEdge?: 'top' | 'bottom' }>`\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.outline};\n  margin: 0 ${({ padded }) => (padded ? '0.75em' : 0)};\n  margin-bottom: ${({ scrollingEdge }) => (scrollingEdge === 'bottom' ? -1 : 0)}px;\n  margin-top: ${({ scrollingEdge }) => (scrollingEdge !== 'bottom' ? -1 : 0)}px;\n`\n\nexport default Rule\n","import { Percent } from '@uniswap/sdk-core'\nimport { atomWithReset } from 'jotai/utils'\n\nimport { pickAtom, setTogglable } from './atoms'\n\nexport const MAX_VALID_SLIPPAGE = new Percent(1, 2)\nexport const MIN_HIGH_SLIPPAGE = new Percent(1, 100)\n\ninterface Settings {\n  autoSlippage: boolean // if true, slippage will use the default calculation\n  maxSlippage: number | undefined // expressed as a percent\n  transactionTtl: number | undefined\n  mockTogglable: boolean\n  clientSideRouter: boolean // whether to use the client-side router or query the remote API\n}\n\nconst initialSettings: Settings = {\n  autoSlippage: true,\n  maxSlippage: undefined,\n  transactionTtl: undefined,\n  mockTogglable: true,\n  clientSideRouter: true,\n}\n\nexport const settingsAtom = atomWithReset(initialSettings)\nexport const autoSlippageAtom = pickAtom(settingsAtom, 'autoSlippage')\nexport const maxSlippageAtom = pickAtom(settingsAtom, 'maxSlippage')\nexport const transactionTtlAtom = pickAtom(settingsAtom, 'transactionTtl')\nexport const mockTogglableAtom = pickAtom(settingsAtom, 'mockTogglable', setTogglable)\nexport const clientSideRouterAtom = pickAtom(settingsAtom, 'clientSideRouter')\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent, TradeType } from '@uniswap/sdk-core'\nimport { FeeOptions } from '@uniswap/v3-sdk'\nimport { atom } from 'jotai'\nimport { useAtomValue, useUpdateAtom } from 'jotai/utils'\nimport { useCurrencyBalances } from 'lib/hooks/useCurrencyBalance'\nimport { feeOptionsAtom, Field, swapAtom } from 'lib/state/swap'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useEffect, useMemo } from 'react'\nimport { InterfaceTrade, TradeState } from 'state/routing/types'\n\nimport { isAddress } from '../../../utils'\nimport useActiveWeb3React from '../useActiveWeb3React'\nimport useAllowedSlippage from '../useAllowedSlippage'\nimport { useBestTrade } from './useBestTrade'\n\ninterface SwapInfo {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  currencyAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  trade: {\n    trade?: InterfaceTrade<Currency, Currency, TradeType>\n    state: TradeState\n  }\n  allowedSlippage: Percent\n  feeOptions: FeeOptions | undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: { [address: string]: true } = {\n  '0x9Ad6C38BE94206cA50bb0d90783181662f0Cfa10': true, // v2 factory\n  '0xE54Ca86531e17Ef3616d22Ca28b0D458b6C89106': true, // v2 router 01\n  '0x60aE616a2155Ee3d9A68541Ba4544862310933d4': true, // v2 router 02\n}\n\n// from the current swap inputs, compute the best trade and return it.\nfunction useComputeSwapInfo(): SwapInfo {\n  const { account } = useActiveWeb3React()\n\n  const {\n    independentField,\n    amount,\n    [Field.INPUT]: inputCurrency,\n    [Field.OUTPUT]: outputCurrency,\n  } = useAtomValue(swapAtom)\n\n  const feeOptions = useAtomValue(feeOptionsAtom)\n\n  const to = account\n\n  const relevantTokenBalances = useCurrencyBalances(\n    account,\n    useMemo(() => [inputCurrency ?? undefined, outputCurrency ?? undefined], [inputCurrency, outputCurrency])\n  )\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = useMemo(\n    () => tryParseCurrencyAmount(amount, (isExactIn ? inputCurrency : outputCurrency) ?? undefined),\n    [inputCurrency, isExactIn, outputCurrency, amount]\n  )\n\n  //@TODO(ianlapham): this would eventually be replaced with routing api logic.\n  const trade = useBestTrade(\n    isExactIn ? TradeType.EXACT_INPUT : TradeType.EXACT_OUTPUT,\n    parsedAmount,\n    (isExactIn ? outputCurrency : inputCurrency) ?? undefined\n  )\n\n  const currencies = useMemo(\n    () => ({\n      [Field.INPUT]: inputCurrency ?? undefined,\n      [Field.OUTPUT]: outputCurrency ?? undefined,\n    }),\n    [inputCurrency, outputCurrency]\n  )\n\n  const currencyBalances = useMemo(\n    () => ({\n      [Field.INPUT]: relevantTokenBalances[0],\n      [Field.OUTPUT]: relevantTokenBalances[1],\n    }),\n    [relevantTokenBalances]\n  )\n\n  const currencyAmounts = useMemo(\n    () => ({\n      [Field.INPUT]: trade.trade?.inputAmount,\n      [Field.OUTPUT]: trade.trade?.outputAmount,\n    }),\n    [trade.trade?.inputAmount, trade.trade?.outputAmount]\n  )\n\n  const allowedSlippage = useAllowedSlippage(trade.trade)\n\n  const inputError = useMemo(() => {\n    let inputError: ReactNode | undefined\n\n    if (!account) {\n      inputError = <Trans>Connect Wallet</Trans>\n    }\n\n    if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n      inputError = inputError ?? <Trans>Select token</Trans>\n    }\n\n    if (!parsedAmount) {\n      inputError = inputError ?? <Trans>Enter an amount</Trans>\n    }\n\n    const formattedTo = isAddress(to)\n    if (!to || !formattedTo) {\n      inputError = inputError ?? <Trans>Enter a recipient</Trans>\n    } else {\n      if (BAD_RECIPIENT_ADDRESSES[formattedTo]) {\n        inputError = inputError ?? <Trans>Invalid recipient</Trans>\n      }\n    }\n\n    // compare input balance to max input based on version\n    const [balanceIn, amountIn] = [currencyBalances[Field.INPUT], trade.trade?.maximumAmountIn(allowedSlippage)]\n\n    if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n      inputError = <Trans>Insufficient {amountIn.currency.symbol} balance</Trans>\n    }\n\n    return inputError\n  }, [account, allowedSlippage, currencies, currencyBalances, parsedAmount, to, trade.trade])\n\n  return useMemo(\n    () => ({\n      currencies,\n      currencyBalances,\n      currencyAmounts,\n      inputError,\n      trade,\n      allowedSlippage,\n      feeOptions,\n    }),\n    [currencies, currencyBalances, currencyAmounts, inputError, trade, allowedSlippage, feeOptions]\n  )\n}\n\nconst swapInfoAtom = atom<SwapInfo>({\n  currencies: {},\n  currencyBalances: {},\n  currencyAmounts: {},\n  trade: { state: TradeState.INVALID },\n  allowedSlippage: new Percent(0),\n  feeOptions: undefined,\n})\n\nexport function SwapInfoUpdater() {\n  const setSwapInfo = useUpdateAtom(swapInfoAtom)\n  const swapInfo = useComputeSwapInfo()\n  useEffect(() => {\n    setSwapInfo(swapInfo)\n  }, [swapInfo, setSwapInfo])\n  return null\n}\n\n/** Requires that SwapInfoUpdater be installed in the DOM tree. **/\nexport default function useSwapInfo(): SwapInfo {\n  return useAtomValue(swapInfoAtom)\n}\n","import { Protocol } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { useStablecoinAmountFromFiatValue } from 'hooks/useUSDCPrice'\nimport { useEffect, useMemo, useState } from 'react'\nimport { GetQuoteResult, InterfaceTrade, TradeState } from 'state/routing/types'\nimport { computeRoutes, transformRoutesToTrade } from 'state/routing/utils'\n\nimport useActiveWeb3React from '../useActiveWeb3React'\nimport { getClientSideQuote } from './clientSideSmartOrderRouter'\nimport { useRoutingAPIArguments } from './useRoutingAPIArguments'\n\nconst protocols: Protocol[] = [Protocol.V2, Protocol.V3]\nconst config = { protocols }\n\nexport default function useClientSideSmartOrderRouterTrade<TTradeType extends TradeType>(\n  tradeType: TTradeType,\n  amountSpecified?: CurrencyAmount<Currency>,\n  otherCurrency?: Currency\n): {\n  state: TradeState\n  trade: InterfaceTrade<Currency, Currency, TTradeType> | undefined\n} {\n  const chainId = amountSpecified?.currency.chainId\n  const { library } = useActiveWeb3React()\n\n  const [currencyIn, currencyOut]: [Currency | undefined, Currency | undefined] = useMemo(\n    () =>\n      tradeType === TradeType.EXACT_INPUT\n        ? [amountSpecified?.currency, otherCurrency]\n        : [otherCurrency, amountSpecified?.currency],\n    [amountSpecified, otherCurrency, tradeType]\n  )\n\n  const queryArgs = useRoutingAPIArguments({\n    tokenIn: currencyIn,\n    tokenOut: currencyOut,\n    amount: amountSpecified,\n    tradeType,\n    useClientSideRouter: true,\n  })\n  const params = useMemo(() => chainId && library && { chainId, provider: library }, [chainId, library])\n\n  const [loading, setLoading] = useState(false)\n  const [{ quoteResult, error }, setFetchedResult] = useState<{\n    quoteResult: GetQuoteResult | undefined\n    error: unknown\n  }>({\n    quoteResult: undefined,\n    error: undefined,\n  })\n\n  // When arguments update, make a new call to SOR for updated quote\n  useEffect(() => {\n    setLoading(true)\n    fetchQuote()\n\n    async function fetchQuote() {\n      try {\n        if (queryArgs && params) {\n          const result = await getClientSideQuote(queryArgs, params, config)\n          setFetchedResult({\n            quoteResult: result.data,\n            error: result.error,\n          })\n        }\n      } catch (e) {\n        setFetchedResult({\n          quoteResult: undefined,\n          error: true,\n        })\n      } finally {\n        setLoading(false)\n      }\n    }\n  }, [queryArgs, params])\n\n  const route = useMemo(\n    () => computeRoutes(currencyIn, currencyOut, tradeType, quoteResult),\n    [currencyIn, currencyOut, quoteResult, tradeType]\n  )\n\n  // get USD gas cost of trade in active chains stablecoin amount\n  const gasUseEstimateUSD = useStablecoinAmountFromFiatValue(quoteResult?.gasUseEstimateUSD) ?? null\n\n  return useMemo(() => {\n    if (!currencyIn || !currencyOut) {\n      return {\n        state: TradeState.INVALID,\n        trade: undefined,\n      }\n    }\n\n    if (loading && !quoteResult) {\n      // only on first hook render\n      return {\n        state: TradeState.LOADING,\n        trade: undefined,\n      }\n    }\n\n    let otherAmount = undefined\n    if (tradeType === TradeType.EXACT_INPUT && currencyOut && quoteResult) {\n      otherAmount = CurrencyAmount.fromRawAmount(currencyOut, quoteResult.quote)\n    }\n    if (tradeType === TradeType.EXACT_OUTPUT && currencyIn && quoteResult) {\n      otherAmount = CurrencyAmount.fromRawAmount(currencyIn, quoteResult.quote)\n    }\n\n    if (error || !otherAmount || !route || route.length === 0 || !queryArgs) {\n      return {\n        state: TradeState.NO_ROUTE_FOUND,\n        trade: undefined,\n      }\n    }\n\n    try {\n      const trade = transformRoutesToTrade(route, tradeType, gasUseEstimateUSD)\n      return {\n        // always return VALID regardless of isFetching status\n        state: TradeState.VALID,\n        trade,\n      }\n    } catch (e) {\n      console.debug('transformRoutesToTrade failed: ', e)\n      return { state: TradeState.INVALID, trade: undefined }\n    }\n  }, [currencyIn, currencyOut, loading, quoteResult, tradeType, error, route, queryArgs, gasUseEstimateUSD])\n}\n","import { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport useAutoSlippageTolerance from 'hooks/useAutoSlippageTolerance'\nimport { useAtomValue } from 'jotai/utils'\nimport { autoSlippageAtom, maxSlippageAtom } from 'lib/state/settings'\nimport { InterfaceTrade } from 'state/routing/types'\n\nexport function toPercent(maxSlippage: number | undefined): Percent | undefined {\n  if (!maxSlippage) return undefined\n  const numerator = Math.floor(maxSlippage * 100)\n  return new Percent(numerator, 10_000)\n}\n\n/** Returns the user-inputted max slippage. */\nexport default function useMaxSlippage(trade: InterfaceTrade<Currency, Currency, TradeType> | undefined): Percent {\n  const autoSlippage = useAutoSlippageTolerance(trade)\n  const maxSlippage = toPercent(useAtomValue(maxSlippageAtom))\n  return useAtomValue(autoSlippageAtom) ? autoSlippage : maxSlippage ?? autoSlippage\n}\n","import { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { useClientSideV3Trade } from 'hooks/useClientSideV3Trade'\nimport useDebounce from 'hooks/useDebounce'\nimport { useMemo } from 'react'\nimport { InterfaceTrade, TradeState } from 'state/routing/types'\n\nimport useClientSideSmartOrderRouterTrade from '../routing/useClientSideSmartOrderRouterTrade'\n\n/**\n * Returns the currency amount from independent field, currency from independent field,\n * and currency from dependent field.\n */\nfunction getTradeInputs(\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined,\n  tradeType: TradeType\n): [CurrencyAmount<Currency> | undefined, Currency | undefined, Currency | undefined] {\n  if (trade) {\n    if (tradeType === TradeType.EXACT_INPUT) {\n      return [trade.inputAmount, trade.inputAmount.currency, trade.outputAmount.currency]\n    }\n    if (tradeType === TradeType.EXACT_OUTPUT) {\n      return [trade.outputAmount, trade.outputAmount.currency, trade.inputAmount.currency]\n    }\n  }\n  return [undefined, undefined, undefined]\n}\n\ninterface TradeDebouncingParams {\n  amounts: [CurrencyAmount<Currency> | undefined, CurrencyAmount<Currency> | undefined]\n  indepdenentCurrencies: [Currency | undefined, Currency | undefined]\n  dependentCurrencies: [Currency | undefined, Currency | undefined]\n}\n\n/**\n * Returns wether debounced values are stale compared to latest values from trade.\n */\nfunction isTradeDebouncing({ amounts, indepdenentCurrencies, dependentCurrencies }: TradeDebouncingParams): boolean {\n  // Ensure that amount from user input matches latest trade.\n  const amountsMatch = amounts[0] && amounts[1]?.equalTo(amounts[0])\n\n  // Ensure active swap currencies match latest trade.\n  const currenciesMatch =\n    indepdenentCurrencies[0] &&\n    indepdenentCurrencies[1]?.equals(indepdenentCurrencies[0]) &&\n    dependentCurrencies[0] &&\n    dependentCurrencies[1]?.equals(dependentCurrencies[0])\n\n  return !amountsMatch || !currenciesMatch\n}\n\n/**\n * Returns the best v2+v3 trade for a desired swap.\n * @param tradeType whether the swap is an exact in/out\n * @param amountSpecified the exact amount to swap in/out\n * @param otherCurrency the desired output/payment currency\n */\nexport function useBestTrade(\n  tradeType: TradeType,\n  amountSpecified?: CurrencyAmount<Currency>,\n  otherCurrency?: Currency\n): {\n  state: TradeState\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined\n} {\n  // Debounce is used to prevent excessive requests to SOR, as it is data intensive.\n  // This helps provide a \"syncing\" state the UI can reference for loading animations.\n  const [debouncedAmount, debouncedOtherCurrency] = useDebounce(\n    useMemo(() => [amountSpecified, otherCurrency], [amountSpecified, otherCurrency]),\n    200\n  )\n\n  const clientSORTrade = useClientSideSmartOrderRouterTrade(tradeType, debouncedAmount, debouncedOtherCurrency)\n\n  const [amountFromLatestTrade, currencyFromTrade, otherCurrencyFromTrade] = getTradeInputs(\n    clientSORTrade.trade,\n    tradeType\n  )\n\n  const debouncing =\n    (amountSpecified && debouncedAmount && amountSpecified !== debouncedAmount) ||\n    (amountSpecified && debouncedOtherCurrency && otherCurrency && debouncedOtherCurrency !== otherCurrency)\n\n  const syncing =\n    amountSpecified &&\n    isTradeDebouncing({\n      amounts: [amountFromLatestTrade, amountSpecified],\n      indepdenentCurrencies: [currencyFromTrade, amountSpecified?.currency],\n      dependentCurrencies: [otherCurrencyFromTrade, debouncedOtherCurrency],\n    })\n\n  const useFallback = !syncing && clientSORTrade.state === TradeState.NO_ROUTE_FOUND\n\n  // Use a simple client side logic as backup if SOR is not available.\n  const fallbackTrade = useClientSideV3Trade(\n    tradeType,\n    useFallback ? debouncedAmount : undefined,\n    useFallback ? debouncedOtherCurrency : undefined\n  )\n\n  return useMemo(\n    () => ({\n      ...(useFallback ? fallbackTrade : clientSORTrade),\n      ...(syncing ? { state: TradeState.SYNCING } : {}),\n      ...(debouncing ? { state: TradeState.LOADING } : {}),\n    }),\n    [debouncing, fallbackTrade, syncing, clientSORTrade, useFallback]\n  )\n}\n","import { Info } from 'lib/icons'\n\nexport default function RoutingTooltip() {\n  return <Info color=\"secondary\" />\n  /* TODO(zzmp): Implement post-beta launch.\n  return (\n    <Tooltip icon={Info} placement=\"bottom\">\n      <ThemeProvider>\n        <ThemedText.Subhead2>TODO: Routing Tooltip</ThemedText.Subhead2>\n      </ThemeProvider>\n    </Tooltip>\n  )\n  */\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, TradeType } from '@uniswap/sdk-core'\nimport useUSDCPrice from 'hooks/useUSDCPrice'\nimport { AlertTriangle, Icon, Info, Spinner } from 'lib/icons'\nimport { ThemedText } from 'lib/theme'\nimport { ReactNode, useMemo, useState } from 'react'\nimport { InterfaceTrade } from 'state/routing/types'\n\nimport { TextButton } from '../../Button'\nimport Row from '../../Row'\nimport RoutingTooltip from './RoutingTooltip'\n\ninterface CaptionProps {\n  icon?: Icon\n  caption: ReactNode\n}\n\nfunction Caption({ icon: Icon = AlertTriangle, caption }: CaptionProps) {\n  return (\n    <>\n      <Icon color=\"secondary\" />\n      {caption}\n    </>\n  )\n}\n\nexport function ConnectWallet() {\n  return <Caption caption={<Trans>Connect wallet to swap</Trans>} />\n}\nexport function UnsupportedNetwork() {\n  return <Caption caption={<Trans>Unsupported network - switch to another network to swap</Trans>} />\n}\nexport function InsufficientBalance({ currency }: { currency: Currency }) {\n  return <Caption caption={<Trans>Insufficient {currency?.symbol} balance</Trans>} />\n}\nexport function InsufficientLiquidity() {\n  return <Caption caption={<Trans>Insufficient liquidity in the pool for your trade</Trans>} />\n}\nexport function Empty() {\n  return <Caption icon={Info} caption={<Trans>Enter an amount</Trans>} />\n}\nexport function LoadingTrade() {\n  return <Caption icon={Spinner} caption={<Trans>Fetching best price…</Trans>} />\n}\n\nexport function Trade({ trade }: { trade: InterfaceTrade<Currency, Currency, TradeType> }) {\n  const [flip, setFlip] = useState(true)\n  const { inputAmount, outputAmount, executionPrice } = trade\n  const fiatValueInput = useUSDCPrice(inputAmount.currency)\n  const fiatValueOutput = useUSDCPrice(outputAmount.currency)\n\n  const ratio = useMemo(() => {\n    const [a, b] = flip ? [outputAmount, inputAmount] : [inputAmount, outputAmount]\n    const priceString = (!flip ? executionPrice : executionPrice?.invert())?.toSignificant(6)\n\n    const ratio = `1 ${a.currency.symbol} = ${priceString} ${b.currency.symbol}`\n    const usdc = !flip\n      ? fiatValueInput\n        ? ` ($${fiatValueInput.toSignificant(6)})`\n        : null\n      : fiatValueOutput\n      ? ` ($${fiatValueOutput.toSignificant(6)})`\n      : null\n\n    return (\n      <Row gap={0.25} style={{ userSelect: 'text' }}>\n        {ratio}\n        {usdc && <ThemedText.Caption color=\"secondary\">{usdc}</ThemedText.Caption>}\n      </Row>\n    )\n  }, [executionPrice, fiatValueInput, fiatValueOutput, flip, inputAmount, outputAmount])\n\n  return (\n    <>\n      <RoutingTooltip />\n      <TextButton color=\"primary\" onClick={() => setFlip(!flip)}>\n        {ratio}\n      </TextButton>\n    </>\n  )\n}\n"],"sourceRoot":""}