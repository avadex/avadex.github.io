{"version":3,"sources":["lib/components/TokenSelect/index.tsx","lib/components/Row.tsx","lib/components/Button.tsx","lib/components/Column.tsx","lib/components/Rule.tsx","lib/components/Dialog.tsx","lib/components/TokenImg.tsx","lib/hooks/useScrollbar.ts","lib/hooks/useNativeEvent.ts","lib/hooks/useUnmount.ts","lib/components/Input.tsx","lib/components/Header.tsx","lib/components/TokenSelect/TokenBase.tsx","lib/components/TokenSelect/TokenButton.tsx","lib/components/TokenSelect/TokenOptions.tsx"],"names":["SearchInput","styled","StringInput","inputCss","TokenSelectDialog","value","onSelect","useState","query","setQuery","queriedTokens","useQueryTokenList","tokens","useMemo","filter","token","baseTokens","input","useRef","useEffect","current","focus","options","setOptions","title","gap","pad","grow","Body1","onChange","placeholder","onKeyDown","onBlur","blur","ref","Boolean","length","justify","flex","map","onClick","currencyId","padded","TokenSelect","collapsed","disabled","open","setOpen","selectAndClose","useCallback","color","onClose","Row","div","align","theme","children","Children","count","BaseButton","button","onInteractive","onHover","outline","secondary","transparentButton","defaultColor","TextButton","SecondaryButton","IconButton","Icon","icon","iconProps","props","Column","css","Rule","hr","scrollingEdge","Context","createContext","element","active","setActive","Provider","context","inert","OnCloseContext","Header","ruled","useContext","X","Modal","borderRadius","Layer","DIALOG","Dialog","dialog","useUnmount","close","e","key","document","addEventListener","removeEventListener","createPortal","className","badSrcs","Set","srcs","useCurrencyLogoURIs","src","setSrc","find","has","onError","add","alt","name","symbol","module","Math","sqrt","size","overflowCss","scrollbarCss","interactive","useScrollbar","overflow","setOverflow","hasOverflow","useNativeEvent","scrollHeight","clientHeight","eventListener","UNMOUNTING","node","parent","parentElement","removeChild","child","classList","onanimationend","call","Input","forwardRef","target","inputMode","autoComplete","autoCorrect","type","minLength","spellCheck","isNumericallyEqual","a","b","split","aInteger","aDecimal","bInteger","bDecimal","JSBI","equal","BigInt","NumericInput","enforcer","pattern","state","setState","validateChange","event","nextInput","replace","maxLength","integerRegexp","integerEnforcer","nextUserInput","test","parseInt","isNaN","toString","IntegerInput","decimalRegexp","decimalEnforcer","DecimalInput","container","HeaderRow","largeIconCss","iconSize","Subhead1","TokenButton","Button","TokenBase","ButtonMedium","StyledTokenButton","empty","TokenButtonRow","buttonBackgroundColor","contentColor","ButtonLarge","strokeWidth","TokenList","FixedSizeList","hover","scrollbar","OnHover","TokenOption","index","style","i18n","useLingui","onEvent","undefined","account","useActiveWeb3React","balance","useCurrencyBalance","onFocus","onMouseMove","Caption","greaterThan","formatCurrencyAmount","locale","itemKey","ItemRow","memo","data","areEqual","TokenOptions","focused","setFocused","setHover","list","scrollTo","scrollToItem","preventDefault","useImperativeHandle","setElement","invariant","marginTop","scrollTop","disableWidth","height","width","itemCount","itemData","itemSize","outerRef"],"mappings":"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","file":"static/js/12.f9284caa.chunk.js","sourcesContent":["import { t, Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { useQueryTokenList } from 'lib/hooks/useTokenList'\nimport styled, { ThemedText } from 'lib/theme'\nimport { ElementRef, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { currencyId } from 'utils/currencyId'\n\nimport Column from '../Column'\nimport Dialog, { Header } from '../Dialog'\nimport { inputCss, StringInput } from '../Input'\nimport Row from '../Row'\nimport Rule from '../Rule'\nimport TokenBase from './TokenBase'\nimport TokenButton from './TokenButton'\nimport TokenOptions from './TokenOptions'\n\nconst SearchInput = styled(StringInput)`\n  ${inputCss}\n`\n\ninterface TokenSelectDialogProps {\n  value?: Currency\n  onSelect: (token: Currency) => void\n}\n\nexport function TokenSelectDialog({ value, onSelect }: TokenSelectDialogProps) {\n  const [query, setQuery] = useState('')\n  const queriedTokens = useQueryTokenList(query)\n  const tokens = useMemo(() => queriedTokens.filter((token) => token !== value), [queriedTokens, value])\n\n  const baseTokens: Currency[] = [] // TODO(zzmp): Add base tokens to token list functionality\n\n  const input = useRef<HTMLInputElement>(null)\n  useEffect(() => input.current?.focus(), [input])\n\n  const [options, setOptions] = useState<ElementRef<typeof TokenOptions> | null>(null)\n\n  return (\n    <>\n      <Header title={<Trans>Selec token</Trans>} />\n      <Column gap={0.75}>\n        <Row pad={0.75} grow>\n          <ThemedText.Body1>\n            <SearchInput\n              value={query}\n              onChange={setQuery}\n              placeholder={t`Search by token name or address`}\n              onKeyDown={options?.onKeyDown}\n              onBlur={options?.blur}\n              ref={input}\n            />\n          </ThemedText.Body1>\n        </Row>\n        {Boolean(baseTokens.length) && (\n          <Row pad={0.75} gap={0.25} justify=\"flex-start\" flex>\n            {baseTokens.map((token) => (\n              <TokenBase value={token} onClick={onSelect} key={currencyId(token)} />\n            ))}\n          </Row>\n        )}\n        <Rule padded />\n      </Column>\n      <TokenOptions tokens={tokens} onSelect={onSelect} ref={setOptions} />\n    </>\n  )\n}\n\ninterface TokenSelectProps {\n  value?: Currency\n  collapsed: boolean\n  disabled?: boolean\n  onSelect: (value: Currency) => void\n}\n\nexport default function TokenSelect({ value, collapsed, disabled, onSelect }: TokenSelectProps) {\n  const [open, setOpen] = useState(false)\n  const selectAndClose = useCallback(\n    (value: Currency) => {\n      onSelect(value)\n      setOpen(false)\n    },\n    [onSelect, setOpen]\n  )\n  return (\n    <>\n      <TokenButton value={value} collapsed={collapsed} disabled={disabled} onClick={() => setOpen(true)} />\n      {open && (\n        <Dialog color=\"module\" onClose={() => setOpen(false)}>\n          <TokenSelectDialog value={value} onSelect={selectAndClose} />\n        </Dialog>\n      )}\n    </>\n  )\n}\n","import styled, { Color, Theme } from 'lib/theme'\nimport { Children, ReactNode } from 'react'\n\nconst Row = styled.div<{\n  color?: Color\n  align?: string\n  justify?: string\n  pad?: number\n  gap?: number\n  flex?: true\n  grow?: true | 'first' | 'last'\n  children?: ReactNode\n  theme: Theme\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-flow: wrap;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: column;\n  grid-template-columns: ${({ grow, children }) => {\n    if (grow === 'first') return '1fr'\n    if (grow === 'last') return `repeat(${Children.count(children) - 1}, auto) 1fr`\n    if (grow) return `repeat(${Children.count(children)}, 1fr)`\n    return undefined\n  }};\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ pad }) => pad && `0 ${pad}em`};\n`\n\nexport default Row\n","import { Icon } from 'lib/icons'\nimport styled, { Color } from 'lib/theme'\nimport { ComponentProps } from 'react'\n\nexport const BaseButton = styled.button`\n  background-color: transparent;\n  border: none;\n  border-radius: 0.5em;\n  color: currentColor;\n  cursor: pointer;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n\n  :disabled {\n    cursor: initial;\n    filter: saturate(0) opacity(0.4);\n  }\n`\n\nexport default styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = 'interactive', theme }) => color === 'interactive' && theme.onInteractive};\n\n  :enabled {\n    background-color: ${({ color = 'interactive', theme }) => theme[color]};\n  }\n\n  :enabled:hover {\n    background-color: ${({ color = 'interactive', theme }) => theme.onHover(theme[color])};\n  }\n\n  :disabled {\n    border: 1px solid ${({ theme }) => theme.outline};\n    color: ${({ theme }) => theme.secondary};\n    cursor: initial;\n  }\n`\n\nconst transparentButton = (defaultColor: Color) => styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = defaultColor, theme }) => theme[color]};\n\n  :enabled:hover {\n    color: ${({ color = defaultColor, theme }) => theme.onHover(theme[color])};\n  }\n`\n\nexport const TextButton = transparentButton('accent')\n\nconst SecondaryButton = transparentButton('secondary')\n\ninterface IconButtonProps {\n  icon: Icon\n  iconProps?: ComponentProps<Icon>\n}\n\nexport function IconButton({ icon: Icon, iconProps, ...props }: IconButtonProps & ComponentProps<typeof BaseButton>) {\n  return (\n    <SecondaryButton {...props}>\n      <Icon {...iconProps} />\n    </SecondaryButton>\n  )\n}\n","import styled, { Color, css, Theme } from 'lib/theme'\n\nconst Column = styled.div<{\n  align?: string\n  color?: Color\n  justify?: string\n  gap?: number\n  padded?: true\n  flex?: true\n  grow?: true\n  theme: Theme\n  css?: ReturnType<typeof css>\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-direction: column;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: row;\n  grid-template-columns: 1fr;\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ padded }) => padded && '0.75em'};\n\n  ${({ css }) => css}\n`\n\nexport default Column\n","import styled from 'lib/theme'\n\nconst Rule = styled.hr<{ padded?: true; scrollingEdge?: 'top' | 'bottom' }>`\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.outline};\n  margin: 0 ${({ padded }) => (padded ? '0.75em' : 0)};\n  margin-bottom: ${({ scrollingEdge }) => (scrollingEdge === 'bottom' ? -1 : 0)}px;\n  margin-top: ${({ scrollingEdge }) => (scrollingEdge !== 'bottom' ? -1 : 0)}px;\n`\n\nexport default Rule\n","import 'wicg-inert'\n\nimport useUnmount from 'lib/hooks/useUnmount'\nimport { X } from 'lib/icons'\nimport styled, { Color, Layer, ThemeProvider } from 'lib/theme'\nimport { createContext, ReactElement, ReactNode, useContext, useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { IconButton } from './Button'\nimport Column from './Column'\nimport { default as BaseHeader } from './Header'\nimport Rule from './Rule'\n\n// Include inert from wicg-inert\ndeclare global {\n  interface HTMLElement {\n    inert?: boolean\n  }\n}\n\nconst Context = createContext({\n  element: null as HTMLElement | null,\n  active: false,\n  setActive: (active: boolean) => undefined as void,\n})\n\ninterface ProviderProps {\n  value: HTMLElement | null\n  children: ReactNode\n}\n\nexport function Provider({ value, children }: ProviderProps) {\n  // If a Dialog is active, mark the main content inert\n  const ref = useRef<HTMLDivElement>(null)\n  const [active, setActive] = useState(false)\n  const context = { element: value, active, setActive }\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.inert = active\n    }\n  }, [active])\n  return (\n    <div ref={ref}>\n      <Context.Provider value={context}>{children}</Context.Provider>\n    </div>\n  )\n}\n\nconst OnCloseContext = createContext<() => void>(() => void 0)\n\ninterface HeaderProps {\n  title?: ReactElement\n  ruled?: boolean\n  children?: ReactNode\n}\n\nexport function Header({ title, children, ruled }: HeaderProps) {\n  return (\n    <>\n      <Column>\n        <BaseHeader title={title}>\n          {children}\n          <IconButton color=\"primary\" onClick={useContext(OnCloseContext)} icon={X} />\n        </BaseHeader>\n        {ruled && <Rule padded />}\n      </Column>\n    </>\n  )\n}\n\nexport const Modal = styled.div<{ color: Color }>`\n  background-color: ${({ color, theme }) => theme[color]};\n  border-radius: ${({ theme }) => theme.borderRadius * 0.75}em;\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 0.5em);\n  left: 0;\n  margin: 0.25em;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  width: calc(100% - 0.5em);\n  z-index: ${Layer.DIALOG};\n`\n\ninterface DialogProps {\n  color: Color\n  children: ReactNode\n  onClose?: () => void\n}\n\nexport default function Dialog({ color, children, onClose = () => void 0 }: DialogProps) {\n  const context = useContext(Context)\n  useEffect(() => {\n    context.setActive(true)\n    return () => context.setActive(false)\n  }, [context])\n  const dialog = useRef<HTMLDivElement>(null)\n  useUnmount(dialog)\n  useEffect(() => {\n    const close = (e: KeyboardEvent) => e.key === 'Escape' && onClose?.()\n    document.addEventListener('keydown', close, true)\n    return () => document.removeEventListener('keydown', close, true)\n  }, [onClose])\n  return (\n    context.element &&\n    createPortal(\n      <ThemeProvider>\n        <Modal className=\"dialog\" color={color} ref={dialog}>\n          <OnCloseContext.Provider value={onClose}>{children}</OnCloseContext.Provider>\n        </Modal>\n      </ThemeProvider>,\n      context.element\n    )\n  )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport useCurrencyLogoURIs from 'lib/hooks/useCurrencyLogoURIs'\nimport { Slash } from 'lib/icons'\nimport styled from 'lib/theme'\nimport { useCallback, useEffect, useState } from 'react'\n\nconst badSrcs = new Set<string>()\n\ninterface TokenImgProps {\n  className?: string\n  token: Currency\n}\n\nfunction TokenImg({ className, token }: TokenImgProps) {\n  const srcs = useCurrencyLogoURIs(token)\n  const [src, setSrc] = useState<string | undefined>()\n  useEffect(() => {\n    setSrc(srcs.find((src) => !badSrcs.has(src)))\n  }, [srcs])\n  const onError = useCallback(() => {\n    if (src) badSrcs.add(src)\n    setSrc(srcs.find((src) => !badSrcs.has(src)))\n  }, [src, srcs])\n\n  if (src) {\n    return <img className={className} src={src} alt={token.name || token.symbol} onError={onError} />\n  }\n  return <Slash className={className} color=\"secondary\" />\n}\n\nexport default styled(TokenImg)<{ size?: number }>`\n  // radial-gradient calculates distance from the corner, not the edge: divide by sqrt(2)\n  background: radial-gradient(\n    ${({ theme }) => theme.module} calc(100% / ${Math.sqrt(2)} - 1.5px),\n    ${({ theme }) => theme.outline} calc(100% / ${Math.sqrt(2)} - 1.5px)\n  );\n  border-radius: 100%;\n  height: ${({ size }) => size || 1}em;\n  width: ${({ size }) => size || 1}em;\n`\n","import { css } from 'lib/theme'\nimport { useEffect, useMemo, useState } from 'react'\n\nimport useNativeEvent from './useNativeEvent'\n\nconst overflowCss = css`\n  overflow-y: scroll;\n`\n\n/** Customizes the scrollbar for vertical overflow. */\nconst scrollbarCss = (padded: boolean) => css`\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 1.25em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: radial-gradient(\n        closest-corner at 0.25em 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        transparent 0.25em\n      ),\n      linear-gradient(\n        to bottom,\n        #ffffff00 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        ${({ theme }) => theme.interactive} calc(100% - 0.25em),\n        #ffffff00 calc(100% - 0.25em)\n      ),\n      radial-gradient(\n        closest-corner at 0.25em calc(100% - 0.25em),\n        ${({ theme }) => theme.interactive} 0.25em,\n        #ffffff00 0.25em\n      );\n    background-clip: padding-box;\n    border: none;\n    ${padded ? 'border-right' : 'border-left'}: 0.75em solid transparent;\n  }\n\n  @supports not selector(::-webkit-scrollbar-thumb) {\n    scrollbar-color: ${({ theme }) => theme.interactive} transparent;\n  }\n`\n\ninterface ScrollbarOptions {\n  padded?: boolean\n}\n\nexport default function useScrollbar(element: HTMLElement | null, { padded = false }: ScrollbarOptions = {}) {\n  const [overflow, setOverflow] = useState(true)\n  useEffect(() => {\n    setOverflow(hasOverflow(element))\n  }, [element])\n  useNativeEvent(element, 'transitionend', () => setOverflow(hasOverflow(element)))\n  return useMemo(() => (overflow ? scrollbarCss(padded) : overflowCss), [overflow, padded])\n\n  function hasOverflow(element: HTMLElement | null) {\n    if (!element) {\n      return true\n    }\n    return element.scrollHeight > element.clientHeight\n  }\n}\n","import { useEffect } from 'react'\n\nexport default function useNativeEvent(\n  element: HTMLElement | null,\n  ...eventListener: Parameters<HTMLElement['addEventListener']>\n) {\n  useEffect(() => {\n    element?.addEventListener(...eventListener)\n    return () => element?.removeEventListener(...eventListener)\n  }, [element, eventListener])\n}\n","import { RefObject, useEffect } from 'react'\n\nexport const UNMOUNTING = 'unmounting'\n\n/**\n * Delays a node's unmounting so that an animation may be applied.\n * An animation *must* be applied, or the node will not unmount.\n */\nexport default function useUnmount(node: RefObject<HTMLElement>) {\n  useEffect(() => {\n    const current = node.current\n    const parent = current?.parentElement\n    const removeChild = parent?.removeChild\n    if (parent && removeChild) {\n      parent.removeChild = function <T extends Node>(child: T) {\n        if ((child as Node) === current) {\n          current.classList.add(UNMOUNTING)\n          current.onanimationend = () => {\n            removeChild.call(parent, child)\n          }\n          return child\n        } else {\n          return removeChild.call(parent, child) as T\n        }\n      }\n    }\n    return () => {\n      if (parent && removeChild) {\n        parent.removeChild = removeChild\n      }\n    }\n  }, [node])\n}\n","import JSBI from 'jsbi'\nimport styled, { css } from 'lib/theme'\nimport { forwardRef, HTMLProps, useCallback, useEffect, useState } from 'react'\n\nconst Input = styled.input`\n  -webkit-appearance: textfield;\n  background-color: transparent;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  outline: none;\n  overflow: hidden;\n  padding: 0;\n  text-align: left;\n  text-overflow: ellipsis;\n  width: 100%;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.secondary};\n  }\n`\n\nexport default Input\n\ninterface StringInputProps extends Omit<HTMLProps<HTMLInputElement>, 'onChange' | 'as' | 'value'> {\n  value: string\n  onChange: (input: string) => void\n}\n\nexport const StringInput = forwardRef<HTMLInputElement, StringInputProps>(function StringInput(\n  { value, onChange, ...props }: StringInputProps,\n  ref\n) {\n  return (\n    <Input\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      // universal input options\n      inputMode=\"text\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      placeholder={props.placeholder || '-'}\n      minLength={1}\n      spellCheck=\"false\"\n      ref={ref as any}\n      {...props}\n    />\n  )\n})\n\ninterface NumericInputProps extends Omit<HTMLProps<HTMLInputElement>, 'onChange' | 'as' | 'value'> {\n  value: string\n  onChange: (input: string) => void\n}\n\ninterface EnforcedNumericInputProps extends NumericInputProps {\n  // Validates nextUserInput; returns stringified value, or null if invalid\n  enforcer: (nextUserInput: string) => string | null\n}\n\nfunction isNumericallyEqual(a: string, b: string) {\n  const [aInteger, aDecimal] = a.split('.')\n  const [bInteger, bDecimal] = b.split('.')\n  return (\n    JSBI.equal(JSBI.BigInt(aInteger ?? 0), JSBI.BigInt(bInteger ?? 0)) &&\n    JSBI.equal(JSBI.BigInt(aDecimal ?? 0), JSBI.BigInt(bDecimal ?? 0))\n  )\n}\n\nconst NumericInput = forwardRef<HTMLInputElement, EnforcedNumericInputProps>(function NumericInput(\n  { value, onChange, enforcer, pattern, ...props }: EnforcedNumericInputProps,\n  ref\n) {\n  const [state, setState] = useState(value ?? '')\n  useEffect(() => {\n    if (!isNumericallyEqual(state, value)) {\n      setState(value ?? '')\n    }\n  }, [value, state, setState])\n\n  const validateChange = useCallback(\n    (event) => {\n      const nextInput = enforcer(event.target.value.replace(/,/g, '.'))\n      if (nextInput !== null) {\n        setState(nextInput ?? '')\n        if (!isNumericallyEqual(nextInput, value)) {\n          onChange(nextInput)\n        }\n      }\n    },\n    [value, onChange, enforcer]\n  )\n\n  return (\n    <Input\n      value={state}\n      onChange={validateChange}\n      // universal input options\n      inputMode=\"decimal\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern={pattern}\n      placeholder={props.placeholder || '0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n      ref={ref as any}\n      {...props}\n    />\n  )\n})\n\nconst integerRegexp = /^\\d*$/\nconst integerEnforcer = (nextUserInput: string) => {\n  if (nextUserInput === '' || integerRegexp.test(nextUserInput)) {\n    const nextInput = parseInt(nextUserInput)\n    return isNaN(nextInput) ? '' : nextInput.toString()\n  }\n  return null\n}\nexport const IntegerInput = forwardRef(function IntegerInput(props: NumericInputProps, ref) {\n  return <NumericInput pattern=\"^[0-9]*$\" enforcer={integerEnforcer} ref={ref as any} {...props} />\n})\n\nconst decimalRegexp = /^\\d*(?:[.])?\\d*$/\nconst decimalEnforcer = (nextUserInput: string) => {\n  if (nextUserInput === '') {\n    return ''\n  } else if (nextUserInput === '.') {\n    return '0.'\n  } else if (decimalRegexp.test(nextUserInput)) {\n    return nextUserInput\n  }\n  return null\n}\nexport const DecimalInput = forwardRef(function DecimalInput(props: NumericInputProps, ref) {\n  return <NumericInput pattern=\"^[0-9]*[.,]?[0-9]*$\" enforcer={decimalEnforcer} ref={ref as any} {...props} />\n})\n\nexport const inputCss = css`\n  background-color: ${({ theme }) => theme.container};\n  border: 1px solid ${({ theme }) => theme.container};\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  cursor: text;\n  padding: calc(0.5em - 1px);\n\n  :hover:not(:focus-within) {\n    background-color: ${({ theme }) => theme.onHover(theme.container)};\n    border-color: ${({ theme }) => theme.onHover(theme.container)};\n  }\n\n  :focus-within {\n    border-color: ${({ theme }) => theme.active};\n  }\n`\n","import { largeIconCss } from 'lib/icons'\nimport styled, { ThemedText } from 'lib/theme'\nimport { ReactElement, ReactNode } from 'react'\n\nimport Row from './Row'\n\nconst HeaderRow = styled(Row)`\n  height: 1.75em;\n  margin: 0 0.75em 0.75em;\n  padding-top: 0.5em;\n  ${largeIconCss}\n`\n\nexport interface HeaderProps {\n  title?: ReactElement\n  children: ReactNode\n}\n\nexport default function Header({ title, children }: HeaderProps) {\n  return (\n    <HeaderRow iconSize={1.2}>\n      <Row gap={0.5}>{title && <ThemedText.Subhead1>{title}</ThemedText.Subhead1>}</Row>\n      <Row gap={1}>{children}</Row>\n    </HeaderRow>\n  )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport styled, { ThemedText } from 'lib/theme'\n\nimport Button from '../Button'\nimport Row from '../Row'\nimport TokenImg from '../TokenImg'\n\nconst TokenButton = styled(Button)`\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  padding: 0.25em 0.75em 0.25em 0.25em;\n`\n\ninterface TokenBaseProps {\n  value: Currency\n  onClick: (value: Currency) => void\n}\n\nexport default function TokenBase({ value, onClick }: TokenBaseProps) {\n  return (\n    <TokenButton onClick={() => onClick(value)}>\n      <ThemedText.ButtonMedium>\n        <Row gap={0.5}>\n          <TokenImg token={value} size={1.5} />\n          {value.symbol}\n        </Row>\n      </ThemedText.ButtonMedium>\n    </TokenButton>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { ChevronDown } from 'lib/icons'\nimport styled, { ThemedText } from 'lib/theme'\nimport { useMemo } from 'react'\n\nimport Button from '../Button'\nimport Row from '../Row'\nimport TokenImg from '../TokenImg'\n\nconst StyledTokenButton = styled(Button)<{ empty?: boolean }>`\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  padding: 0.25em;\n  padding-left: ${({ empty }) => (empty ? 0.75 : 0.25)}em;\n\n  :disabled {\n    // prevents border from expanding the button's box size\n    padding: calc(0.25em - 1px);\n    padding-left: calc(${({ empty }) => (empty ? 0.75 : 0.25)}em - 1px);\n  }\n`\n\nconst TokenButtonRow = styled(Row)<{ collapsed: boolean }>`\n  height: 1.2em;\n  max-width: ${({ collapsed }) => (collapsed ? '1.2' : '8.2')}em;\n  overflow-x: hidden;\n  transition: max-width 0.25s linear;\n`\n\ninterface TokenButtonProps {\n  value?: Currency\n  collapsed: boolean\n  disabled?: boolean\n  onClick: () => void\n}\n\nexport default function TokenButton({ value, collapsed, disabled, onClick }: TokenButtonProps) {\n  const buttonBackgroundColor = useMemo(() => (value ? 'interactive' : 'accent'), [value])\n  const contentColor = useMemo(() => (value || disabled ? 'onInteractive' : 'onAccent'), [value, disabled])\n  return (\n    <StyledTokenButton onClick={onClick} empty={!value} color={buttonBackgroundColor} disabled={disabled}>\n      <ThemedText.ButtonLarge color={contentColor}>\n        <TokenButtonRow gap={0.4} collapsed={Boolean(value) && collapsed}>\n          {value ? (\n            <>\n              <TokenImg token={value} size={1.2} />\n              {value.symbol}\n            </>\n          ) : (\n            <Trans>Select a token</Trans>\n          )}\n          <ChevronDown color={contentColor} strokeWidth={3} />\n        </TokenButtonRow>\n      </ThemedText.ButtonLarge>\n    </StyledTokenButton>\n  )\n}\n","import { useLingui } from '@lingui/react'\nimport { Currency } from '@uniswap/sdk-core'\nimport useActiveWeb3React from 'lib/hooks/useActiveWeb3React'\nimport useCurrencyBalance from 'lib/hooks/useCurrencyBalance'\nimport useNativeEvent from 'lib/hooks/useNativeEvent'\nimport useScrollbar from 'lib/hooks/useScrollbar'\nimport styled, { ThemedText } from 'lib/theme'\nimport {\n  ComponentClass,\n  CSSProperties,\n  forwardRef,\n  KeyboardEvent,\n  memo,\n  SyntheticEvent,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { areEqual, FixedSizeList, FixedSizeListProps } from 'react-window'\nimport invariant from 'tiny-invariant'\nimport { currencyId } from 'utils/currencyId'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\n\nimport { BaseButton } from '../Button'\nimport Column from '../Column'\nimport Row from '../Row'\nimport TokenImg from '../TokenImg'\n\nconst TokenButton = styled(BaseButton)`\n  border-radius: 0;\n  outline: none;\n  padding: 0.5em 0.75em;\n`\n\nconst ITEM_SIZE = 56\ntype ItemData = Currency[]\ninterface FixedSizeTokenList extends FixedSizeList<ItemData>, ComponentClass<FixedSizeListProps<ItemData>> {}\nconst TokenList = styled(FixedSizeList as unknown as FixedSizeTokenList)<{\n  hover: number\n  scrollbar?: ReturnType<typeof useScrollbar>\n}>`\n  ${TokenButton}[data-index='${({ hover }) => hover}'] {\n    background-color: ${({ theme }) => theme.onHover(theme.module)};\n  }\n\n  ${({ scrollbar }) => scrollbar}\n  overscroll-behavior: none; // prevent Firefox's bouncy overscroll effect (because it does not trigger the scroll handler)\n`\nconst OnHover = styled.div<{ hover: number }>`\n  background-color: ${({ theme }) => theme.onHover(theme.module)};\n  height: ${ITEM_SIZE}px;\n  left: 0;\n  position: absolute;\n  top: ${({ hover }) => hover * ITEM_SIZE}px;\n  width: 100%;\n`\n\ninterface TokenOptionProps {\n  index: number\n  value: Currency\n  style: CSSProperties\n}\n\ninterface BubbledEvent extends SyntheticEvent {\n  index?: number\n  token?: Currency\n  ref?: HTMLButtonElement\n}\n\nfunction TokenOption({ index, value, style }: TokenOptionProps) {\n  const { i18n } = useLingui()\n  const ref = useRef<HTMLButtonElement>(null)\n  // Annotate the event to be handled later instead of passing in handlers to avoid rerenders.\n  // This prevents token logos from reloading and flashing on the screen.\n  const onEvent = (e: BubbledEvent) => {\n    e.index = index\n    e.token = value\n    e.ref = ref.current ?? undefined\n  }\n\n  const { account } = useActiveWeb3React()\n  const balance = useCurrencyBalance(account, value)\n\n  return (\n    <TokenButton\n      data-index={index}\n      style={style}\n      onClick={onEvent}\n      onBlur={onEvent}\n      onFocus={onEvent}\n      onMouseMove={onEvent}\n      onKeyDown={onEvent}\n      ref={ref}\n    >\n      <ThemedText.Body1>\n        <Row>\n          <Row gap={0.5}>\n            <TokenImg token={value} size={1.5} />\n            <Column flex gap={0.125} align=\"flex-start\">\n              <ThemedText.Subhead1>{value.symbol}</ThemedText.Subhead1>\n              <ThemedText.Caption color=\"secondary\">{value.name}</ThemedText.Caption>\n            </Column>\n          </Row>\n          {balance?.greaterThan(0) && formatCurrencyAmount(balance, 2, i18n.locale)}\n        </Row>\n      </ThemedText.Body1>\n    </TokenButton>\n  )\n}\n\nconst itemKey = (index: number, tokens: ItemData) => currencyId(tokens[index])\nconst ItemRow = memo(function ItemRow({\n  data: tokens,\n  index,\n  style,\n}: {\n  data: ItemData\n  index: number\n  style: CSSProperties\n}) {\n  return <TokenOption index={index} value={tokens[index]} style={style} />\n},\nareEqual)\n\ninterface TokenOptionsHandle {\n  onKeyDown: (e: KeyboardEvent) => void\n  blur: () => void\n}\n\ninterface TokenOptionsProps {\n  tokens: Currency[]\n  onSelect: (token: Currency) => void\n}\n\nconst TokenOptions = forwardRef<TokenOptionsHandle, TokenOptionsProps>(function TokenOptions(\n  { tokens, onSelect }: TokenOptionsProps,\n  ref\n) {\n  const [focused, setFocused] = useState(false)\n  const [hover, setHover] = useState(-1)\n  useEffect(() => setHover(-1), [tokens])\n\n  const list = useRef<FixedSizeList>(null)\n  const onKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n        if (e.key === 'ArrowDown' && hover < tokens.length - 1) {\n          scrollTo(hover + 1)\n        } else if (e.key === 'ArrowUp' && hover > 0) {\n          scrollTo(hover - 1)\n        } else if (e.key === 'ArrowUp' && hover === -1) {\n          scrollTo(tokens.length - 1)\n        }\n        e.preventDefault()\n      }\n      if (e.key === 'Enter' && hover) {\n        onSelect(tokens[hover])\n      }\n\n      function scrollTo(index: number) {\n        list.current?.scrollToItem(index)\n        setHover(index)\n      }\n    },\n    [hover, onSelect, tokens]\n  )\n  const blur = useCallback(() => setHover(-1), [])\n  useImperativeHandle(ref, () => ({ onKeyDown, blur }), [blur, onKeyDown])\n\n  const onClick = useCallback(({ token }: BubbledEvent) => token && onSelect(token), [onSelect])\n  const onFocus = useCallback(({ index }: BubbledEvent) => {\n    if (index !== undefined) {\n      setHover(index)\n      setFocused(true)\n    }\n  }, [])\n  const onBlur = useCallback(() => setFocused(false), [])\n  const onMouseMove = useCallback(\n    ({ index, ref }: BubbledEvent) => {\n      if (index !== undefined) {\n        setHover(index)\n        if (focused) {\n          ref?.focus()\n        }\n      }\n    },\n    [focused]\n  )\n\n  const [element, setElement] = useState<HTMLElement | null>(null)\n  const scrollbar = useScrollbar(element, { padded: true })\n\n  const onHover = useRef<HTMLDivElement>(null)\n  // use native onscroll handler to capture Safari's bouncy overscroll effect\n  useNativeEvent(element, 'scroll', (e) => {\n    invariant(element)\n    if (onHover.current) {\n      // must be set synchronously to avoid jank (avoiding useState)\n      onHover.current.style.marginTop = `${-element.scrollTop}px`\n    }\n  })\n\n  return (\n    <Column\n      align=\"unset\"\n      grow\n      onKeyDown={onKeyDown}\n      onClick={onClick}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      onMouseMove={onMouseMove}\n      style={{ overflow: 'hidden' }}\n    >\n      {/* OnHover is a workaround to Safari's incorrect (overflow: overlay) implementation */}\n      <OnHover hover={hover} ref={onHover} />\n      <AutoSizer disableWidth>\n        {({ height }) => (\n          <TokenList\n            hover={hover}\n            height={height}\n            width=\"100%\"\n            itemCount={tokens.length}\n            itemData={tokens}\n            itemKey={itemKey}\n            itemSize={ITEM_SIZE}\n            className=\"scrollbar\"\n            ref={list}\n            outerRef={setElement}\n            scrollbar={scrollbar}\n          >\n            {ItemRow}\n          </TokenList>\n        )}\n      </AutoSizer>\n    </Column>\n  )\n})\n\nexport default TokenOptions\n"],"sourceRoot":""}