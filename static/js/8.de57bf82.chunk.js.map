{"version":3,"sources":["lib/components/Swap/Settings/index.tsx","lib/components/Row.tsx","lib/components/Button.tsx","lib/components/Column.tsx","lib/state/atoms.ts","lib/components/Rule.tsx","lib/state/settings.ts","lib/components/Dialog.tsx","lib/hooks/useScrollbar.ts","lib/hooks/useNativeEvent.ts","lib/hooks/useUnmount.ts","lib/components/Input.tsx","lib/components/Header.tsx","../node_modules/popper-max-size-modifier/dist/popper-max-size-modifier.esm.js","lib/components/Popover.tsx","lib/components/Tooltip.tsx","lib/components/Swap/Settings/components.tsx","lib/hooks/useTransactionDeadline.ts","lib/components/Swap/Settings/MaxSlippageSelect.tsx","lib/components/Swap/Settings/TransactionTtlInput.tsx"],"names":["SettingsDialog","useState","boundary","setBoundary","scrollbar","useScrollbar","padded","resetSettings","useResetAtom","settingsAtom","title","ruled","onClick","ButtonSmall","gap","style","paddingTop","ref","css","value","SettingsButton","styled","IconButton","SettingsIcon","hover","Settings","disabled","open","setOpen","setHover","onMouseEnter","onMouseLeave","icon","color","onClose","Row","div","align","theme","flex","grow","children","Children","count","justify","pad","BaseButton","button","onInteractive","onHover","outline","secondary","transparentButton","defaultColor","TextButton","SecondaryButton","Icon","iconProps","props","Column","pickAtom","anAtom","key","setter","draft","update","atom","get","set","withImmer","derived","setTogglable","Rule","hr","scrollingEdge","MAX_VALID_SLIPPAGE","Percent","MIN_HIGH_SLIPPAGE","initialSettings","autoSlippage","maxSlippage","undefined","transactionTtl","mockTogglable","clientSideRouter","atomWithReset","autoSlippageAtom","maxSlippageAtom","transactionTtlAtom","mockTogglableAtom","clientSideRouterAtom","Context","createContext","element","active","setActive","Provider","useRef","context","useEffect","current","inert","OnCloseContext","Header","useContext","X","Modal","borderRadius","Layer","DIALOG","Dialog","dialog","useUnmount","close","e","document","addEventListener","removeEventListener","createPortal","overflowCss","scrollbarCss","interactive","overflow","setOverflow","hasOverflow","useNativeEvent","useMemo","scrollHeight","clientHeight","eventListener","UNMOUNTING","node","parent","parentElement","removeChild","child","classList","add","onanimationend","call","Input","input","StringInput","forwardRef","onChange","target","inputMode","autoComplete","autoCorrect","type","placeholder","minLength","spellCheck","isNumericallyEqual","a","b","split","aInteger","aDecimal","bInteger","bDecimal","JSBI","equal","BigInt","NumericInput","enforcer","pattern","state","setState","validateChange","useCallback","event","nextInput","replace","maxLength","integerRegexp","integerEnforcer","nextUserInput","test","parseInt","isNaN","toString","IntegerInput","decimalRegexp","decimalEnforcer","DecimalInput","inputCss","container","HeaderRow","largeIconCss","iconSize","Subhead1","maxSize","name","enabled","phase","requiresIfExists","fn","_ref","options","detectOverflow","_ref2","modifiersData","preventOverflow","x","y","_state$rects$popper","rects","popper","width","height","basePlacement","placement","widthProp","heightProp","BoundaryContext","BoundaryProvider","PopoverContainer","show","TOOLTIP","Reference","Arrow","Popover","content","offset","contained","reference","popover","setPopover","arrow","setArrow","modifiers","padding","push","requires","styles","maxWidth","strategy","usePopper","attributes","className","useTooltip","setShow","enable","disable","onFocus","onBlur","IconTooltip","Tooltip","HelpCircle","showTooltip","tooltipProps","optionCss","selected","primary","Value","cursor","Label","tooltip","Subhead2","Caption","useDefaultTransactionTtl","chainId","useActiveWeb3React","L2_CHAIN_IDS","includes","L2_DEADLINE_FROM_NOW","DEFAULT_DEADLINE_FROM_NOW","useTransactionTtl","useAtom","useTransactionDeadline","ttl","defaultTtl","blockTimestamp","useCurrentBlockTimestamp","WarningState","highSlippage","invalidSlippage","Button","Custom","Option","Wrapper","wrapper","onSelect","tooltipHandlers","Check","size","Warning","memo","INVALID_SLIPPAGE","XOctagon","HIGH_SLIPPAGE","AlertTriangle","NONE","MaxSlippageSelect","focus","setAutoSlippage","setMaxSlippage","maxSlippageInput","warning","setWarning","setShowTooltip","processInput","numerator","Math","floor","percent","greaterThan","onInputSelect","ButtonMedium","max","length","TransactionTtlInput","setTtl","Body1","parseFloat"],"mappings":"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","file":"static/js/8.de57bf82.chunk.js","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { useResetAtom } from 'jotai/utils'\nimport useScrollbar from 'lib/hooks/useScrollbar'\nimport { Settings as SettingsIcon } from 'lib/icons'\nimport { settingsAtom } from 'lib/state/settings'\nimport styled, { ThemedText } from 'lib/theme'\nimport React, { useState } from 'react'\n\nimport { IconButton, TextButton } from '../../Button'\nimport Column from '../../Column'\nimport Dialog, { Header } from '../../Dialog'\nimport { BoundaryProvider } from '../../Popover'\nimport MaxSlippageSelect from './MaxSlippageSelect'\nimport TransactionTtlInput from './TransactionTtlInput'\n\nexport function SettingsDialog() {\n  const [boundary, setBoundary] = useState<HTMLDivElement | null>(null)\n  const scrollbar = useScrollbar(boundary, { padded: true })\n  const resetSettings = useResetAtom(settingsAtom)\n  return (\n    <>\n      <Header title={<Trans>Settings</Trans>} ruled>\n        <TextButton onClick={resetSettings}>\n          <ThemedText.ButtonSmall>\n            <Trans>Reset</Trans>\n          </ThemedText.ButtonSmall>\n        </TextButton>\n      </Header>\n      <Column gap={1} style={{ paddingTop: '1em' }} ref={setBoundary} padded css={scrollbar}>\n        <BoundaryProvider value={boundary}>\n          <MaxSlippageSelect />\n          <TransactionTtlInput />\n        </BoundaryProvider>\n      </Column>\n    </>\n  )\n}\n\nconst SettingsButton = styled(IconButton)<{ hover: boolean }>`\n  ${SettingsIcon} {\n    transform: ${({ hover }) => hover && 'rotate(45deg)'};\n    transition: ${({ hover }) => hover && 'transform 0.25s'};\n    will-change: transform;\n  }\n`\n\nexport default function Settings({ disabled }: { disabled?: boolean }) {\n  const [open, setOpen] = useState(false)\n  const [hover, setHover] = useState(false)\n  return (\n    <>\n      <SettingsButton\n        disabled={disabled}\n        hover={hover}\n        onClick={() => setOpen(true)}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        icon={SettingsIcon}\n      />\n      {open && (\n        <Dialog color=\"module\" onClose={() => setOpen(false)}>\n          <SettingsDialog />\n        </Dialog>\n      )}\n    </>\n  )\n}\n","import styled, { Color, Theme } from 'lib/theme'\nimport { Children, ReactNode } from 'react'\n\nconst Row = styled.div<{\n  color?: Color\n  align?: string\n  justify?: string\n  pad?: number\n  gap?: number\n  flex?: true\n  grow?: true | 'first' | 'last'\n  children?: ReactNode\n  theme: Theme\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-flow: wrap;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: column;\n  grid-template-columns: ${({ grow, children }) => {\n    if (grow === 'first') return '1fr'\n    if (grow === 'last') return `repeat(${Children.count(children) - 1}, auto) 1fr`\n    if (grow) return `repeat(${Children.count(children)}, 1fr)`\n    return undefined\n  }};\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ pad }) => pad && `0 ${pad}em`};\n`\n\nexport default Row\n","import { Icon } from 'lib/icons'\nimport styled, { Color } from 'lib/theme'\nimport { ComponentProps } from 'react'\n\nexport const BaseButton = styled.button`\n  background-color: transparent;\n  border: none;\n  border-radius: 0.5em;\n  color: currentColor;\n  cursor: pointer;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n\n  :disabled {\n    cursor: initial;\n    filter: saturate(0) opacity(0.4);\n  }\n`\n\nexport default styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = 'interactive', theme }) => color === 'interactive' && theme.onInteractive};\n\n  :enabled {\n    background-color: ${({ color = 'interactive', theme }) => theme[color]};\n  }\n\n  :enabled:hover {\n    background-color: ${({ color = 'interactive', theme }) => theme.onHover(theme[color])};\n  }\n\n  :disabled {\n    border: 1px solid ${({ theme }) => theme.outline};\n    color: ${({ theme }) => theme.secondary};\n    cursor: initial;\n  }\n`\n\nconst transparentButton = (defaultColor: Color) => styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = defaultColor, theme }) => theme[color]};\n\n  :enabled:hover {\n    color: ${({ color = defaultColor, theme }) => theme.onHover(theme[color])};\n  }\n`\n\nexport const TextButton = transparentButton('accent')\n\nconst SecondaryButton = transparentButton('secondary')\n\ninterface IconButtonProps {\n  icon: Icon\n  iconProps?: ComponentProps<Icon>\n}\n\nexport function IconButton({ icon: Icon, iconProps, ...props }: IconButtonProps & ComponentProps<typeof BaseButton>) {\n  return (\n    <SecondaryButton {...props}>\n      <Icon {...iconProps} />\n    </SecondaryButton>\n  )\n}\n","import styled, { Color, css, Theme } from 'lib/theme'\n\nconst Column = styled.div<{\n  align?: string\n  color?: Color\n  justify?: string\n  gap?: number\n  padded?: true\n  flex?: true\n  grow?: true\n  theme: Theme\n  css?: ReturnType<typeof css>\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-direction: column;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: row;\n  grid-template-columns: 1fr;\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ padded }) => padded && '0.75em'};\n\n  ${({ css }) => css}\n`\n\nexport default Column\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { Draft } from 'immer'\nimport { atom, WritableAtom } from 'jotai'\nimport { withImmer } from 'jotai/immer'\n\n/**\n * Creates a derived atom whose value is the picked object property.\n * By default, the setter acts as a primitive atom's, changing the original atom.\n * A custom setter may also be passed, which uses an Immer Draft so that it may be mutated directly.\n */\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key]\n): WritableAtom<Value[Key], Update>\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update extends Value[Key]>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter?: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key]\n): WritableAtom<Value[Key], Update>\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update extends Value[Key]>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key] = (draft, update) =>\n    update as Draft<Value>[Key]\n): WritableAtom<Value[Key], Update> {\n  return atom(\n    (get) => get(anAtom)[key],\n    (get, set, update: Update) =>\n      set(withImmer(anAtom), (value) => {\n        const derived = setter(value[key], update)\n        value[key] = derived\n      })\n  )\n}\n\n/** Sets a togglable atom to invert its state at the next render. */\nexport function setTogglable(draft: boolean) {\n  return !draft\n}\n","import styled from 'lib/theme'\n\nconst Rule = styled.hr<{ padded?: true; scrollingEdge?: 'top' | 'bottom' }>`\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.outline};\n  margin: 0 ${({ padded }) => (padded ? '0.75em' : 0)};\n  margin-bottom: ${({ scrollingEdge }) => (scrollingEdge === 'bottom' ? -1 : 0)}px;\n  margin-top: ${({ scrollingEdge }) => (scrollingEdge !== 'bottom' ? -1 : 0)}px;\n`\n\nexport default Rule\n","import { Percent } from '@uniswap/sdk-core'\nimport { atomWithReset } from 'jotai/utils'\n\nimport { pickAtom, setTogglable } from './atoms'\n\nexport const MAX_VALID_SLIPPAGE = new Percent(1, 2)\nexport const MIN_HIGH_SLIPPAGE = new Percent(1, 100)\n\ninterface Settings {\n  autoSlippage: boolean // if true, slippage will use the default calculation\n  maxSlippage: number | undefined // expressed as a percent\n  transactionTtl: number | undefined\n  mockTogglable: boolean\n  clientSideRouter: boolean // whether to use the client-side router or query the remote API\n}\n\nconst initialSettings: Settings = {\n  autoSlippage: true,\n  maxSlippage: undefined,\n  transactionTtl: undefined,\n  mockTogglable: true,\n  clientSideRouter: true,\n}\n\nexport const settingsAtom = atomWithReset(initialSettings)\nexport const autoSlippageAtom = pickAtom(settingsAtom, 'autoSlippage')\nexport const maxSlippageAtom = pickAtom(settingsAtom, 'maxSlippage')\nexport const transactionTtlAtom = pickAtom(settingsAtom, 'transactionTtl')\nexport const mockTogglableAtom = pickAtom(settingsAtom, 'mockTogglable', setTogglable)\nexport const clientSideRouterAtom = pickAtom(settingsAtom, 'clientSideRouter')\n","import 'wicg-inert'\n\nimport useUnmount from 'lib/hooks/useUnmount'\nimport { X } from 'lib/icons'\nimport styled, { Color, Layer, ThemeProvider } from 'lib/theme'\nimport { createContext, ReactElement, ReactNode, useContext, useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { IconButton } from './Button'\nimport Column from './Column'\nimport { default as BaseHeader } from './Header'\nimport Rule from './Rule'\n\n// Include inert from wicg-inert\ndeclare global {\n  interface HTMLElement {\n    inert?: boolean\n  }\n}\n\nconst Context = createContext({\n  element: null as HTMLElement | null,\n  active: false,\n  setActive: (active: boolean) => undefined as void,\n})\n\ninterface ProviderProps {\n  value: HTMLElement | null\n  children: ReactNode\n}\n\nexport function Provider({ value, children }: ProviderProps) {\n  // If a Dialog is active, mark the main content inert\n  const ref = useRef<HTMLDivElement>(null)\n  const [active, setActive] = useState(false)\n  const context = { element: value, active, setActive }\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.inert = active\n    }\n  }, [active])\n  return (\n    <div ref={ref}>\n      <Context.Provider value={context}>{children}</Context.Provider>\n    </div>\n  )\n}\n\nconst OnCloseContext = createContext<() => void>(() => void 0)\n\ninterface HeaderProps {\n  title?: ReactElement\n  ruled?: boolean\n  children?: ReactNode\n}\n\nexport function Header({ title, children, ruled }: HeaderProps) {\n  return (\n    <>\n      <Column>\n        <BaseHeader title={title}>\n          {children}\n          <IconButton color=\"primary\" onClick={useContext(OnCloseContext)} icon={X} />\n        </BaseHeader>\n        {ruled && <Rule padded />}\n      </Column>\n    </>\n  )\n}\n\nexport const Modal = styled.div<{ color: Color }>`\n  background-color: ${({ color, theme }) => theme[color]};\n  border-radius: ${({ theme }) => theme.borderRadius * 0.75}em;\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 0.5em);\n  left: 0;\n  margin: 0.25em;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  width: calc(100% - 0.5em);\n  z-index: ${Layer.DIALOG};\n`\n\ninterface DialogProps {\n  color: Color\n  children: ReactNode\n  onClose?: () => void\n}\n\nexport default function Dialog({ color, children, onClose = () => void 0 }: DialogProps) {\n  const context = useContext(Context)\n  useEffect(() => {\n    context.setActive(true)\n    return () => context.setActive(false)\n  }, [context])\n  const dialog = useRef<HTMLDivElement>(null)\n  useUnmount(dialog)\n  useEffect(() => {\n    const close = (e: KeyboardEvent) => e.key === 'Escape' && onClose?.()\n    document.addEventListener('keydown', close, true)\n    return () => document.removeEventListener('keydown', close, true)\n  }, [onClose])\n  return (\n    context.element &&\n    createPortal(\n      <ThemeProvider>\n        <Modal color={color} ref={dialog}>\n          <OnCloseContext.Provider value={onClose}>{children}</OnCloseContext.Provider>\n        </Modal>\n      </ThemeProvider>,\n      context.element\n    )\n  )\n}\n","import { css } from 'lib/theme'\nimport { useEffect, useMemo, useState } from 'react'\n\nimport useNativeEvent from './useNativeEvent'\n\nconst overflowCss = css`\n  overflow-y: scroll;\n`\n\n/** Customizes the scrollbar for vertical overflow. */\nconst scrollbarCss = (padded: boolean) => css`\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 1.25em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: radial-gradient(\n        closest-corner at 0.25em 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        transparent 0.25em\n      ),\n      linear-gradient(\n        to bottom,\n        #ffffff00 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        ${({ theme }) => theme.interactive} calc(100% - 0.25em),\n        #ffffff00 calc(100% - 0.25em)\n      ),\n      radial-gradient(\n        closest-corner at 0.25em calc(100% - 0.25em),\n        ${({ theme }) => theme.interactive} 0.25em,\n        #ffffff00 0.25em\n      );\n    background-clip: padding-box;\n    border: none;\n    ${padded ? 'border-right' : 'border-left'}: 0.75em solid transparent;\n  }\n\n  @supports not selector(::-webkit-scrollbar-thumb) {\n    scrollbar-color: ${({ theme }) => theme.interactive} transparent;\n  }\n`\n\ninterface ScrollbarOptions {\n  padded?: boolean\n}\n\nexport default function useScrollbar(element: HTMLElement | null, { padded = false }: ScrollbarOptions = {}) {\n  const [overflow, setOverflow] = useState(true)\n  useEffect(() => {\n    setOverflow(hasOverflow(element))\n  }, [element])\n  useNativeEvent(element, 'transitionend', () => setOverflow(hasOverflow(element)))\n  return useMemo(() => (overflow ? scrollbarCss(padded) : overflowCss), [overflow, padded])\n\n  function hasOverflow(element: HTMLElement | null) {\n    if (!element) {\n      return true\n    }\n    return element.scrollHeight > element.clientHeight\n  }\n}\n","import { useEffect } from 'react'\n\nexport default function useNativeEvent(\n  element: HTMLElement | null,\n  ...eventListener: Parameters<HTMLElement['addEventListener']>\n) {\n  useEffect(() => {\n    element?.addEventListener(...eventListener)\n    return () => element?.removeEventListener(...eventListener)\n  }, [element, eventListener])\n}\n","import { RefObject, useEffect } from 'react'\n\nexport const UNMOUNTING = 'unmounting'\n\n/**\n * Delays a node's unmounting so that an animation may be applied.\n * An animation *must* be applied, or the node will not unmount.\n */\nexport default function useUnmount(node: RefObject<HTMLElement>) {\n  useEffect(() => {\n    const current = node.current\n    const parent = current?.parentElement\n    const removeChild = parent?.removeChild\n    if (parent && removeChild) {\n      parent.removeChild = function <T extends Node>(child: T) {\n        if ((child as Node) === current) {\n          current.classList.add(UNMOUNTING)\n          current.onanimationend = () => {\n            removeChild.call(parent, child)\n          }\n          return child\n        } else {\n          return removeChild.call(parent, child) as T\n        }\n      }\n    }\n    return () => {\n      if (parent && removeChild) {\n        parent.removeChild = removeChild\n      }\n    }\n  }, [node])\n}\n","import JSBI from 'jsbi'\nimport styled, { css } from 'lib/theme'\nimport { forwardRef, HTMLProps, useCallback, useEffect, useState } from 'react'\n\nconst Input = styled.input`\n  -webkit-appearance: textfield;\n  background-color: transparent;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  outline: none;\n  overflow: hidden;\n  padding: 0;\n  text-align: left;\n  text-overflow: ellipsis;\n  width: 100%;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.secondary};\n  }\n`\n\nexport default Input\n\ninterface StringInputProps extends Omit<HTMLProps<HTMLInputElement>, 'onChange' | 'as' | 'value'> {\n  value: string\n  onChange: (input: string) => void\n}\n\nexport const StringInput = forwardRef<HTMLInputElement, StringInputProps>(function StringInput(\n  { value, onChange, ...props }: StringInputProps,\n  ref\n) {\n  return (\n    <Input\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      // universal input options\n      inputMode=\"text\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      placeholder={props.placeholder || '-'}\n      minLength={1}\n      spellCheck=\"false\"\n      ref={ref as any}\n      {...props}\n    />\n  )\n})\n\ninterface NumericInputProps extends Omit<HTMLProps<HTMLInputElement>, 'onChange' | 'as' | 'value'> {\n  value: string\n  onChange: (input: string) => void\n}\n\ninterface EnforcedNumericInputProps extends NumericInputProps {\n  // Validates nextUserInput; returns stringified value, or null if invalid\n  enforcer: (nextUserInput: string) => string | null\n}\n\nfunction isNumericallyEqual(a: string, b: string) {\n  const [aInteger, aDecimal] = a.split('.')\n  const [bInteger, bDecimal] = b.split('.')\n  return (\n    JSBI.equal(JSBI.BigInt(aInteger ?? 0), JSBI.BigInt(bInteger ?? 0)) &&\n    JSBI.equal(JSBI.BigInt(aDecimal ?? 0), JSBI.BigInt(bDecimal ?? 0))\n  )\n}\n\nconst NumericInput = forwardRef<HTMLInputElement, EnforcedNumericInputProps>(function NumericInput(\n  { value, onChange, enforcer, pattern, ...props }: EnforcedNumericInputProps,\n  ref\n) {\n  const [state, setState] = useState(value ?? '')\n  useEffect(() => {\n    if (!isNumericallyEqual(state, value)) {\n      setState(value ?? '')\n    }\n  }, [value, state, setState])\n\n  const validateChange = useCallback(\n    (event) => {\n      const nextInput = enforcer(event.target.value.replace(/,/g, '.'))\n      if (nextInput !== null) {\n        setState(nextInput ?? '')\n        if (!isNumericallyEqual(nextInput, value)) {\n          onChange(nextInput)\n        }\n      }\n    },\n    [value, onChange, enforcer]\n  )\n\n  return (\n    <Input\n      value={state}\n      onChange={validateChange}\n      // universal input options\n      inputMode=\"decimal\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern={pattern}\n      placeholder={props.placeholder || '0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n      ref={ref as any}\n      {...props}\n    />\n  )\n})\n\nconst integerRegexp = /^\\d*$/\nconst integerEnforcer = (nextUserInput: string) => {\n  if (nextUserInput === '' || integerRegexp.test(nextUserInput)) {\n    const nextInput = parseInt(nextUserInput)\n    return isNaN(nextInput) ? '' : nextInput.toString()\n  }\n  return null\n}\nexport const IntegerInput = forwardRef(function IntegerInput(props: NumericInputProps, ref) {\n  return <NumericInput pattern=\"^[0-9]*$\" enforcer={integerEnforcer} ref={ref as any} {...props} />\n})\n\nconst decimalRegexp = /^\\d*(?:[.])?\\d*$/\nconst decimalEnforcer = (nextUserInput: string) => {\n  if (nextUserInput === '') {\n    return ''\n  } else if (nextUserInput === '.') {\n    return '0.'\n  } else if (decimalRegexp.test(nextUserInput)) {\n    return nextUserInput\n  }\n  return null\n}\nexport const DecimalInput = forwardRef(function DecimalInput(props: NumericInputProps, ref) {\n  return <NumericInput pattern=\"^[0-9]*[.,]?[0-9]*$\" enforcer={decimalEnforcer} ref={ref as any} {...props} />\n})\n\nexport const inputCss = css`\n  background-color: ${({ theme }) => theme.container};\n  border: 1px solid ${({ theme }) => theme.container};\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  cursor: text;\n  padding: calc(0.5em - 1px);\n\n  :hover:not(:focus-within) {\n    background-color: ${({ theme }) => theme.onHover(theme.container)};\n    border-color: ${({ theme }) => theme.onHover(theme.container)};\n  }\n\n  :focus-within {\n    border-color: ${({ theme }) => theme.active};\n  }\n`\n","import { largeIconCss } from 'lib/icons'\nimport styled, { ThemedText } from 'lib/theme'\nimport { ReactElement, ReactNode } from 'react'\n\nimport Row from './Row'\n\nconst HeaderRow = styled(Row)`\n  height: 1.75em;\n  margin: 0 0.75em 0.75em;\n  padding-top: 0.5em;\n  ${largeIconCss}\n`\n\nexport interface HeaderProps {\n  title?: ReactElement\n  children: ReactNode\n}\n\nexport default function Header({ title, children }: HeaderProps) {\n  return (\n    <HeaderRow iconSize={1.2}>\n      <Row gap={0.5}>{title && <ThemedText.Subhead1>{title}</ThemedText.Subhead1>}</Row>\n      <Row gap={1}>{children}</Row>\n    </HeaderRow>\n  )\n}\n","import { detectOverflow } from '@popperjs/core';\n\nvar maxSize = {\n  name: 'maxSize',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['offset', 'preventOverflow', 'flip'],\n  fn: function fn(_ref) {\n    var state = _ref.state,\n        name = _ref.name,\n        options = _ref.options;\n    var overflow = detectOverflow(state, options);\n\n    var _ref2 = state.modifiersData.preventOverflow || {\n      x: 0,\n      y: 0\n    },\n        x = _ref2.x,\n        y = _ref2.y;\n\n    var _state$rects$popper = state.rects.popper,\n        width = _state$rects$popper.width,\n        height = _state$rects$popper.height;\n\n    var _state$placement$spli = state.placement.split('-'),\n        basePlacement = _state$placement$spli[0];\n\n    var widthProp = basePlacement === 'left' ? 'left' : 'right';\n    var heightProp = basePlacement === 'top' ? 'top' : 'bottom';\n    state.modifiersData[name] = {\n      width: width - overflow[widthProp] - x,\n      height: height - overflow[heightProp] - y\n    };\n  }\n};\n\nexport default maxSize;\n","import { Options, Placement } from '@popperjs/core'\nimport styled, { Layer } from 'lib/theme'\nimport maxSize from 'popper-max-size-modifier'\nimport React, { createContext, useContext, useMemo, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport { usePopper } from 'react-popper'\n\nconst BoundaryContext = createContext<HTMLDivElement | null>(null)\n\nexport const BoundaryProvider = BoundaryContext.Provider\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  background-color: ${({ theme }) => theme.dialog};\n  border: 1px solid ${({ theme }) => theme.outline};\n  border-radius: 0.5em;\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  padding: 8px;\n  transition: visibility 0.25s linear, opacity 0.25s linear;\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  z-index: ${Layer.TOOLTIP};\n`\n\nconst Reference = styled.div`\n  display: inline-block;\n`\n\nconst Arrow = styled.div`\n  height: 8px;\n  width: 8px;\n  z-index: ${Layer.TOOLTIP};\n\n  ::before {\n    background: ${({ theme }) => theme.dialog};\n    border: 1px solid ${({ theme }) => theme.outline};\n    content: '';\n    height: 8px;\n    position: absolute;\n    transform: rotate(45deg);\n    width: 8px;\n  }\n\n  &.arrow-top {\n    bottom: -4px;\n    ::before {\n      border-radius: 1px;\n      border-left: none;\n      border-top: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px; // includes -1px from border\n    ::before {\n      border-bottom: none;\n      border-right: none;\n      border-radius: 1px;\n    }\n  }\n\n  &.arrow-left {\n    right: -4px;\n    ::before {\n      border-bottom: none;\n      border-left: none;\n      border-radius: 1px;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px; // includes -1px from border\n    ::before {\n      border-radius: 1px;\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement: Placement\n  offset?: number\n  contained?: true\n}\n\nexport default function Popover({ content, show, children, placement, offset, contained }: PopoverProps) {\n  const boundary = useContext(BoundaryContext)\n  const reference = useRef<HTMLDivElement>(null)\n\n  // Use callback refs to be notified when instantiated\n  const [popover, setPopover] = useState<HTMLDivElement | null>(null)\n  const [arrow, setArrow] = useState<HTMLDivElement | null>(null)\n\n  const options = useMemo((): Options => {\n    const modifiers: Options['modifiers'] = [\n      { name: 'offset', options: { offset: [4, offset || 4] } },\n      { name: 'arrow', options: { element: arrow, padding: 4 } },\n    ]\n    if (contained) {\n      modifiers.push(\n        { name: 'preventOverflow', options: { boundary, padding: 8 } },\n        { name: 'flip', options: { boundary, padding: 8 } },\n        { ...maxSize, options: { boundary, padding: 8 } },\n        {\n          name: 'applyMaxSize',\n          enabled: true,\n          phase: 'beforeWrite',\n          requires: ['maxSize'],\n          fn({ state }) {\n            const { width } = state.modifiersData.maxSize\n            state.styles.popper = {\n              ...state.styles.popper,\n              maxWidth: `${width}px`,\n            }\n          },\n        }\n      )\n    }\n    return {\n      placement,\n      strategy: 'absolute',\n      modifiers,\n    }\n  }, [offset, arrow, contained, placement, boundary])\n\n  const { styles, attributes } = usePopper(reference.current, popover, options)\n\n  return (\n    <>\n      <Reference ref={reference}>{children}</Reference>\n      {boundary &&\n        createPortal(\n          <PopoverContainer show={show} ref={setPopover} style={styles.popper} {...attributes.popper}>\n            {content}\n            <Arrow\n              className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n              ref={setArrow}\n              style={styles.arrow}\n              {...attributes.arrow}\n            />\n          </PopoverContainer>,\n          boundary\n        )}\n    </>\n  )\n}\n","import { Placement } from '@popperjs/core'\nimport { HelpCircle, Icon } from 'lib/icons'\nimport styled from 'lib/theme'\nimport { ComponentProps, ReactNode, useCallback, useState } from 'react'\n\nimport { IconButton } from './Button'\nimport Popover from './Popover'\n\nexport interface TooltipHandlers {\n  onMouseEnter: () => void\n  onMouseLeave: () => void\n  onFocus: () => void\n  onBlur: () => void\n}\n\nexport function useTooltip(): [boolean, (show: boolean) => void, TooltipHandlers] {\n  const [show, setShow] = useState(false)\n  const enable = useCallback(() => setShow(true), [])\n  const disable = useCallback(() => setShow(false), [])\n  return [show, setShow, { onMouseEnter: enable, onMouseLeave: disable, onFocus: enable, onBlur: disable }]\n}\n\nconst IconTooltip = styled(IconButton)`\n  cursor: help;\n`\n\ninterface TooltipProps {\n  icon?: Icon\n  iconProps?: ComponentProps<Icon>\n  children: ReactNode\n  placement?: Placement\n  offset?: number\n  contained?: true\n}\n\nexport default function Tooltip({\n  icon: Icon = HelpCircle,\n  iconProps,\n  children,\n  placement = 'auto',\n  offset,\n  contained,\n}: TooltipProps) {\n  const [showTooltip, , tooltipProps] = useTooltip()\n  return (\n    <Popover content={children} show={showTooltip} placement={placement} offset={offset} contained={contained}>\n      <IconTooltip icon={Icon} iconProps={iconProps} {...tooltipProps} />\n    </Popover>\n  )\n}\n","import styled, { css, ThemedText } from 'lib/theme'\nimport { ReactNode } from 'react'\n// eslint-disable-next-line no-restricted-imports\nimport { AnyStyledComponent } from 'styled-components'\n\nimport Row from '../../Row'\nimport Tooltip from '../../Tooltip'\n\nexport const optionCss = (selected: boolean) => css`\n  border: 1px solid ${({ theme }) => (selected ? theme.active : theme.outline)};\n  border-radius: ${({ theme }) => theme.borderRadius * 0.2}em;\n  color: ${({ theme }) => theme.primary} !important;\n  display: grid;\n  grid-gap: 0.25em;\n  padding: calc(0.75em - 1px) 0.625em;\n\n  :enabled:hover {\n    border-color: ${({ theme }) => theme.onHover(selected ? theme.active : theme.outline)};\n  }\n\n  :enabled:focus-within {\n    border-color: ${({ theme }) => theme.active};\n  }\n`\n\nexport function value(Value: AnyStyledComponent) {\n  return styled(Value)<{ selected?: boolean; cursor?: string }>`\n    cursor: ${({ cursor }) => cursor ?? 'pointer'};\n  `\n}\n\ninterface LabelProps {\n  name: ReactNode\n  tooltip?: ReactNode\n}\n\nexport function Label({ name, tooltip }: LabelProps) {\n  return (\n    <Row gap={0.5} justify=\"flex-start\">\n      <ThemedText.Subhead2>{name}</ThemedText.Subhead2>\n      {tooltip && (\n        <Tooltip placement=\"top\" contained>\n          <ThemedText.Caption>{tooltip}</ThemedText.Caption>\n        </Tooltip>\n      )}\n    </Row>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { L2_CHAIN_IDS } from 'constants/chains'\nimport { DEFAULT_DEADLINE_FROM_NOW, L2_DEADLINE_FROM_NOW } from 'constants/misc'\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp'\nimport { useAtom } from 'jotai'\nimport { transactionTtlAtom } from 'lib/state/settings'\nimport { useMemo } from 'react'\n\nimport useActiveWeb3React from './useActiveWeb3React'\n\n/** Returns the default transaction TTL for the chain, in minutes. */\nexport function useDefaultTransactionTtl(): number {\n  const { chainId } = useActiveWeb3React()\n  if (chainId && L2_CHAIN_IDS.includes(chainId)) return L2_DEADLINE_FROM_NOW / 60\n  return DEFAULT_DEADLINE_FROM_NOW / 60\n}\n\n/** Returns the user-inputted transaction TTL, in minutes. */\nexport function useTransactionTtl(): [number | undefined, (ttl?: number) => void] {\n  return useAtom(transactionTtlAtom)\n}\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const [ttl] = useTransactionTtl()\n  const defaultTtl = useDefaultTransactionTtl()\n\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (!blockTimestamp) return undefined\n    return blockTimestamp.add((ttl || defaultTtl) /* in seconds */ * 60)\n  }, [blockTimestamp, defaultTtl, ttl])\n}\n","import { Trans } from '@lingui/macro'\nimport { Percent } from '@uniswap/sdk-core'\nimport { useAtom } from 'jotai'\nimport Popover from 'lib/components/Popover'\nimport { TooltipHandlers, useTooltip } from 'lib/components/Tooltip'\nimport { AlertTriangle, Check, Icon, LargeIcon, XOctagon } from 'lib/icons'\nimport { autoSlippageAtom, MAX_VALID_SLIPPAGE, maxSlippageAtom, MIN_HIGH_SLIPPAGE } from 'lib/state/settings'\nimport styled, { Color, ThemedText } from 'lib/theme'\nimport { memo, PropsWithChildren, ReactNode, useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\nimport { BaseButton, TextButton } from '../../Button'\nimport Column from '../../Column'\nimport { DecimalInput, inputCss } from '../../Input'\nimport Row from '../../Row'\nimport { Label, optionCss } from './components'\n\nconst tooltip = (\n  <Trans>Your transaction will revert if the price changes unfavorably by more than this percentage.</Trans>\n)\nconst highSlippage = <Trans>High slippage increases the risk of price movement</Trans>\nconst invalidSlippage = <Trans>Please enter a valid slippage %</Trans>\n\nconst placeholder = '0.10'\n\nconst Button = styled(TextButton)<{ selected: boolean }>`\n  ${({ selected }) => optionCss(selected)}\n`\n\nconst Custom = styled(BaseButton)<{ selected: boolean }>`\n  ${({ selected }) => optionCss(selected)}\n  ${inputCss}\n  padding: calc(0.75em - 3px) 0.625em;\n`\n\ninterface OptionProps extends Partial<TooltipHandlers> {\n  wrapper: typeof Button | typeof Custom\n  selected: boolean\n  onSelect: () => void\n  icon?: ReactNode\n}\n\nfunction Option({\n  wrapper: Wrapper,\n  children,\n  selected,\n  onSelect,\n  icon,\n  ...tooltipHandlers\n}: PropsWithChildren<OptionProps>) {\n  return (\n    <Wrapper selected={selected} onClick={onSelect} {...tooltipHandlers}>\n      <Row gap={0.5}>\n        {children}\n        {icon ? icon : <LargeIcon icon={selected ? Check : undefined} size={1.25} />}\n      </Row>\n    </Wrapper>\n  )\n}\n\nenum WarningState {\n  NONE,\n  HIGH_SLIPPAGE,\n  INVALID_SLIPPAGE,\n}\n\nconst Warning = memo(function Warning({ state, showTooltip }: { state: WarningState; showTooltip: boolean }) {\n  let icon: Icon\n  let color: Color\n  let content: ReactNode\n  let show = showTooltip\n  switch (state) {\n    case WarningState.INVALID_SLIPPAGE:\n      icon = XOctagon\n      color = 'error'\n      content = invalidSlippage\n      show = true\n      break\n    case WarningState.HIGH_SLIPPAGE:\n      icon = AlertTriangle\n      color = 'warning'\n      content = highSlippage\n      break\n    case WarningState.NONE:\n      return null\n  }\n  return (\n    <Popover\n      key={state}\n      content={<ThemedText.Caption>{content}</ThemedText.Caption>}\n      show={show}\n      placement=\"top\"\n      offset={16}\n      contained\n    >\n      <LargeIcon icon={icon} color={color} size={1.25} />\n    </Popover>\n  )\n})\n\nexport default function MaxSlippageSelect() {\n  const input = useRef<HTMLInputElement>(null)\n  const focus = useCallback(() => input.current?.focus(), [input])\n\n  const [autoSlippage, setAutoSlippage] = useAtom(autoSlippageAtom)\n  const [maxSlippage, setMaxSlippage] = useAtom(maxSlippageAtom)\n  const maxSlippageInput = useMemo(() => maxSlippage?.toString() || '', [maxSlippage])\n  const [warning, setWarning] = useState(WarningState.NONE)\n  const [showTooltip, setShowTooltip, tooltipProps] = useTooltip()\n\n  const processInput = useCallback(\n    (input: number | undefined) => {\n      const numerator = input && Math.floor(input * 100)\n      if (numerator) {\n        const percent = new Percent(numerator, 10_000)\n        if (percent.greaterThan(MAX_VALID_SLIPPAGE)) {\n          setWarning(WarningState.INVALID_SLIPPAGE)\n          setAutoSlippage(true)\n          setMaxSlippage(input)\n        } else if (percent.greaterThan(MIN_HIGH_SLIPPAGE)) {\n          setWarning(WarningState.HIGH_SLIPPAGE)\n          setAutoSlippage(false)\n          setMaxSlippage(input)\n        } else {\n          setWarning(WarningState.NONE)\n          setAutoSlippage(false)\n          setMaxSlippage(input)\n        }\n      } else {\n        setAutoSlippage(true)\n        setMaxSlippage(undefined)\n      }\n    },\n    [setAutoSlippage, setMaxSlippage]\n  )\n  const onInputSelect = useCallback(() => {\n    focus()\n    processInput(maxSlippage)\n  }, [focus, maxSlippage, processInput])\n\n  useEffect(() => processInput(maxSlippage), [maxSlippage, processInput]) // processes any warnings on mount\n  useEffect(() => setShowTooltip(true), [warning, setShowTooltip]) // enables the tooltip if a warning is set\n\n  return (\n    <Column gap={0.75}>\n      <Label name={<Trans>Max slippage</Trans>} tooltip={tooltip} />\n      <Row gap={0.5} grow=\"last\">\n        <Option wrapper={Button} selected={autoSlippage} onSelect={() => setAutoSlippage(true)}>\n          <ThemedText.ButtonMedium>\n            <Trans>Auto</Trans>\n          </ThemedText.ButtonMedium>\n        </Option>\n        <Option\n          wrapper={Custom}\n          selected={!autoSlippage}\n          onSelect={onInputSelect}\n          icon={<Warning state={warning} showTooltip={showTooltip} />}\n          {...tooltipProps}\n        >\n          <Row color={warning === WarningState.INVALID_SLIPPAGE ? 'error' : undefined}>\n            <DecimalInput\n              size={Math.max(maxSlippageInput.length, 3)}\n              value={maxSlippageInput}\n              onChange={(input) => processInput(+input)}\n              placeholder={placeholder}\n              ref={input}\n            />\n            %\n          </Row>\n        </Option>\n      </Row>\n    </Column>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useDefaultTransactionTtl, useTransactionTtl } from 'lib/hooks/useTransactionDeadline'\nimport styled, { ThemedText } from 'lib/theme'\nimport { useRef } from 'react'\n\nimport Column from '../../Column'\nimport { inputCss, IntegerInput } from '../../Input'\nimport Row from '../../Row'\nimport { Label } from './components'\n\nconst tooltip = <Trans>Your transaction will revert if it has been pending for longer than this period of time.</Trans>\n\nconst Input = styled(Row)`\n  ${inputCss}\n`\n\nexport default function TransactionTtlInput() {\n  const [ttl, setTtl] = useTransactionTtl()\n  const defaultTtl = useDefaultTransactionTtl()\n  const placeholder = defaultTtl.toString()\n  const input = useRef<HTMLInputElement>(null)\n  return (\n    <Column gap={0.75}>\n      <Label name={<Trans>Transaction deadline</Trans>} tooltip={tooltip} />\n      <ThemedText.Body1>\n        <Input justify=\"start\" onClick={() => input.current?.focus()}>\n          <IntegerInput\n            placeholder={placeholder}\n            value={ttl?.toString() ?? ''}\n            onChange={(value) => setTtl(value ? parseFloat(value) : 0)}\n            size={Math.max(ttl?.toString().length || 0, placeholder.length)}\n            ref={input}\n          />\n          <Trans>minutes</Trans>\n        </Input>\n      </ThemedText.Body1>\n    </Column>\n  )\n}\n"],"sourceRoot":""}