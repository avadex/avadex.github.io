{"version":3,"sources":["lib/hooks/swap/index.ts","lib/components/TokenSelect/index.tsx","lib/components/Row.tsx","lib/components/Button.tsx","lib/components/Column.tsx","lib/state/swap.ts","lib/state/atoms.ts","lib/components/Rule.tsx","lib/state/settings.ts","lib/components/Dialog.tsx","lib/components/TokenImg.tsx","lib/hooks/useScrollbar.ts","lib/hooks/useNativeEvent.ts","lib/hooks/useUnmount.ts","lib/components/Input.tsx","lib/components/Header.tsx","lib/hooks/swap/useSwapInfo.tsx","lib/hooks/routing/useClientSideSmartOrderRouterTrade.ts","lib/hooks/useAllowedSlippage.ts","lib/hooks/swap/useBestTrade.ts","lib/css/loading.ts","lib/components/TokenSelect/TokenBase.tsx","lib/components/TokenSelect/TokenButton.tsx","lib/components/TokenSelect/TokenOptions.tsx","lib/hooks/useCurrencyColor.ts","lib/components/Swap/TokenInput.tsx","lib/components/ExternalLink.tsx","lib/components/BrandedFooter.tsx","lib/components/Swap/Output.tsx"],"names":["amountAtom","pickAtom","swapAtom","useSwitchSwapCurrencies","update","useUpdateAtom","useCallback","swap","oldOutput","Field","OUTPUT","INPUT","independentField","useSwapCurrency","field","atom","useMemo","otherAtom","otherField","useAtom","currency","setCurrency","otherCurrency","useAtomValue","switchSwapCurrencies","setOrSwitchCurrency","useSwapAmount","amount","independentFieldAtom","value","undefined","updateSwap","updateAmount","useIsAmountPopulated","Boolean","SearchInput","styled","StringInput","inputCss","TokenSelectDialog","onSelect","useState","query","setQuery","queriedTokens","useQueryTokenList","tokens","filter","token","baseTokens","input","useRef","useEffect","current","focus","options","setOptions","title","gap","pad","grow","Body1","onChange","placeholder","onKeyDown","onBlur","blur","ref","length","justify","flex","map","onClick","currencyId","padded","TokenSelect","collapsed","disabled","open","setOpen","selectAndClose","color","onClose","Row","div","align","theme","children","Children","count","BaseButton","button","onInteractive","onHover","outline","secondary","transparentButton","defaultColor","TextButton","SecondaryButton","IconButton","Icon","icon","iconProps","props","Column","css","atomWithImmer","nativeOnChain","SupportedChainId","AVALANCHE","displayTxHashAtom","feeOptionsAtom","anAtom","key","setter","draft","get","set","withImmer","derived","setTogglable","Rule","hr","scrollingEdge","MAX_VALID_SLIPPAGE","Percent","MIN_HIGH_SLIPPAGE","initialSettings","autoSlippage","maxSlippage","transactionTtl","mockTogglable","clientSideRouter","settingsAtom","atomWithReset","autoSlippageAtom","maxSlippageAtom","transactionTtlAtom","mockTogglableAtom","clientSideRouterAtom","Context","createContext","element","active","setActive","Provider","context","inert","OnCloseContext","Header","ruled","useContext","X","Modal","borderRadius","Layer","DIALOG","Dialog","dialog","useUnmount","close","e","document","addEventListener","removeEventListener","createPortal","badSrcs","Set","className","srcs","useCurrencyLogoURIs","src","setSrc","find","has","onError","add","alt","name","symbol","module","Math","sqrt","size","overflowCss","scrollbarCss","interactive","useScrollbar","overflow","setOverflow","hasOverflow","useNativeEvent","scrollHeight","clientHeight","eventListener","UNMOUNTING","node","parent","parentElement","removeChild","child","classList","onanimationend","call","Input","forwardRef","target","inputMode","autoComplete","autoCorrect","type","minLength","spellCheck","isNumericallyEqual","a","b","split","aInteger","aDecimal","bInteger","bDecimal","JSBI","equal","BigInt","NumericInput","enforcer","pattern","state","setState","validateChange","event","nextInput","replace","maxLength","integerRegexp","integerEnforcer","nextUserInput","test","parseInt","isNaN","toString","IntegerInput","decimalRegexp","decimalEnforcer","DecimalInput","container","HeaderRow","largeIconCss","iconSize","Subhead1","BAD_RECIPIENT_ADDRESSES","swapInfoAtom","currencies","currencyBalances","currencyAmounts","trade","TradeState","INVALID","allowedSlippage","feeOptions","SwapInfoUpdater","setSwapInfo","swapInfo","account","useActiveWeb3React","inputCurrency","outputCurrency","to","relevantTokenBalances","useCurrencyBalances","isExactIn","parsedAmount","tryParseCurrencyAmount","useBestTrade","TradeType","EXACT_INPUT","EXACT_OUTPUT","inputAmount","outputAmount","useAllowedSlippage","inputError","formattedTo","isAddress","maximumAmountIn","balanceIn","amountIn","lessThan","useComputeSwapInfo","useSwapInfo","config","protocols","Protocol","V2","V3","useClientSideSmartOrderRouterTrade","tradeType","amountSpecified","chainId","library","currencyIn","currencyOut","queryArgs","useRoutingAPIArguments","tokenIn","tokenOut","useClientSideRouter","params","provider","loading","setLoading","quoteResult","error","setFetchedResult","getClientSideQuote","result","data","fetchQuote","route","computeRoutes","gasUseEstimateUSD","useStablecoinAmountFromFiatValue","LOADING","otherAmount","CurrencyAmount","fromRawAmount","quote","NO_ROUTE_FOUND","transformRoutesToTrade","VALID","console","debug","toPercent","numerator","floor","useMaxSlippage","useAutoSlippageTolerance","useDebounce","debouncedAmount","debouncedOtherCurrency","clientSORTrade","getTradeInputs","amountFromLatestTrade","currencyFromTrade","otherCurrencyFromTrade","debouncing","syncing","amounts","indepdenentCurrencies","dependentCurrencies","amountsMatch","equalTo","currenciesMatch","equals","isTradeDebouncing","useFallback","fallbackTrade","useClientSideV3Trade","SYNCING","loadingOpacityCss","$loading","TokenButton","Button","TokenBase","ButtonMedium","StyledTokenButton","empty","TokenButtonRow","buttonBackgroundColor","contentColor","ButtonLarge","strokeWidth","TokenList","FixedSizeList","hover","scrollbar","OnHover","TokenOption","index","style","i18n","useLingui","onEvent","balance","useCurrencyBalance","onFocus","onMouseMove","Caption","greaterThan","formatCurrencyAmount","locale","itemKey","ItemRow","memo","areEqual","TokenOptions","focused","setFocused","setHover","list","scrollTo","scrollToItem","preventDefault","useImperativeHandle","setElement","invariant","marginTop","scrollTop","disableWidth","height","width","itemCount","itemData","itemSize","outerRef","colors","Map","getColorFromLogoURIs","logoURIs","cb","logoURI","uri","startsWith","getColorFromUriPath","Vibrant","from","getPalette","palette","hex","usePrefetchCurrencyColor","useTheme","tokenColorExtraction","useCurrencyColor","setColor","useLayoutEffect","stale","TokenInputRow","ValueInput","primary","delayedFadeIn","keyframes","MaxButton","TokenInput","onMax","onChangeInput","onChangeCurrency","max","showMax","setShowMax","relatedTarget","H2","ExternalLink","href","rel","rest","UniswapA","Logo","brand","BrandedFooter","colorAtom","LoadingSpan","span","OutputColumn","hasColor","Output","tradeState","inputCurrencyAmount","outputCurrencyAmount","swapOutputAmount","updateSwapOutputAmount","swapOutputCurrency","updateSwapOutputCurrency","isTradeLoading","isLoading","overrideColor","dynamicColor","inputUSDC","useUSDCValue","outputUSDC","priceImpact","computedChange","computeFiatValuePriceImpact","parseFloat","multiply","toSignificant","usdc","toFixed","Subhead2","Body2","userSelect"],"mappings":"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","file":"static/js/17.2c9f5774.chunk.js","sourcesContent":["import { Currency } from '@uniswap/sdk-core'\nimport { useAtom } from 'jotai'\nimport { useAtomValue, useUpdateAtom } from 'jotai/utils'\nimport { pickAtom } from 'lib/state/atoms'\nimport { Field, independentFieldAtom, swapAtom } from 'lib/state/swap'\nimport { useCallback, useMemo } from 'react'\nexport { default as useSwapInfo } from './useSwapInfo'\n\nexport const amountAtom = pickAtom(swapAtom, 'amount')\n\nfunction otherField(field: Field) {\n  switch (field) {\n    case Field.INPUT:\n      return Field.OUTPUT\n      break\n    case Field.OUTPUT:\n      return Field.INPUT\n      break\n  }\n}\n\nexport function useSwitchSwapCurrencies() {\n  const update = useUpdateAtom(swapAtom)\n  return useCallback(() => {\n    update((swap) => {\n      const oldOutput = swap[Field.OUTPUT]\n      swap[Field.OUTPUT] = swap[Field.INPUT]\n      swap[Field.INPUT] = oldOutput\n      switch (swap.independentField) {\n        case Field.INPUT:\n          swap.independentField = Field.OUTPUT\n          break\n        case Field.OUTPUT:\n          swap.independentField = Field.INPUT\n          break\n      }\n    })\n  }, [update])\n}\n\nexport function useSwapCurrency(field: Field): [Currency | undefined, (currency?: Currency) => void] {\n  const atom = useMemo(() => pickAtom(swapAtom, field), [field])\n  const otherAtom = useMemo(() => pickAtom(swapAtom, otherField(field)), [field])\n  const [currency, setCurrency] = useAtom(atom)\n  const otherCurrency = useAtomValue(otherAtom)\n  const switchSwapCurrencies = useSwitchSwapCurrencies()\n  const setOrSwitchCurrency = useCallback(\n    (currency?: Currency) => {\n      if (currency === otherCurrency) {\n        switchSwapCurrencies()\n      } else {\n        setCurrency(currency)\n      }\n    },\n    [otherCurrency, setCurrency, switchSwapCurrencies]\n  )\n  return [currency, setOrSwitchCurrency]\n}\n\nexport function useSwapAmount(field: Field): [string | undefined, (amount: string) => void] {\n  const amount = useAtomValue(amountAtom)\n  const independentField = useAtomValue(independentFieldAtom)\n  const value = useMemo(() => (independentField === field ? amount : undefined), [amount, independentField, field])\n  const updateSwap = useUpdateAtom(swapAtom)\n  const updateAmount = useCallback(\n    (amount: string) =>\n      updateSwap((swap) => {\n        swap.independentField = field\n        swap.amount = amount\n      }),\n    [field, updateSwap]\n  )\n  return [value, updateAmount]\n}\n\n// check if any amount has been entered by user\nexport function useIsAmountPopulated() {\n  return Boolean(useAtomValue(amountAtom))\n}\n","import { t, Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { useQueryTokenList } from 'lib/hooks/useTokenList'\nimport styled, { ThemedText } from 'lib/theme'\nimport { ElementRef, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { currencyId } from 'utils/currencyId'\n\nimport Column from '../Column'\nimport Dialog, { Header } from '../Dialog'\nimport { inputCss, StringInput } from '../Input'\nimport Row from '../Row'\nimport Rule from '../Rule'\nimport TokenBase from './TokenBase'\nimport TokenButton from './TokenButton'\nimport TokenOptions from './TokenOptions'\n\nconst SearchInput = styled(StringInput)`\n  ${inputCss}\n`\n\ninterface TokenSelectDialogProps {\n  value?: Currency\n  onSelect: (token: Currency) => void\n}\n\nexport function TokenSelectDialog({ value, onSelect }: TokenSelectDialogProps) {\n  const [query, setQuery] = useState('')\n  const queriedTokens = useQueryTokenList(query)\n  const tokens = useMemo(() => queriedTokens.filter((token) => token !== value), [queriedTokens, value])\n\n  const baseTokens: Currency[] = [] // TODO(zzmp): Add base tokens to token list functionality\n\n  const input = useRef<HTMLInputElement>(null)\n  useEffect(() => input.current?.focus(), [input])\n\n  const [options, setOptions] = useState<ElementRef<typeof TokenOptions> | null>(null)\n\n  return (\n    <>\n      <Header title={<Trans>Selec token</Trans>} />\n      <Column gap={0.75}>\n        <Row pad={0.75} grow>\n          <ThemedText.Body1>\n            <SearchInput\n              value={query}\n              onChange={setQuery}\n              placeholder={t`Search by token name or address`}\n              onKeyDown={options?.onKeyDown}\n              onBlur={options?.blur}\n              ref={input}\n            />\n          </ThemedText.Body1>\n        </Row>\n        {Boolean(baseTokens.length) && (\n          <Row pad={0.75} gap={0.25} justify=\"flex-start\" flex>\n            {baseTokens.map((token) => (\n              <TokenBase value={token} onClick={onSelect} key={currencyId(token)} />\n            ))}\n          </Row>\n        )}\n        <Rule padded />\n      </Column>\n      <TokenOptions tokens={tokens} onSelect={onSelect} ref={setOptions} />\n    </>\n  )\n}\n\ninterface TokenSelectProps {\n  value?: Currency\n  collapsed: boolean\n  disabled?: boolean\n  onSelect: (value: Currency) => void\n}\n\nexport default function TokenSelect({ value, collapsed, disabled, onSelect }: TokenSelectProps) {\n  const [open, setOpen] = useState(false)\n  const selectAndClose = useCallback(\n    (value: Currency) => {\n      onSelect(value)\n      setOpen(false)\n    },\n    [onSelect, setOpen]\n  )\n  return (\n    <>\n      <TokenButton value={value} collapsed={collapsed} disabled={disabled} onClick={() => setOpen(true)} />\n      {open && (\n        <Dialog color=\"module\" onClose={() => setOpen(false)}>\n          <TokenSelectDialog value={value} onSelect={selectAndClose} />\n        </Dialog>\n      )}\n    </>\n  )\n}\n","import styled, { Color, Theme } from 'lib/theme'\nimport { Children, ReactNode } from 'react'\n\nconst Row = styled.div<{\n  color?: Color\n  align?: string\n  justify?: string\n  pad?: number\n  gap?: number\n  flex?: true\n  grow?: true | 'first' | 'last'\n  children?: ReactNode\n  theme: Theme\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-flow: wrap;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: column;\n  grid-template-columns: ${({ grow, children }) => {\n    if (grow === 'first') return '1fr'\n    if (grow === 'last') return `repeat(${Children.count(children) - 1}, auto) 1fr`\n    if (grow) return `repeat(${Children.count(children)}, 1fr)`\n    return undefined\n  }};\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ pad }) => pad && `0 ${pad}em`};\n`\n\nexport default Row\n","import { Icon } from 'lib/icons'\nimport styled, { Color } from 'lib/theme'\nimport { ComponentProps } from 'react'\n\nexport const BaseButton = styled.button`\n  background-color: transparent;\n  border: none;\n  border-radius: 0.5em;\n  color: currentColor;\n  cursor: pointer;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n\n  :disabled {\n    cursor: initial;\n    filter: saturate(0) opacity(0.4);\n  }\n`\n\nexport default styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = 'interactive', theme }) => color === 'interactive' && theme.onInteractive};\n\n  :enabled {\n    background-color: ${({ color = 'interactive', theme }) => theme[color]};\n  }\n\n  :enabled:hover {\n    background-color: ${({ color = 'interactive', theme }) => theme.onHover(theme[color])};\n  }\n\n  :disabled {\n    border: 1px solid ${({ theme }) => theme.outline};\n    color: ${({ theme }) => theme.secondary};\n    cursor: initial;\n  }\n`\n\nconst transparentButton = (defaultColor: Color) => styled(BaseButton)<{ color?: Color }>`\n  color: ${({ color = defaultColor, theme }) => theme[color]};\n\n  :enabled:hover {\n    color: ${({ color = defaultColor, theme }) => theme.onHover(theme[color])};\n  }\n`\n\nexport const TextButton = transparentButton('accent')\n\nconst SecondaryButton = transparentButton('secondary')\n\ninterface IconButtonProps {\n  icon: Icon\n  iconProps?: ComponentProps<Icon>\n}\n\nexport function IconButton({ icon: Icon, iconProps, ...props }: IconButtonProps & ComponentProps<typeof BaseButton>) {\n  return (\n    <SecondaryButton {...props}>\n      <Icon {...iconProps} />\n    </SecondaryButton>\n  )\n}\n","import styled, { Color, css, Theme } from 'lib/theme'\n\nconst Column = styled.div<{\n  align?: string\n  color?: Color\n  justify?: string\n  gap?: number\n  padded?: true\n  flex?: true\n  grow?: true\n  theme: Theme\n  css?: ReturnType<typeof css>\n}>`\n  align-items: ${({ align }) => align ?? 'center'};\n  color: ${({ color, theme }) => color && theme[color]};\n  display: ${({ flex }) => (flex ? 'flex' : 'grid')};\n  flex-direction: column;\n  flex-grow: ${({ grow }) => grow && 1};\n  gap: ${({ gap }) => gap && `${gap}em`};\n  grid-auto-flow: row;\n  grid-template-columns: 1fr;\n  justify-content: ${({ justify }) => justify ?? 'space-between'};\n  padding: ${({ padded }) => padded && '0.75em'};\n\n  ${({ css }) => css}\n`\n\nexport default Column\n","import { Currency } from '@uniswap/sdk-core'\nimport { FeeOptions } from '@uniswap/v3-sdk'\nimport { SupportedChainId } from 'constants/chains'\nimport { nativeOnChain } from 'constants/tokens'\nimport { atom } from 'jotai'\nimport { atomWithImmer } from 'jotai/immer'\nimport { pickAtom } from 'lib/state/atoms'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport interface Swap {\n  independentField: Field\n  amount: string\n  [Field.INPUT]?: Currency\n  [Field.OUTPUT]?: Currency\n}\n\nexport const swapAtom = atomWithImmer<Swap>({\n  independentField: Field.INPUT,\n  amount: '',\n  [Field.INPUT]: nativeOnChain(SupportedChainId.AVALANCHE),\n})\n\nexport const independentFieldAtom = pickAtom(swapAtom, 'independentField')\n\n// If set to a transaction hash, that transaction will display in a status dialog.\nexport const displayTxHashAtom = atom<string | undefined>(undefined)\n\nexport const feeOptionsAtom = atom<FeeOptions | undefined>(undefined)\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { Draft } from 'immer'\nimport { atom, WritableAtom } from 'jotai'\nimport { withImmer } from 'jotai/immer'\n\n/**\n * Creates a derived atom whose value is the picked object property.\n * By default, the setter acts as a primitive atom's, changing the original atom.\n * A custom setter may also be passed, which uses an Immer Draft so that it may be mutated directly.\n */\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key]\n): WritableAtom<Value[Key], Update>\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update extends Value[Key]>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter?: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key]\n): WritableAtom<Value[Key], Update>\nexport function pickAtom<Value, Key extends keyof Value & keyof Draft<Value>, Update extends Value[Key]>(\n  anAtom: WritableAtom<Value, Value>,\n  key: Key,\n  setter: (draft: Draft<Value>[Key], update: Update) => Draft<Value>[Key] = (draft, update) =>\n    update as Draft<Value>[Key]\n): WritableAtom<Value[Key], Update> {\n  return atom(\n    (get) => get(anAtom)[key],\n    (get, set, update: Update) =>\n      set(withImmer(anAtom), (value) => {\n        const derived = setter(value[key], update)\n        value[key] = derived\n      })\n  )\n}\n\n/** Sets a togglable atom to invert its state at the next render. */\nexport function setTogglable(draft: boolean) {\n  return !draft\n}\n","import styled from 'lib/theme'\n\nconst Rule = styled.hr<{ padded?: true; scrollingEdge?: 'top' | 'bottom' }>`\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.outline};\n  margin: 0 ${({ padded }) => (padded ? '0.75em' : 0)};\n  margin-bottom: ${({ scrollingEdge }) => (scrollingEdge === 'bottom' ? -1 : 0)}px;\n  margin-top: ${({ scrollingEdge }) => (scrollingEdge !== 'bottom' ? -1 : 0)}px;\n`\n\nexport default Rule\n","import { Percent } from '@uniswap/sdk-core'\nimport { atomWithReset } from 'jotai/utils'\n\nimport { pickAtom, setTogglable } from './atoms'\n\nexport const MAX_VALID_SLIPPAGE = new Percent(1, 2)\nexport const MIN_HIGH_SLIPPAGE = new Percent(1, 100)\n\ninterface Settings {\n  autoSlippage: boolean // if true, slippage will use the default calculation\n  maxSlippage: number | undefined // expressed as a percent\n  transactionTtl: number | undefined\n  mockTogglable: boolean\n  clientSideRouter: boolean // whether to use the client-side router or query the remote API\n}\n\nconst initialSettings: Settings = {\n  autoSlippage: true,\n  maxSlippage: undefined,\n  transactionTtl: undefined,\n  mockTogglable: true,\n  clientSideRouter: true,\n}\n\nexport const settingsAtom = atomWithReset(initialSettings)\nexport const autoSlippageAtom = pickAtom(settingsAtom, 'autoSlippage')\nexport const maxSlippageAtom = pickAtom(settingsAtom, 'maxSlippage')\nexport const transactionTtlAtom = pickAtom(settingsAtom, 'transactionTtl')\nexport const mockTogglableAtom = pickAtom(settingsAtom, 'mockTogglable', setTogglable)\nexport const clientSideRouterAtom = pickAtom(settingsAtom, 'clientSideRouter')\n","import 'wicg-inert'\n\nimport useUnmount from 'lib/hooks/useUnmount'\nimport { X } from 'lib/icons'\nimport styled, { Color, Layer, ThemeProvider } from 'lib/theme'\nimport { createContext, ReactElement, ReactNode, useContext, useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { IconButton } from './Button'\nimport Column from './Column'\nimport { default as BaseHeader } from './Header'\nimport Rule from './Rule'\n\n// Include inert from wicg-inert\ndeclare global {\n  interface HTMLElement {\n    inert?: boolean\n  }\n}\n\nconst Context = createContext({\n  element: null as HTMLElement | null,\n  active: false,\n  setActive: (active: boolean) => undefined as void,\n})\n\ninterface ProviderProps {\n  value: HTMLElement | null\n  children: ReactNode\n}\n\nexport function Provider({ value, children }: ProviderProps) {\n  // If a Dialog is active, mark the main content inert\n  const ref = useRef<HTMLDivElement>(null)\n  const [active, setActive] = useState(false)\n  const context = { element: value, active, setActive }\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.inert = active\n    }\n  }, [active])\n  return (\n    <div ref={ref}>\n      <Context.Provider value={context}>{children}</Context.Provider>\n    </div>\n  )\n}\n\nconst OnCloseContext = createContext<() => void>(() => void 0)\n\ninterface HeaderProps {\n  title?: ReactElement\n  ruled?: boolean\n  children?: ReactNode\n}\n\nexport function Header({ title, children, ruled }: HeaderProps) {\n  return (\n    <>\n      <Column>\n        <BaseHeader title={title}>\n          {children}\n          <IconButton color=\"primary\" onClick={useContext(OnCloseContext)} icon={X} />\n        </BaseHeader>\n        {ruled && <Rule padded />}\n      </Column>\n    </>\n  )\n}\n\nexport const Modal = styled.div<{ color: Color }>`\n  background-color: ${({ color, theme }) => theme[color]};\n  border-radius: ${({ theme }) => theme.borderRadius * 0.75}em;\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 0.5em);\n  left: 0;\n  margin: 0.25em;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  width: calc(100% - 0.5em);\n  z-index: ${Layer.DIALOG};\n`\n\ninterface DialogProps {\n  color: Color\n  children: ReactNode\n  onClose?: () => void\n}\n\nexport default function Dialog({ color, children, onClose = () => void 0 }: DialogProps) {\n  const context = useContext(Context)\n  useEffect(() => {\n    context.setActive(true)\n    return () => context.setActive(false)\n  }, [context])\n  const dialog = useRef<HTMLDivElement>(null)\n  useUnmount(dialog)\n  useEffect(() => {\n    const close = (e: KeyboardEvent) => e.key === 'Escape' && onClose?.()\n    document.addEventListener('keydown', close, true)\n    return () => document.removeEventListener('keydown', close, true)\n  }, [onClose])\n  return (\n    context.element &&\n    createPortal(\n      <ThemeProvider>\n        <Modal color={color} ref={dialog}>\n          <OnCloseContext.Provider value={onClose}>{children}</OnCloseContext.Provider>\n        </Modal>\n      </ThemeProvider>,\n      context.element\n    )\n  )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport useCurrencyLogoURIs from 'lib/hooks/useCurrencyLogoURIs'\nimport { Slash } from 'lib/icons'\nimport styled from 'lib/theme'\nimport { useCallback, useEffect, useState } from 'react'\n\nconst badSrcs = new Set<string>()\n\ninterface TokenImgProps {\n  className?: string\n  token: Currency\n}\n\nfunction TokenImg({ className, token }: TokenImgProps) {\n  const srcs = useCurrencyLogoURIs(token)\n  const [src, setSrc] = useState<string | undefined>()\n  useEffect(() => {\n    setSrc(srcs.find((src) => !badSrcs.has(src)))\n  }, [srcs])\n  const onError = useCallback(() => {\n    if (src) badSrcs.add(src)\n    setSrc(srcs.find((src) => !badSrcs.has(src)))\n  }, [src, srcs])\n\n  if (src) {\n    return <img className={className} src={src} alt={token.name || token.symbol} onError={onError} />\n  }\n  return <Slash className={className} color=\"secondary\" />\n}\n\nexport default styled(TokenImg)<{ size?: number }>`\n  // radial-gradient calculates distance from the corner, not the edge: divide by sqrt(2)\n  background: radial-gradient(\n    ${({ theme }) => theme.module} calc(100% / ${Math.sqrt(2)} - 1.5px),\n    ${({ theme }) => theme.outline} calc(100% / ${Math.sqrt(2)} - 1.5px)\n  );\n  border-radius: 100%;\n  height: ${({ size }) => size || 1}em;\n  width: ${({ size }) => size || 1}em;\n`\n","import { css } from 'lib/theme'\nimport { useEffect, useMemo, useState } from 'react'\n\nimport useNativeEvent from './useNativeEvent'\n\nconst overflowCss = css`\n  overflow-y: scroll;\n`\n\n/** Customizes the scrollbar for vertical overflow. */\nconst scrollbarCss = (padded: boolean) => css`\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 1.25em;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: radial-gradient(\n        closest-corner at 0.25em 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        transparent 0.25em\n      ),\n      linear-gradient(\n        to bottom,\n        #ffffff00 0.25em,\n        ${({ theme }) => theme.interactive} 0.25em,\n        ${({ theme }) => theme.interactive} calc(100% - 0.25em),\n        #ffffff00 calc(100% - 0.25em)\n      ),\n      radial-gradient(\n        closest-corner at 0.25em calc(100% - 0.25em),\n        ${({ theme }) => theme.interactive} 0.25em,\n        #ffffff00 0.25em\n      );\n    background-clip: padding-box;\n    border: none;\n    ${padded ? 'border-right' : 'border-left'}: 0.75em solid transparent;\n  }\n\n  @supports not selector(::-webkit-scrollbar-thumb) {\n    scrollbar-color: ${({ theme }) => theme.interactive} transparent;\n  }\n`\n\ninterface ScrollbarOptions {\n  padded?: boolean\n}\n\nexport default function useScrollbar(element: HTMLElement | null, { padded = false }: ScrollbarOptions = {}) {\n  const [overflow, setOverflow] = useState(true)\n  useEffect(() => {\n    setOverflow(hasOverflow(element))\n  }, [element])\n  useNativeEvent(element, 'transitionend', () => setOverflow(hasOverflow(element)))\n  return useMemo(() => (overflow ? scrollbarCss(padded) : overflowCss), [overflow, padded])\n\n  function hasOverflow(element: HTMLElement | null) {\n    if (!element) {\n      return true\n    }\n    return element.scrollHeight > element.clientHeight\n  }\n}\n","import { useEffect } from 'react'\n\nexport default function useNativeEvent(\n  element: HTMLElement | null,\n  ...eventListener: Parameters<HTMLElement['addEventListener']>\n) {\n  useEffect(() => {\n    element?.addEventListener(...eventListener)\n    return () => element?.removeEventListener(...eventListener)\n  }, [element, eventListener])\n}\n","import { RefObject, useEffect } from 'react'\n\nexport const UNMOUNTING = 'unmounting'\n\n/**\n * Delays a node's unmounting so that an animation may be applied.\n * An animation *must* be applied, or the node will not unmount.\n */\nexport default function useUnmount(node: RefObject<HTMLElement>) {\n  useEffect(() => {\n    const current = node.current\n    const parent = current?.parentElement\n    const removeChild = parent?.removeChild\n    if (parent && removeChild) {\n      parent.removeChild = function <T extends Node>(child: T) {\n        if ((child as Node) === current) {\n          current.classList.add(UNMOUNTING)\n          current.onanimationend = () => {\n            removeChild.call(parent, child)\n          }\n          return child\n        } else {\n          return removeChild.call(parent, child) as T\n        }\n      }\n    }\n    return () => {\n      if (parent && removeChild) {\n        parent.removeChild = removeChild\n      }\n    }\n  }, [node])\n}\n","import JSBI from 'jsbi'\nimport styled, { css } from 'lib/theme'\nimport { forwardRef, HTMLProps, useCallback, useEffect, useState } from 'react'\n\nconst Input = styled.input`\n  -webkit-appearance: textfield;\n  background-color: transparent;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: inherit;\n  margin: 0;\n  outline: none;\n  overflow: hidden;\n  padding: 0;\n  text-align: left;\n  text-overflow: ellipsis;\n  width: 100%;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.secondary};\n  }\n`\n\nexport default Input\n\ninterface StringInputProps extends Omit<HTMLProps<HTMLInputElement>, 'onChange' | 'as' | 'value'> {\n  value: string\n  onChange: (input: string) => void\n}\n\nexport const StringInput = forwardRef<HTMLInputElement, StringInputProps>(function StringInput(\n  { value, onChange, ...props }: StringInputProps,\n  ref\n) {\n  return (\n    <Input\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      // universal input options\n      inputMode=\"text\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      placeholder={props.placeholder || '-'}\n      minLength={1}\n      spellCheck=\"false\"\n      ref={ref as any}\n      {...props}\n    />\n  )\n})\n\ninterface NumericInputProps extends Omit<HTMLProps<HTMLInputElement>, 'onChange' | 'as' | 'value'> {\n  value: string\n  onChange: (input: string) => void\n}\n\ninterface EnforcedNumericInputProps extends NumericInputProps {\n  // Validates nextUserInput; returns stringified value, or null if invalid\n  enforcer: (nextUserInput: string) => string | null\n}\n\nfunction isNumericallyEqual(a: string, b: string) {\n  const [aInteger, aDecimal] = a.split('.')\n  const [bInteger, bDecimal] = b.split('.')\n  return (\n    JSBI.equal(JSBI.BigInt(aInteger ?? 0), JSBI.BigInt(bInteger ?? 0)) &&\n    JSBI.equal(JSBI.BigInt(aDecimal ?? 0), JSBI.BigInt(bDecimal ?? 0))\n  )\n}\n\nconst NumericInput = forwardRef<HTMLInputElement, EnforcedNumericInputProps>(function NumericInput(\n  { value, onChange, enforcer, pattern, ...props }: EnforcedNumericInputProps,\n  ref\n) {\n  const [state, setState] = useState(value ?? '')\n  useEffect(() => {\n    if (!isNumericallyEqual(state, value)) {\n      setState(value ?? '')\n    }\n  }, [value, state, setState])\n\n  const validateChange = useCallback(\n    (event) => {\n      const nextInput = enforcer(event.target.value.replace(/,/g, '.'))\n      if (nextInput !== null) {\n        setState(nextInput ?? '')\n        if (!isNumericallyEqual(nextInput, value)) {\n          onChange(nextInput)\n        }\n      }\n    },\n    [value, onChange, enforcer]\n  )\n\n  return (\n    <Input\n      value={state}\n      onChange={validateChange}\n      // universal input options\n      inputMode=\"decimal\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern={pattern}\n      placeholder={props.placeholder || '0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n      ref={ref as any}\n      {...props}\n    />\n  )\n})\n\nconst integerRegexp = /^\\d*$/\nconst integerEnforcer = (nextUserInput: string) => {\n  if (nextUserInput === '' || integerRegexp.test(nextUserInput)) {\n    const nextInput = parseInt(nextUserInput)\n    return isNaN(nextInput) ? '' : nextInput.toString()\n  }\n  return null\n}\nexport const IntegerInput = forwardRef(function IntegerInput(props: NumericInputProps, ref) {\n  return <NumericInput pattern=\"^[0-9]*$\" enforcer={integerEnforcer} ref={ref as any} {...props} />\n})\n\nconst decimalRegexp = /^\\d*(?:[.])?\\d*$/\nconst decimalEnforcer = (nextUserInput: string) => {\n  if (nextUserInput === '') {\n    return ''\n  } else if (nextUserInput === '.') {\n    return '0.'\n  } else if (decimalRegexp.test(nextUserInput)) {\n    return nextUserInput\n  }\n  return null\n}\nexport const DecimalInput = forwardRef(function DecimalInput(props: NumericInputProps, ref) {\n  return <NumericInput pattern=\"^[0-9]*[.,]?[0-9]*$\" enforcer={decimalEnforcer} ref={ref as any} {...props} />\n})\n\nexport const inputCss = css`\n  background-color: ${({ theme }) => theme.container};\n  border: 1px solid ${({ theme }) => theme.container};\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  cursor: text;\n  padding: calc(0.5em - 1px);\n\n  :hover:not(:focus-within) {\n    background-color: ${({ theme }) => theme.onHover(theme.container)};\n    border-color: ${({ theme }) => theme.onHover(theme.container)};\n  }\n\n  :focus-within {\n    border-color: ${({ theme }) => theme.active};\n  }\n`\n","import { largeIconCss } from 'lib/icons'\nimport styled, { ThemedText } from 'lib/theme'\nimport { ReactElement, ReactNode } from 'react'\n\nimport Row from './Row'\n\nconst HeaderRow = styled(Row)`\n  height: 1.75em;\n  margin: 0 0.75em 0.75em;\n  padding-top: 0.5em;\n  ${largeIconCss}\n`\n\nexport interface HeaderProps {\n  title?: ReactElement\n  children: ReactNode\n}\n\nexport default function Header({ title, children }: HeaderProps) {\n  return (\n    <HeaderRow iconSize={1.2}>\n      <Row gap={0.5}>{title && <ThemedText.Subhead1>{title}</ThemedText.Subhead1>}</Row>\n      <Row gap={1}>{children}</Row>\n    </HeaderRow>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent, TradeType } from '@uniswap/sdk-core'\nimport { FeeOptions } from '@uniswap/v3-sdk'\nimport { atom } from 'jotai'\nimport { useAtomValue, useUpdateAtom } from 'jotai/utils'\nimport { useCurrencyBalances } from 'lib/hooks/useCurrencyBalance'\nimport { feeOptionsAtom, Field, swapAtom } from 'lib/state/swap'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useEffect, useMemo } from 'react'\nimport { InterfaceTrade, TradeState } from 'state/routing/types'\n\nimport { isAddress } from '../../../utils'\nimport useActiveWeb3React from '../useActiveWeb3React'\nimport useAllowedSlippage from '../useAllowedSlippage'\nimport { useBestTrade } from './useBestTrade'\n\ninterface SwapInfo {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  currencyAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  trade: {\n    trade?: InterfaceTrade<Currency, Currency, TradeType>\n    state: TradeState\n  }\n  allowedSlippage: Percent\n  feeOptions: FeeOptions | undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: { [address: string]: true } = {\n  '0x9Ad6C38BE94206cA50bb0d90783181662f0Cfa10': true, // v2 factory\n  '0xE54Ca86531e17Ef3616d22Ca28b0D458b6C89106': true, // v2 router 01\n  '0x60aE616a2155Ee3d9A68541Ba4544862310933d4': true, // v2 router 02\n}\n\n// from the current swap inputs, compute the best trade and return it.\nfunction useComputeSwapInfo(): SwapInfo {\n  const { account } = useActiveWeb3React()\n\n  const {\n    independentField,\n    amount,\n    [Field.INPUT]: inputCurrency,\n    [Field.OUTPUT]: outputCurrency,\n  } = useAtomValue(swapAtom)\n\n  const feeOptions = useAtomValue(feeOptionsAtom)\n\n  const to = account\n\n  const relevantTokenBalances = useCurrencyBalances(\n    account,\n    useMemo(() => [inputCurrency ?? undefined, outputCurrency ?? undefined], [inputCurrency, outputCurrency])\n  )\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = useMemo(\n    () => tryParseCurrencyAmount(amount, (isExactIn ? inputCurrency : outputCurrency) ?? undefined),\n    [inputCurrency, isExactIn, outputCurrency, amount]\n  )\n\n  //@TODO(ianlapham): this would eventually be replaced with routing api logic.\n  const trade = useBestTrade(\n    isExactIn ? TradeType.EXACT_INPUT : TradeType.EXACT_OUTPUT,\n    parsedAmount,\n    (isExactIn ? outputCurrency : inputCurrency) ?? undefined\n  )\n\n  const currencies = useMemo(\n    () => ({\n      [Field.INPUT]: inputCurrency ?? undefined,\n      [Field.OUTPUT]: outputCurrency ?? undefined,\n    }),\n    [inputCurrency, outputCurrency]\n  )\n\n  const currencyBalances = useMemo(\n    () => ({\n      [Field.INPUT]: relevantTokenBalances[0],\n      [Field.OUTPUT]: relevantTokenBalances[1],\n    }),\n    [relevantTokenBalances]\n  )\n\n  const currencyAmounts = useMemo(\n    () => ({\n      [Field.INPUT]: trade.trade?.inputAmount,\n      [Field.OUTPUT]: trade.trade?.outputAmount,\n    }),\n    [trade.trade?.inputAmount, trade.trade?.outputAmount]\n  )\n\n  const allowedSlippage = useAllowedSlippage(trade.trade)\n\n  const inputError = useMemo(() => {\n    let inputError: ReactNode | undefined\n\n    if (!account) {\n      inputError = <Trans>Connect Wallet</Trans>\n    }\n\n    if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n      inputError = inputError ?? <Trans>Select token</Trans>\n    }\n\n    if (!parsedAmount) {\n      inputError = inputError ?? <Trans>Enter an amount</Trans>\n    }\n\n    const formattedTo = isAddress(to)\n    if (!to || !formattedTo) {\n      inputError = inputError ?? <Trans>Enter a recipient</Trans>\n    } else {\n      if (BAD_RECIPIENT_ADDRESSES[formattedTo]) {\n        inputError = inputError ?? <Trans>Invalid recipient</Trans>\n      }\n    }\n\n    // compare input balance to max input based on version\n    const [balanceIn, amountIn] = [currencyBalances[Field.INPUT], trade.trade?.maximumAmountIn(allowedSlippage)]\n\n    if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n      inputError = <Trans>Insufficient {amountIn.currency.symbol} balance</Trans>\n    }\n\n    return inputError\n  }, [account, allowedSlippage, currencies, currencyBalances, parsedAmount, to, trade.trade])\n\n  return useMemo(\n    () => ({\n      currencies,\n      currencyBalances,\n      currencyAmounts,\n      inputError,\n      trade,\n      allowedSlippage,\n      feeOptions,\n    }),\n    [currencies, currencyBalances, currencyAmounts, inputError, trade, allowedSlippage, feeOptions]\n  )\n}\n\nconst swapInfoAtom = atom<SwapInfo>({\n  currencies: {},\n  currencyBalances: {},\n  currencyAmounts: {},\n  trade: { state: TradeState.INVALID },\n  allowedSlippage: new Percent(0),\n  feeOptions: undefined,\n})\n\nexport function SwapInfoUpdater() {\n  const setSwapInfo = useUpdateAtom(swapInfoAtom)\n  const swapInfo = useComputeSwapInfo()\n  useEffect(() => {\n    setSwapInfo(swapInfo)\n  }, [swapInfo, setSwapInfo])\n  return null\n}\n\n/** Requires that SwapInfoUpdater be installed in the DOM tree. **/\nexport default function useSwapInfo(): SwapInfo {\n  return useAtomValue(swapInfoAtom)\n}\n","import { Protocol } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { useStablecoinAmountFromFiatValue } from 'hooks/useUSDCPrice'\nimport { useEffect, useMemo, useState } from 'react'\nimport { GetQuoteResult, InterfaceTrade, TradeState } from 'state/routing/types'\nimport { computeRoutes, transformRoutesToTrade } from 'state/routing/utils'\n\nimport useActiveWeb3React from '../useActiveWeb3React'\nimport { getClientSideQuote } from './clientSideSmartOrderRouter'\nimport { useRoutingAPIArguments } from './useRoutingAPIArguments'\n\nconst protocols: Protocol[] = [Protocol.V2, Protocol.V3]\nconst config = { protocols }\n\nexport default function useClientSideSmartOrderRouterTrade<TTradeType extends TradeType>(\n  tradeType: TTradeType,\n  amountSpecified?: CurrencyAmount<Currency>,\n  otherCurrency?: Currency\n): {\n  state: TradeState\n  trade: InterfaceTrade<Currency, Currency, TTradeType> | undefined\n} {\n  const chainId = amountSpecified?.currency.chainId\n  const { library } = useActiveWeb3React()\n\n  const [currencyIn, currencyOut]: [Currency | undefined, Currency | undefined] = useMemo(\n    () =>\n      tradeType === TradeType.EXACT_INPUT\n        ? [amountSpecified?.currency, otherCurrency]\n        : [otherCurrency, amountSpecified?.currency],\n    [amountSpecified, otherCurrency, tradeType]\n  )\n\n  const queryArgs = useRoutingAPIArguments({\n    tokenIn: currencyIn,\n    tokenOut: currencyOut,\n    amount: amountSpecified,\n    tradeType,\n    useClientSideRouter: true,\n  })\n  const params = useMemo(() => chainId && library && { chainId, provider: library }, [chainId, library])\n\n  const [loading, setLoading] = useState(false)\n  const [{ quoteResult, error }, setFetchedResult] = useState<{\n    quoteResult: GetQuoteResult | undefined\n    error: unknown\n  }>({\n    quoteResult: undefined,\n    error: undefined,\n  })\n\n  // When arguments update, make a new call to SOR for updated quote\n  useEffect(() => {\n    setLoading(true)\n    fetchQuote()\n\n    async function fetchQuote() {\n      try {\n        if (queryArgs && params) {\n          const result = await getClientSideQuote(queryArgs, params, config)\n          setFetchedResult({\n            quoteResult: result.data,\n            error: result.error,\n          })\n        }\n      } catch (e) {\n        setFetchedResult({\n          quoteResult: undefined,\n          error: true,\n        })\n      } finally {\n        setLoading(false)\n      }\n    }\n  }, [queryArgs, params])\n\n  const route = useMemo(\n    () => computeRoutes(currencyIn, currencyOut, tradeType, quoteResult),\n    [currencyIn, currencyOut, quoteResult, tradeType]\n  )\n\n  // get USD gas cost of trade in active chains stablecoin amount\n  const gasUseEstimateUSD = useStablecoinAmountFromFiatValue(quoteResult?.gasUseEstimateUSD) ?? null\n\n  return useMemo(() => {\n    if (!currencyIn || !currencyOut) {\n      return {\n        state: TradeState.INVALID,\n        trade: undefined,\n      }\n    }\n\n    if (loading && !quoteResult) {\n      // only on first hook render\n      return {\n        state: TradeState.LOADING,\n        trade: undefined,\n      }\n    }\n\n    let otherAmount = undefined\n    if (tradeType === TradeType.EXACT_INPUT && currencyOut && quoteResult) {\n      otherAmount = CurrencyAmount.fromRawAmount(currencyOut, quoteResult.quote)\n    }\n    if (tradeType === TradeType.EXACT_OUTPUT && currencyIn && quoteResult) {\n      otherAmount = CurrencyAmount.fromRawAmount(currencyIn, quoteResult.quote)\n    }\n\n    if (error || !otherAmount || !route || route.length === 0 || !queryArgs) {\n      return {\n        state: TradeState.NO_ROUTE_FOUND,\n        trade: undefined,\n      }\n    }\n\n    try {\n      const trade = transformRoutesToTrade(route, tradeType, gasUseEstimateUSD)\n      return {\n        // always return VALID regardless of isFetching status\n        state: TradeState.VALID,\n        trade,\n      }\n    } catch (e) {\n      console.debug('transformRoutesToTrade failed: ', e)\n      return { state: TradeState.INVALID, trade: undefined }\n    }\n  }, [currencyIn, currencyOut, loading, quoteResult, tradeType, error, route, queryArgs, gasUseEstimateUSD])\n}\n","import { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport useAutoSlippageTolerance from 'hooks/useAutoSlippageTolerance'\nimport { useAtomValue } from 'jotai/utils'\nimport { autoSlippageAtom, maxSlippageAtom } from 'lib/state/settings'\nimport { InterfaceTrade } from 'state/routing/types'\n\nexport function toPercent(maxSlippage: number | undefined): Percent | undefined {\n  if (!maxSlippage) return undefined\n  const numerator = Math.floor(maxSlippage * 100)\n  return new Percent(numerator, 10_000)\n}\n\n/** Returns the user-inputted max slippage. */\nexport default function useMaxSlippage(trade: InterfaceTrade<Currency, Currency, TradeType> | undefined): Percent {\n  const autoSlippage = useAutoSlippageTolerance(trade)\n  const maxSlippage = toPercent(useAtomValue(maxSlippageAtom))\n  return useAtomValue(autoSlippageAtom) ? autoSlippage : maxSlippage ?? autoSlippage\n}\n","import { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { useClientSideV3Trade } from 'hooks/useClientSideV3Trade'\nimport useDebounce from 'hooks/useDebounce'\nimport { useMemo } from 'react'\nimport { InterfaceTrade, TradeState } from 'state/routing/types'\n\nimport useClientSideSmartOrderRouterTrade from '../routing/useClientSideSmartOrderRouterTrade'\n\n/**\n * Returns the currency amount from independent field, currency from independent field,\n * and currency from dependent field.\n */\nfunction getTradeInputs(\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined,\n  tradeType: TradeType\n): [CurrencyAmount<Currency> | undefined, Currency | undefined, Currency | undefined] {\n  if (trade) {\n    if (tradeType === TradeType.EXACT_INPUT) {\n      return [trade.inputAmount, trade.inputAmount.currency, trade.outputAmount.currency]\n    }\n    if (tradeType === TradeType.EXACT_OUTPUT) {\n      return [trade.outputAmount, trade.outputAmount.currency, trade.inputAmount.currency]\n    }\n  }\n  return [undefined, undefined, undefined]\n}\n\ninterface TradeDebouncingParams {\n  amounts: [CurrencyAmount<Currency> | undefined, CurrencyAmount<Currency> | undefined]\n  indepdenentCurrencies: [Currency | undefined, Currency | undefined]\n  dependentCurrencies: [Currency | undefined, Currency | undefined]\n}\n\n/**\n * Returns wether debounced values are stale compared to latest values from trade.\n */\nfunction isTradeDebouncing({ amounts, indepdenentCurrencies, dependentCurrencies }: TradeDebouncingParams): boolean {\n  // Ensure that amount from user input matches latest trade.\n  const amountsMatch = amounts[0] && amounts[1]?.equalTo(amounts[0])\n\n  // Ensure active swap currencies match latest trade.\n  const currenciesMatch =\n    indepdenentCurrencies[0] &&\n    indepdenentCurrencies[1]?.equals(indepdenentCurrencies[0]) &&\n    dependentCurrencies[0] &&\n    dependentCurrencies[1]?.equals(dependentCurrencies[0])\n\n  return !amountsMatch || !currenciesMatch\n}\n\n/**\n * Returns the best v2+v3 trade for a desired swap.\n * @param tradeType whether the swap is an exact in/out\n * @param amountSpecified the exact amount to swap in/out\n * @param otherCurrency the desired output/payment currency\n */\nexport function useBestTrade(\n  tradeType: TradeType,\n  amountSpecified?: CurrencyAmount<Currency>,\n  otherCurrency?: Currency\n): {\n  state: TradeState\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined\n} {\n  // Debounce is used to prevent excessive requests to SOR, as it is data intensive.\n  // This helps provide a \"syncing\" state the UI can reference for loading animations.\n  const [debouncedAmount, debouncedOtherCurrency] = useDebounce(\n    useMemo(() => [amountSpecified, otherCurrency], [amountSpecified, otherCurrency]),\n    200\n  )\n\n  const clientSORTrade = useClientSideSmartOrderRouterTrade(tradeType, debouncedAmount, debouncedOtherCurrency)\n\n  const [amountFromLatestTrade, currencyFromTrade, otherCurrencyFromTrade] = getTradeInputs(\n    clientSORTrade.trade,\n    tradeType\n  )\n\n  const debouncing =\n    (amountSpecified && debouncedAmount && amountSpecified !== debouncedAmount) ||\n    (amountSpecified && debouncedOtherCurrency && otherCurrency && debouncedOtherCurrency !== otherCurrency)\n\n  const syncing =\n    amountSpecified &&\n    isTradeDebouncing({\n      amounts: [amountFromLatestTrade, amountSpecified],\n      indepdenentCurrencies: [currencyFromTrade, amountSpecified?.currency],\n      dependentCurrencies: [otherCurrencyFromTrade, debouncedOtherCurrency],\n    })\n\n  const useFallback = !syncing && clientSORTrade.state === TradeState.NO_ROUTE_FOUND\n\n  // Use a simple client side logic as backup if SOR is not available.\n  const fallbackTrade = useClientSideV3Trade(\n    tradeType,\n    useFallback ? debouncedAmount : undefined,\n    useFallback ? debouncedOtherCurrency : undefined\n  )\n\n  return useMemo(\n    () => ({\n      ...(useFallback ? fallbackTrade : clientSORTrade),\n      ...(syncing ? { state: TradeState.SYNCING } : {}),\n      ...(debouncing ? { state: TradeState.LOADING } : {}),\n    }),\n    [debouncing, fallbackTrade, syncing, clientSORTrade, useFallback]\n  )\n}\n","import { css } from 'lib/theme'\n\n// need to use $loading as `loading` is a reserved prop\nexport const loadingOpacityCss = css<{ $loading: boolean }>`\n  filter: ${({ $loading }) => ($loading ? 'grayscale(1)' : 'none')};\n  opacity: ${({ $loading }) => ($loading ? '0.4' : '1')};\n  transition: opacity 0.2s ease-in-out;\n`\n","import { Currency } from '@uniswap/sdk-core'\nimport styled, { ThemedText } from 'lib/theme'\n\nimport Button from '../Button'\nimport Row from '../Row'\nimport TokenImg from '../TokenImg'\n\nconst TokenButton = styled(Button)`\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  padding: 0.25em 0.75em 0.25em 0.25em;\n`\n\ninterface TokenBaseProps {\n  value: Currency\n  onClick: (value: Currency) => void\n}\n\nexport default function TokenBase({ value, onClick }: TokenBaseProps) {\n  return (\n    <TokenButton onClick={() => onClick(value)}>\n      <ThemedText.ButtonMedium>\n        <Row gap={0.5}>\n          <TokenImg token={value} size={1.5} />\n          {value.symbol}\n        </Row>\n      </ThemedText.ButtonMedium>\n    </TokenButton>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { ChevronDown } from 'lib/icons'\nimport styled, { ThemedText } from 'lib/theme'\nimport { useMemo } from 'react'\n\nimport Button from '../Button'\nimport Row from '../Row'\nimport TokenImg from '../TokenImg'\n\nconst StyledTokenButton = styled(Button)<{ empty?: boolean }>`\n  border-radius: ${({ theme }) => theme.borderRadius}em;\n  padding: 0.25em;\n  padding-left: ${({ empty }) => (empty ? 0.75 : 0.25)}em;\n\n  :disabled {\n    // prevents border from expanding the button's box size\n    padding: calc(0.25em - 1px);\n    padding-left: calc(${({ empty }) => (empty ? 0.75 : 0.25)}em - 1px);\n  }\n`\n\nconst TokenButtonRow = styled(Row)<{ collapsed: boolean }>`\n  height: 1.2em;\n  max-width: ${({ collapsed }) => (collapsed ? '1.2' : '8.2')}em;\n  overflow-x: hidden;\n  transition: max-width 0.25s linear;\n`\n\ninterface TokenButtonProps {\n  value?: Currency\n  collapsed: boolean\n  disabled?: boolean\n  onClick: () => void\n}\n\nexport default function TokenButton({ value, collapsed, disabled, onClick }: TokenButtonProps) {\n  const buttonBackgroundColor = useMemo(() => (value ? 'interactive' : 'accent'), [value])\n  const contentColor = useMemo(() => (value || disabled ? 'onInteractive' : 'onAccent'), [value, disabled])\n  return (\n    <StyledTokenButton onClick={onClick} empty={!value} color={buttonBackgroundColor} disabled={disabled}>\n      <ThemedText.ButtonLarge color={contentColor}>\n        <TokenButtonRow gap={0.4} collapsed={Boolean(value) && collapsed}>\n          {value ? (\n            <>\n              <TokenImg token={value} size={1.2} />\n              {value.symbol}\n            </>\n          ) : (\n            <Trans>Select a token</Trans>\n          )}\n          <ChevronDown color={contentColor} strokeWidth={3} />\n        </TokenButtonRow>\n      </ThemedText.ButtonLarge>\n    </StyledTokenButton>\n  )\n}\n","import { useLingui } from '@lingui/react'\nimport { Currency } from '@uniswap/sdk-core'\nimport useActiveWeb3React from 'lib/hooks/useActiveWeb3React'\nimport useCurrencyBalance from 'lib/hooks/useCurrencyBalance'\nimport useNativeEvent from 'lib/hooks/useNativeEvent'\nimport useScrollbar from 'lib/hooks/useScrollbar'\nimport styled, { ThemedText } from 'lib/theme'\nimport {\n  ComponentClass,\n  CSSProperties,\n  forwardRef,\n  KeyboardEvent,\n  memo,\n  SyntheticEvent,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { areEqual, FixedSizeList, FixedSizeListProps } from 'react-window'\nimport invariant from 'tiny-invariant'\nimport { currencyId } from 'utils/currencyId'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\n\nimport { BaseButton } from '../Button'\nimport Column from '../Column'\nimport Row from '../Row'\nimport TokenImg from '../TokenImg'\n\nconst TokenButton = styled(BaseButton)`\n  border-radius: 0;\n  outline: none;\n  padding: 0.5em 0.75em;\n`\n\nconst ITEM_SIZE = 56\ntype ItemData = Currency[]\ninterface FixedSizeTokenList extends FixedSizeList<ItemData>, ComponentClass<FixedSizeListProps<ItemData>> {}\nconst TokenList = styled(FixedSizeList as unknown as FixedSizeTokenList)<{\n  hover: number\n  scrollbar?: ReturnType<typeof useScrollbar>\n}>`\n  ${TokenButton}[data-index='${({ hover }) => hover}'] {\n    background-color: ${({ theme }) => theme.onHover(theme.module)};\n  }\n\n  ${({ scrollbar }) => scrollbar}\n  overscroll-behavior: none; // prevent Firefox's bouncy overscroll effect (because it does not trigger the scroll handler)\n`\nconst OnHover = styled.div<{ hover: number }>`\n  background-color: ${({ theme }) => theme.onHover(theme.module)};\n  height: ${ITEM_SIZE}px;\n  left: 0;\n  position: absolute;\n  top: ${({ hover }) => hover * ITEM_SIZE}px;\n  width: 100%;\n`\n\ninterface TokenOptionProps {\n  index: number\n  value: Currency\n  style: CSSProperties\n}\n\ninterface BubbledEvent extends SyntheticEvent {\n  index?: number\n  token?: Currency\n  ref?: HTMLButtonElement\n}\n\nfunction TokenOption({ index, value, style }: TokenOptionProps) {\n  const { i18n } = useLingui()\n  const ref = useRef<HTMLButtonElement>(null)\n  // Annotate the event to be handled later instead of passing in handlers to avoid rerenders.\n  // This prevents token logos from reloading and flashing on the screen.\n  const onEvent = (e: BubbledEvent) => {\n    e.index = index\n    e.token = value\n    e.ref = ref.current ?? undefined\n  }\n\n  const { account } = useActiveWeb3React()\n  const balance = useCurrencyBalance(account, value)\n\n  return (\n    <TokenButton\n      data-index={index}\n      style={style}\n      onClick={onEvent}\n      onBlur={onEvent}\n      onFocus={onEvent}\n      onMouseMove={onEvent}\n      onKeyDown={onEvent}\n      ref={ref}\n    >\n      <ThemedText.Body1>\n        <Row>\n          <Row gap={0.5}>\n            <TokenImg token={value} size={1.5} />\n            <Column flex gap={0.125} align=\"flex-start\">\n              <ThemedText.Subhead1>{value.symbol}</ThemedText.Subhead1>\n              <ThemedText.Caption color=\"secondary\">{value.name}</ThemedText.Caption>\n            </Column>\n          </Row>\n          {balance?.greaterThan(0) && formatCurrencyAmount(balance, 2, i18n.locale)}\n        </Row>\n      </ThemedText.Body1>\n    </TokenButton>\n  )\n}\n\nconst itemKey = (index: number, tokens: ItemData) => currencyId(tokens[index])\nconst ItemRow = memo(function ItemRow({\n  data: tokens,\n  index,\n  style,\n}: {\n  data: ItemData\n  index: number\n  style: CSSProperties\n}) {\n  return <TokenOption index={index} value={tokens[index]} style={style} />\n},\nareEqual)\n\ninterface TokenOptionsHandle {\n  onKeyDown: (e: KeyboardEvent) => void\n  blur: () => void\n}\n\ninterface TokenOptionsProps {\n  tokens: Currency[]\n  onSelect: (token: Currency) => void\n}\n\nconst TokenOptions = forwardRef<TokenOptionsHandle, TokenOptionsProps>(function TokenOptions(\n  { tokens, onSelect }: TokenOptionsProps,\n  ref\n) {\n  const [focused, setFocused] = useState(false)\n  const [hover, setHover] = useState(-1)\n  useEffect(() => setHover(-1), [tokens])\n\n  const list = useRef<FixedSizeList>(null)\n  const onKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n        if (e.key === 'ArrowDown' && hover < tokens.length - 1) {\n          scrollTo(hover + 1)\n        } else if (e.key === 'ArrowUp' && hover > 0) {\n          scrollTo(hover - 1)\n        } else if (e.key === 'ArrowUp' && hover === -1) {\n          scrollTo(tokens.length - 1)\n        }\n        e.preventDefault()\n      }\n      if (e.key === 'Enter' && hover) {\n        onSelect(tokens[hover])\n      }\n\n      function scrollTo(index: number) {\n        list.current?.scrollToItem(index)\n        setHover(index)\n      }\n    },\n    [hover, onSelect, tokens]\n  )\n  const blur = useCallback(() => setHover(-1), [])\n  useImperativeHandle(ref, () => ({ onKeyDown, blur }), [blur, onKeyDown])\n\n  const onClick = useCallback(({ token }: BubbledEvent) => token && onSelect(token), [onSelect])\n  const onFocus = useCallback(({ index }: BubbledEvent) => {\n    if (index !== undefined) {\n      setHover(index)\n      setFocused(true)\n    }\n  }, [])\n  const onBlur = useCallback(() => setFocused(false), [])\n  const onMouseMove = useCallback(\n    ({ index, ref }: BubbledEvent) => {\n      if (index !== undefined) {\n        setHover(index)\n        if (focused) {\n          ref?.focus()\n        }\n      }\n    },\n    [focused]\n  )\n\n  const [element, setElement] = useState<HTMLElement | null>(null)\n  const scrollbar = useScrollbar(element, { padded: true })\n\n  const onHover = useRef<HTMLDivElement>(null)\n  // use native onscroll handler to capture Safari's bouncy overscroll effect\n  useNativeEvent(element, 'scroll', (e) => {\n    invariant(element)\n    if (onHover.current) {\n      // must be set synchronously to avoid jank (avoiding useState)\n      onHover.current.style.marginTop = `${-element.scrollTop}px`\n    }\n  })\n\n  return (\n    <Column\n      align=\"unset\"\n      grow\n      onKeyDown={onKeyDown}\n      onClick={onClick}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      onMouseMove={onMouseMove}\n      style={{ overflow: 'hidden' }}\n    >\n      {/* OnHover is a workaround to Safari's incorrect (overflow: overlay) implementation */}\n      <OnHover hover={hover} ref={onHover} />\n      <AutoSizer disableWidth>\n        {({ height }) => (\n          <TokenList\n            hover={hover}\n            height={height}\n            width=\"100%\"\n            itemCount={tokens.length}\n            itemData={tokens}\n            itemKey={itemKey}\n            itemSize={ITEM_SIZE}\n            className=\"scrollbar\"\n            ref={list}\n            outerRef={setElement}\n            scrollbar={scrollbar}\n          >\n            {ItemRow}\n          </TokenList>\n        )}\n      </AutoSizer>\n    </Column>\n  )\n})\n\nexport default TokenOptions\n","import { Currency } from '@uniswap/sdk-core'\nimport { useTheme } from 'lib/theme'\nimport Vibrant from 'node-vibrant/lib/bundle'\nimport { useEffect, useLayoutEffect, useState } from 'react'\n\nimport useCurrencyLogoURIs from './useCurrencyLogoURIs'\n\nconst colors = new Map<string, string | undefined>()\n\n/**\n * Extracts the prominent color from a token.\n * NB: If cached, this function returns synchronously; using a callback allows sync or async returns.\n */\nasync function getColorFromLogoURIs(logoURIs: string[], cb: (color: string | undefined) => void = () => void 0) {\n  const key = logoURIs[0]\n  let color = colors.get(key)\n\n  if (!color) {\n    for (const logoURI of logoURIs) {\n      let uri = logoURI\n      if (logoURI.startsWith('http')) {\n        // Color extraction must use a CORS-compatible resource, but the resource may already be cached.\n        // Adds a dummy parameter to force a different browser resource cache entry. Without this, color extraction prevents resource caching.\n        uri += '?color'\n      }\n\n      color = await getColorFromUriPath(uri)\n      if (color) break\n    }\n  }\n\n  colors.set(key, color)\n  return cb(color)\n}\n\nasync function getColorFromUriPath(uri: string): Promise<string | undefined> {\n  try {\n    const palette = await Vibrant.from(uri).getPalette()\n    return palette.Vibrant?.hex\n  } catch {}\n  return\n}\n\nexport function usePrefetchCurrencyColor(token?: Currency) {\n  const theme = useTheme()\n  const logoURIs = useCurrencyLogoURIs(token)\n\n  useEffect(() => {\n    if (theme.tokenColorExtraction && token) {\n      getColorFromLogoURIs(logoURIs)\n    }\n  }, [token, logoURIs, theme.tokenColorExtraction])\n}\n\nexport default function useCurrencyColor(token?: Currency) {\n  const [color, setColor] = useState<string | undefined>(undefined)\n  const theme = useTheme()\n  const logoURIs = useCurrencyLogoURIs(token)\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (theme.tokenColorExtraction && token) {\n      getColorFromLogoURIs(logoURIs, (color) => {\n        if (!stale && color) {\n          setColor(color)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor(undefined)\n    }\n  }, [token, logoURIs, theme.tokenColorExtraction])\n\n  return color\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { loadingOpacityCss } from 'lib/css/loading'\nimport styled, { keyframes, ThemedText } from 'lib/theme'\nimport { FocusEvent, ReactNode, useCallback, useRef, useState } from 'react'\n\nimport Button from '../Button'\nimport Column from '../Column'\nimport { DecimalInput } from '../Input'\nimport Row from '../Row'\nimport TokenSelect from '../TokenSelect'\n\nconst TokenInputRow = styled(Row)`\n  grid-template-columns: 1fr;\n`\n\nconst ValueInput = styled(DecimalInput)<{ $loading: boolean }>`\n  color: ${({ theme }) => theme.primary};\n\n  :hover:not(:focus-within) {\n    color: ${({ theme }) => theme.onHover(theme.primary)};\n  }\n\n  :hover:not(:focus-within)::placeholder {\n    color: ${({ theme }) => theme.onHover(theme.secondary)};\n  }\n\n  ${loadingOpacityCss}\n`\n\nconst delayedFadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  25% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`\n\nconst MaxButton = styled(Button)`\n  animation: ${delayedFadeIn} 0.25s linear;\n  border-radius: 0.75em;\n  padding: 0.5em;\n`\n\ninterface TokenInputProps {\n  currency?: Currency\n  amount: string\n  disabled?: boolean\n  onMax?: () => void\n  onChangeInput: (input: string) => void\n  onChangeCurrency: (currency: Currency) => void\n  loading?: boolean\n  children: ReactNode\n}\n\nexport default function TokenInput({\n  currency,\n  amount,\n  disabled,\n  onMax,\n  onChangeInput,\n  onChangeCurrency,\n  loading,\n  children,\n}: TokenInputProps) {\n  const max = useRef<HTMLButtonElement>(null)\n  const [showMax, setShowMax] = useState(false)\n  const onFocus = useCallback(() => setShowMax(Boolean(onMax)), [onMax])\n  const onBlur = useCallback((e: FocusEvent) => {\n    if (e.relatedTarget !== max.current) {\n      setShowMax(false)\n    }\n  }, [])\n\n  return (\n    <Column gap={0.25}>\n      <TokenInputRow gap={0.5} onBlur={onBlur}>\n        <ThemedText.H2>\n          <ValueInput\n            value={amount}\n            onFocus={onFocus}\n            onChange={onChangeInput}\n            disabled={disabled || !currency}\n            $loading={Boolean(loading)}\n          ></ValueInput>\n        </ThemedText.H2>\n        {showMax && (\n          <MaxButton onClick={onMax} ref={max}>\n            <ThemedText.ButtonMedium>\n              <Trans>Max</Trans>\n            </ThemedText.ButtonMedium>\n          </MaxButton>\n        )}\n        <TokenSelect value={currency} collapsed={showMax} disabled={disabled} onSelect={onChangeCurrency} />\n      </TokenInputRow>\n      {children}\n    </Column>\n  )\n}\n","import { HTMLProps } from 'react'\n\n/**\n * Outbound link\n */\nexport default function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  return (\n    <a target={target} rel={rel} href={href} {...rest}>\n      {rest.children}\n    </a>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Row from 'lib/components/Row'\nimport { Logo } from 'lib/icons'\nimport styled, { brand, ThemedText } from 'lib/theme'\n\nimport ExternalLink from './ExternalLink'\n\nconst UniswapA = styled(ExternalLink)`\n  color: ${({ theme }) => theme.secondary};\n  cursor: pointer;\n  text-decoration: none;\n\n  ${Logo} {\n    fill: ${({ theme }) => theme.secondary};\n    height: 1em;\n    transition: transform 0.25s ease, fill 0.25s ease;\n    width: 1em;\n    will-change: transform;\n  }\n\n  :hover ${Logo} {\n    fill: ${brand};\n    transform: rotate(-5deg);\n  }\n`\n\nexport default function BrandedFooter() {\n  return (\n    <Row justify=\"center\">\n      <UniswapA href={`https://app.uniswap.org/`}>\n        <Row gap={0.25}>\n          <Logo />\n          <ThemedText.Caption>\n            <Trans>Powered by the Uniswap protocol</Trans>\n          </ThemedText.Caption>\n        </Row>\n      </UniswapA>\n    </Row>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useLingui } from '@lingui/react'\nimport { useUSDCValue } from 'hooks/useUSDCPrice'\nimport { atom } from 'jotai'\nimport { useAtomValue } from 'jotai/utils'\nimport BrandedFooter from 'lib/components/BrandedFooter'\nimport { loadingOpacityCss } from 'lib/css/loading'\nimport { useSwapAmount, useSwapCurrency, useSwapInfo } from 'lib/hooks/swap'\nimport useCurrencyColor from 'lib/hooks/useCurrencyColor'\nimport { Field, independentFieldAtom } from 'lib/state/swap'\nimport styled, { DynamicThemeProvider, ThemedText } from 'lib/theme'\nimport { ReactNode, useMemo } from 'react'\nimport { TradeState } from 'state/routing/types'\nimport { computeFiatValuePriceImpact } from 'utils/computeFiatValuePriceImpact'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\n\nimport Column from '../Column'\nimport Row from '../Row'\nimport TokenInput from './TokenInput'\n\nexport const colorAtom = atom<string | undefined>(undefined)\n\nconst LoadingSpan = styled.span<{ $loading: boolean }>`\n  ${loadingOpacityCss};\n`\n\nconst OutputColumn = styled(Column)<{ hasColor: boolean | null }>`\n  background-color: ${({ theme }) => theme.module};\n  border-radius: ${({ theme }) => theme.borderRadius - 0.25}em;\n  padding: 0.75em;\n  padding-bottom: 0.5em;\n  position: relative;\n\n  // Set transitions to reduce color flashes when switching color/token.\n  // When color loads, transition the background so that it transitions from the empty or last state, but not _to_ the empty state.\n  transition: ${({ hasColor }) => (hasColor ? 'background-color 0.25s ease-out' : undefined)};\n  > {\n    // When color is loading, delay the color/stroke so that it seems to transition from the last state.\n    transition: ${({ hasColor }) => (hasColor === null ? 'color 0.25s ease-in, stroke 0.25s ease-in' : undefined)};\n  }\n`\n\ninterface OutputProps {\n  disabled?: boolean\n  children: ReactNode\n}\n\nexport default function Output({ disabled, children }: OutputProps) {\n  const { i18n } = useLingui()\n\n  const {\n    trade: { state: tradeState },\n    currencyBalances: { [Field.OUTPUT]: balance },\n    currencyAmounts: { [Field.INPUT]: inputCurrencyAmount, [Field.OUTPUT]: outputCurrencyAmount },\n  } = useSwapInfo()\n\n  const [swapOutputAmount, updateSwapOutputAmount] = useSwapAmount(Field.OUTPUT)\n  const [swapOutputCurrency, updateSwapOutputCurrency] = useSwapCurrency(Field.OUTPUT)\n\n  //loading status of the trade\n  const isTradeLoading = useMemo(\n    () => TradeState.LOADING === tradeState || TradeState.SYNCING === tradeState,\n    [tradeState]\n  )\n\n  const isDependentField = useAtomValue(independentFieldAtom) !== Field.OUTPUT\n  const isLoading = isDependentField && isTradeLoading\n\n  const overrideColor = useAtomValue(colorAtom)\n  const dynamicColor = useCurrencyColor(swapOutputCurrency)\n  const color = overrideColor || dynamicColor\n\n  // different state true/null/false allow smoother color transition\n  const hasColor = swapOutputCurrency ? Boolean(color) || null : false\n\n  const inputUSDC = useUSDCValue(inputCurrencyAmount)\n  const outputUSDC = useUSDCValue(outputCurrencyAmount)\n\n  const priceImpact = useMemo(() => {\n    const computedChange = computeFiatValuePriceImpact(inputUSDC, outputUSDC)\n    return computedChange ? parseFloat(computedChange.multiply(-1)?.toSignificant(3)) : undefined\n  }, [inputUSDC, outputUSDC])\n\n  const usdc = useMemo(() => {\n    if (outputUSDC) {\n      return `$${outputUSDC.toFixed(2)} (${priceImpact && priceImpact > 0 ? '+' : ''}${priceImpact}%)`\n    }\n    return ''\n  }, [priceImpact, outputUSDC])\n\n  return (\n    <DynamicThemeProvider color={color}>\n      <OutputColumn hasColor={hasColor} gap={0.5}>\n        <Row>\n          <ThemedText.Subhead2 color=\"secondary\">\n            <Trans>For</Trans>\n          </ThemedText.Subhead2>\n        </Row>\n        <TokenInput\n          currency={swapOutputCurrency}\n          amount={(swapOutputAmount !== undefined ? swapOutputAmount : outputCurrencyAmount?.toSignificant(6)) ?? ''}\n          disabled={disabled}\n          onChangeInput={updateSwapOutputAmount}\n          onChangeCurrency={updateSwapOutputCurrency}\n          loading={isLoading}\n        >\n          <ThemedText.Body2 color=\"secondary\">\n            <Row>\n              <LoadingSpan $loading={isLoading}>{usdc}</LoadingSpan>\n              {balance && (\n                <span>\n                  Balance: <span style={{ userSelect: 'text' }}>{formatCurrencyAmount(balance, 4, i18n.locale)}</span>\n                </span>\n              )}\n            </Row>\n          </ThemedText.Body2>\n        </TokenInput>\n        {children}\n        <BrandedFooter />\n      </OutputColumn>\n    </DynamicThemeProvider>\n  )\n}\n"],"sourceRoot":""}