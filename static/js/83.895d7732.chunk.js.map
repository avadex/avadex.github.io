{"version":3,"sources":["lib/hooks/useTokenList/fetchTokenList.test.ts"],"names":["describe","resolver","jest","fn","it","a","url","expect","fetchTokenList","rejects","toThrowError","not","toHaveBeenCalled","mockResolvedValue","toThrow","toHaveBeenCalledWith","fetch","DEFAULT_TOKEN_LIST","json","list","resolves","toStrictEqual"],"mappings":"yKAEAA,SAAS,kBAAkB,WACzB,IAAMC,EAAWC,KAAKC,KAEtBC,GAAG,gCAAD,sBAAkC,4BAAAC,EAAA,6DAC5BC,EAAM,sBADsB,SAE5BC,OAAOC,kBAAeF,EAAKL,IAAWQ,QAAQC,aAA9C,gCAAoFJ,IAFxD,OAGlCC,OAAON,GAAUU,IAAIC,mBAHa,4CAMpCR,GAAG,0DAAD,sBAA4D,4BAAAC,EAAA,6DACtDC,EAAM,cACQ,aACpBL,EAASY,kBADW,cAFwC,SAItDN,OAAOC,kBAAeF,EAAKL,IAAWQ,QAAQK,UAJQ,OAK5DP,OAAON,GAAUc,qBAAqBT,GALsB,4CAQ9DF,GAAG,+CAAD,sBAAiD,4BAAAC,EAAA,sEACvBW,MAAMC,sBADiB,8BACIC,OADJ,cAC3CC,EAD2C,gBAE3CZ,OAAOC,kBAAeS,qBAAoBhB,IAAWmB,SAASC,cAAcF,GAFjC,OAGjDZ,OAAON,GAAUU,IAAIC,mBAH4B","file":"static/js/83.895d7732.chunk.js","sourcesContent":["import fetchTokenList, { DEFAULT_TOKEN_LIST } from './fetchTokenList'\n\ndescribe('fetchTokenList', () => {\n  const resolver = jest.fn()\n\n  it('throws on an invalid list url', async () => {\n    const url = 'https://example.com'\n    await expect(fetchTokenList(url, resolver)).rejects.toThrowError(`failed to fetch list: ${url}`)\n    expect(resolver).not.toHaveBeenCalled()\n  })\n\n  it('tries to fetch an ENS address using the passed resolver', async () => {\n    const url = 'example.eth'\n    const contenthash = '0xD3ADB33F'\n    resolver.mockResolvedValue(contenthash)\n    await expect(fetchTokenList(url, resolver)).rejects.toThrow()\n    expect(resolver).toHaveBeenCalledWith(url)\n  })\n\n  it('fetches and validates the default token list', async () => {\n    const list = await (await fetch(DEFAULT_TOKEN_LIST)).json()\n    await expect(fetchTokenList(DEFAULT_TOKEN_LIST, resolver)).resolves.toStrictEqual(list)\n    expect(resolver).not.toHaveBeenCalled()\n  })\n})\n"],"sourceRoot":""}