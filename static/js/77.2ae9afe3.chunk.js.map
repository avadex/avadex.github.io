{"version":3,"sources":["../node_modules/@web3-react/eip1193/dist/index.js","../node_modules/@web3-react/url/dist/index.js","lib/components/Web3Provider.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","parseChainId","chainId","Number","parseInt","EIP1193","actions","provider","connectEagerly","on","update","error","reportError","accounts","cancelActivation","startActivation","all","request","method","catch","console","debug","this","Connector","Url","url","initialize","JsonRpcProvider","Eip1193Bridge","getSigner","useConnector","initializer","setContext","useEffect","initializeConnector","connector","hooks","RESET","Web3Provider","jsonRpcEndpoint","children","setUrl","useUpdateAtom","urlAtom","setInjected","injectedAtom"],"mappings":"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","file":"static/js/77.2ae9afe3.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Connector } from '@web3-react/types';\nfunction parseChainId(chainId) {\n    return Number.parseInt(chainId, 16);\n}\nexport class EIP1193 extends Connector {\n    constructor(actions, provider, connectEagerly = true) {\n        super(actions);\n        this.provider = provider;\n        this.provider.on('connect', ({ chainId }) => {\n            this.actions.update({ chainId: parseChainId(chainId) });\n        });\n        this.provider.on('disconnect', (error) => {\n            this.actions.reportError(error);\n        });\n        this.provider.on('chainChanged', (chainId) => {\n            this.actions.update({ chainId: parseChainId(chainId) });\n        });\n        this.provider.on('accountsChanged', (accounts) => {\n            this.actions.update({ accounts });\n        });\n        if (connectEagerly) {\n            const cancelActivation = this.actions.startActivation();\n            Promise.all([\n                this.provider.request({ method: 'eth_chainId' }),\n                this.provider.request({ method: 'eth_accounts' }),\n            ])\n                .then(([chainId, accounts]) => {\n                this.actions.update({ chainId: parseChainId(chainId), accounts });\n            })\n                .catch((error) => {\n                console.debug('Could not connect eagerly', error);\n                cancelActivation();\n            });\n        }\n    }\n    activate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.actions.startActivation();\n            return Promise.all([\n                this.provider.request({ method: 'eth_chainId' }),\n                this.provider.request({ method: 'eth_requestAccounts' }),\n            ])\n                .then(([chainId, accounts]) => {\n                this.actions.update({ chainId: parseChainId(chainId), accounts });\n            })\n                .catch((error) => {\n                this.actions.reportError(error);\n            });\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Connector } from '@web3-react/types';\nexport class Url extends Connector {\n    constructor(actions, url, connectEagerly = true) {\n        super(actions);\n        this.url = url;\n        if (connectEagerly) {\n            void this.initialize();\n        }\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.actions.startActivation();\n            // create the provider if necessary\n            if (!this.provider) {\n                // instantiate new provider\n                const [JsonRpcProvider, Eip1193Bridge] = yield Promise.all([\n                    import('@ethersproject/providers').then(({ JsonRpcProvider }) => JsonRpcProvider),\n                    import('@ethersproject/experimental').then(({ Eip1193Bridge }) => Eip1193Bridge),\n                ]);\n                const provider = new JsonRpcProvider(this.url);\n                this.provider = new Eip1193Bridge(provider.getSigner(), provider);\n            }\n            return this.provider\n                .request({ method: 'eth_chainId' })\n                .then((chainId) => {\n                this.actions.update({ chainId, accounts: [] });\n            })\n                .catch((error) => {\n                this.actions.reportError(error);\n            });\n        });\n    }\n    activate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.initialize();\n        });\n    }\n}\n","import { initializeConnector, Web3ReactHooks } from '@web3-react/core'\nimport { EIP1193 } from '@web3-react/eip1193'\nimport { Actions, Connector, Provider as EthProvider } from '@web3-react/types'\nimport { Url } from '@web3-react/url'\nimport { SetStateAction } from 'jotai'\nimport { RESET, useUpdateAtom } from 'jotai/utils'\nimport { injectedAtom, urlAtom } from 'lib/state/web3'\nimport { ReactNode, useEffect } from 'react'\n\ninterface Web3ProviderProps {\n  jsonRpcEndpoint?: string\n  provider?: EthProvider\n  children: ReactNode\n}\n\nfunction useConnector<T extends { new (actions: Actions, initializer: I): Connector }, I>(\n  Connector: T,\n  initializer: I | undefined,\n  setContext: (update: typeof RESET | SetStateAction<[Connector, Web3ReactHooks]>) => void\n) {\n  return useEffect(() => {\n    if (initializer) {\n      const [connector, hooks] = initializeConnector((actions) => new Connector(actions, initializer))\n      setContext([connector, hooks])\n    } else {\n      setContext(RESET)\n    }\n  }, [Connector, initializer, setContext])\n}\n\nexport default function Web3Provider({ jsonRpcEndpoint, provider, children }: Web3ProviderProps) {\n  const setUrl = useUpdateAtom(urlAtom)\n  useConnector(Url, jsonRpcEndpoint, setUrl)\n\n  const setInjected = useUpdateAtom(injectedAtom)\n  useConnector(EIP1193, provider, setInjected)\n\n  return <>{children}</>\n}\n"],"sourceRoot":""}