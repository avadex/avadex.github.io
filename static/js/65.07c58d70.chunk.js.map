{"version":3,"sources":["lib/errors.ts","lib/components/Error/WidgetsPropsValidator.tsx"],"names":["IntegrationError","message","name","Error","WidgetsPropsValidator","props","jsonRpcEndpoint","provider","useEffect","width","locale","SUPPORTED_LOCALES","includes","console","warn","children"],"mappings":"mOAAaA,EAAb,kDACE,WAAYC,GAAkB,IAAD,8BAC3B,cAAMA,IACDC,KAAO,oBAFe,EAD/B,mCAAsCC,S,iCCAtC,mFAKe,SAASC,EAAsBC,GAC5C,IAAQC,EAA8BD,EAA9BC,gBAAiBC,EAAaF,EAAbE,SAEzBC,qBAAU,WACR,IAAKD,IAAaD,EAChB,MAAM,IAAIN,mBAAiB,yDAE5B,CAACO,EAAUD,IAEd,IAAQG,EAAUJ,EAAVI,MACRD,qBAAU,WACR,GAAIC,GAASA,EAAQ,IACnB,MAAM,IAAIT,mBAAJ,6DAA2ES,EAA3E,SAEP,CAACA,IAEJ,IAAQC,EAAWL,EAAXK,OAOR,OANAF,qBAAU,WACJE,GAAqB,WAAXA,IAAwBC,IAAkBC,SAASF,IAC/DG,QAAQC,KAAK,uBAAwBJ,KAEtC,CAACA,IAEG,mCAAGL,EAAMU","file":"static/js/65.07c58d70.chunk.js","sourcesContent":["export class IntegrationError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'Integration Error'\n  }\n}\n","import { SUPPORTED_LOCALES } from 'constants/locales'\nimport { WidgetProps } from 'lib/components/Widget'\nimport { IntegrationError } from 'lib/errors'\nimport { PropsWithChildren, useEffect } from 'react'\n\nexport default function WidgetsPropsValidator(props: PropsWithChildren<WidgetProps>) {\n  const { jsonRpcEndpoint, provider } = props\n\n  useEffect(() => {\n    if (!provider && !jsonRpcEndpoint) {\n      throw new IntegrationError('This widget requires a provider or jsonRpcEndpoint.')\n    }\n  }, [provider, jsonRpcEndpoint])\n\n  const { width } = props\n  useEffect(() => {\n    if (width && width < 300) {\n      throw new IntegrationError(`Set widget width to at least 300px. (You set it to ${width}.)`)\n    }\n  }, [width])\n\n  const { locale } = props\n  useEffect(() => {\n    if (locale && locale !== 'pseudo' && !SUPPORTED_LOCALES.includes(locale)) {\n      console.warn('Unsupported locale: ', locale)\n    }\n  }, [locale])\n\n  return <>{props.children}</>\n}\n"],"sourceRoot":""}